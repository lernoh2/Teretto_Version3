{
	"id": "691de7dd3f9ecaf6121822b39740acc9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC777.sol\";\nimport \"./IERC777Recipient.sol\";\nimport \"./IERC777Sender.sol\";\nimport \"../ERC20/IERC20.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/IERC1820Registry.sol\";\n\n/**\n * @dev Implementation of the {IERC777} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * Support for ERC20 is included in this contract, as specified by the EIP: both\n * the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n * Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n * movements.\n *\n * Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n * are no special restrictions in the amount of tokens that created, moved, or\n * destroyed. This makes integration with ERC20 applications seamless.\n */\ncontract ERC777 is Context, IERC777, IERC20 {\n    using Address for address;\n\n    IERC1820Registry constant internal _ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n    mapping(address => uint256) private _balances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(\"ERC777TokensSender\");\n    bytes32 private constant _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\"ERC777TokensRecipient\");\n\n    // This isn't ever read from - it's only used to respond to the defaultOperators query.\n    address[] private _defaultOperatorsArray;\n\n    // Immutable, but accounts may revoke them (tracked in __revokedDefaultOperators).\n    mapping(address => bool) private _defaultOperators;\n\n    // For each account, a mapping of its operators and revoked default operators.\n    mapping(address => mapping(address => bool)) private _operators;\n    mapping(address => mapping(address => bool)) private _revokedDefaultOperators;\n\n    // ERC20-allowances\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    /**\n     * @dev `defaultOperators` may be an empty array.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address[] memory defaultOperators_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n\n        _defaultOperatorsArray = defaultOperators_;\n        for (uint256 i = 0; i < defaultOperators_.length; i++) {\n            _defaultOperators[defaultOperators_[i]] = true;\n        }\n\n        // register interfaces\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this));\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this));\n    }\n\n    /**\n     * @dev See {IERC777-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC777-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {ERC20-decimals}.\n     *\n     * Always returns 18, as per the\n     * [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\n     */\n    function decimals() public pure virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC777-granularity}.\n     *\n     * This implementation always returns `1`.\n     */\n    function granularity() public view virtual override returns (uint256) {\n        return 1;\n    }\n\n    /**\n     * @dev See {IERC777-totalSupply}.\n     */\n    function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`tokenHolder`).\n     */\n    function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _balances[tokenHolder];\n    }\n\n    /**\n     * @dev See {IERC777-send}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function send(address recipient, uint256 amount, bytes memory data) public virtual override  {\n        _send(_msgSender(), recipient, amount, data, \"\", true);\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n     * interface if it is a contract.\n     *\n     * Also emits a {Sent} event.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n\n        address from = _msgSender();\n\n        _callTokensToSend(from, from, recipient, amount, \"\", \"\");\n\n        _move(from, from, recipient, amount, \"\", \"\");\n\n        _callTokensReceived(from, from, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev See {IERC777-burn}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function burn(uint256 amount, bytes memory data) public virtual override  {\n        _burn(_msgSender(), amount, data, \"\");\n    }\n\n    /**\n     * @dev See {IERC777-isOperatorFor}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {\n        return operator == tokenHolder ||\n            (_defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator]) ||\n            _operators[tokenHolder][operator];\n    }\n\n    /**\n     * @dev See {IERC777-authorizeOperator}.\n     */\n    function authorizeOperator(address operator) public virtual override  {\n        require(_msgSender() != operator, \"ERC777: authorizing self as operator\");\n\n        if (_defaultOperators[operator]) {\n            delete _revokedDefaultOperators[_msgSender()][operator];\n        } else {\n            _operators[_msgSender()][operator] = true;\n        }\n\n        emit AuthorizedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-revokeOperator}.\n     */\n    function revokeOperator(address operator) public virtual override  {\n        require(operator != _msgSender(), \"ERC777: revoking self as operator\");\n\n        if (_defaultOperators[operator]) {\n            _revokedDefaultOperators[_msgSender()][operator] = true;\n        } else {\n            delete _operators[_msgSender()][operator];\n        }\n\n        emit RevokedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-defaultOperators}.\n     */\n    function defaultOperators() public view virtual override returns (address[] memory) {\n        return _defaultOperatorsArray;\n    }\n\n    /**\n     * @dev See {IERC777-operatorSend}.\n     *\n     * Emits {Sent} and {IERC20-Transfer} events.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    )\n        public\n        virtual\n        override\n    {\n        require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\");\n        _send(sender, recipient, amount, data, operatorData, true);\n    }\n\n    /**\n     * @dev See {IERC777-operatorBurn}.\n     *\n     * Emits {Burned} and {IERC20-Transfer} events.\n     */\n    function operatorBurn(address account, uint256 amount, bytes memory data, bytes memory operatorData) public virtual override {\n        require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\");\n        _burn(account, amount, data, operatorData);\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     *\n     * Note that operator and allowance concepts are orthogonal: operators may\n     * not have allowance, and accounts with allowance may not be operators\n     * themselves.\n     */\n    function allowance(address holder, address spender) public view virtual override returns (uint256) {\n        return _allowances[holder][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\n        address holder = _msgSender();\n        _approve(holder, spender, value);\n        return true;\n    }\n\n   /**\n    * @dev See {IERC20-transferFrom}.\n    *\n    * Note that operator and allowance concepts are orthogonal: operators cannot\n    * call `transferFrom` (unless they have allowance), and accounts with\n    * allowance cannot call `operatorSend` (unless they are operators).\n    *\n    * Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\n    */\n    function transferFrom(address holder, address recipient, uint256 amount) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n        require(holder != address(0), \"ERC777: transfer from the zero address\");\n\n        address spender = _msgSender();\n\n        _callTokensToSend(spender, holder, recipient, amount, \"\", \"\");\n\n        _move(spender, holder, recipient, amount, \"\", \"\");\n\n        uint256 currentAllowance = _allowances[holder][spender];\n        require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\");\n        _approve(holder, spender, currentAllowance - amount);\n\n        _callTokensReceived(spender, holder, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    )\n        internal\n        virtual\n    {\n        _mint(account, amount, userData, operatorData, true);\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If `requireReceptionAck` is set to true, and if a send hook is\n     * registered for `account`, the corresponding function will be called with\n     * `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    )\n        internal\n        virtual\n    {\n        require(account != address(0), \"ERC777: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, amount);\n\n        // Update state variables\n        _totalSupply += amount;\n        _balances[account] += amount;\n\n        _callTokensReceived(operator, address(0), account, amount, userData, operatorData, requireReceptionAck);\n\n        emit Minted(operator, account, amount, userData, operatorData);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Send tokens\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _send(\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    )\n        internal\n        virtual\n    {\n        require(from != address(0), \"ERC777: send from the zero address\");\n        require(to != address(0), \"ERC777: send to the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, to, amount, userData, operatorData);\n\n        _move(operator, from, to, amount, userData, operatorData);\n\n        _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck);\n    }\n\n    /**\n     * @dev Burn tokens\n     * @param from address token holder address\n     * @param amount uint256 amount of tokens to burn\n     * @param data bytes extra information provided by the token holder\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _burn(\n        address from,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    )\n        internal\n        virtual\n    {\n        require(from != address(0), \"ERC777: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, address(0), amount, data, operatorData);\n\n        _beforeTokenTransfer(operator, from, address(0), amount);\n\n        // Update state variables\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\");\n        _balances[from] = fromBalance - amount;\n        _totalSupply -= amount;\n\n        emit Burned(operator, from, amount, data, operatorData);\n        emit Transfer(from, address(0), amount);\n    }\n\n    function _move(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    )\n        private\n    {\n        _beforeTokenTransfer(operator, from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\");\n        _balances[from] = fromBalance - amount;\n        _balances[to] += amount;\n\n        emit Sent(operator, from, to, amount, userData, operatorData);\n        emit Transfer(from, to, amount);\n    }\n\n    /**\n     * @dev See {ERC20-_approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function _approve(address holder, address spender, uint256 value) internal {\n        require(holder != address(0), \"ERC777: approve from the zero address\");\n        require(spender != address(0), \"ERC777: approve to the zero address\");\n\n        _allowances[holder][spender] = value;\n        emit Approval(holder, spender, value);\n    }\n\n    /**\n     * @dev Call from.tokensToSend() if the interface is registered\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _callTokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    )\n        private\n    {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData);\n        }\n    }\n\n    /**\n     * @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n     * tokensReceived() was not registered for the recipient\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _callTokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    )\n        private\n    {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData);\n        } else if (requireReceptionAck) {\n            require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\");\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes\n     * calls to {send}, {transfer}, {operatorSend}, minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address operator, address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the global ERC1820 Registry, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n * implementers for interfaces in this registry, as well as query support.\n *\n * Implementers may be shared by multiple accounts, and can also implement more\n * than a single interface for each account. Contracts can implement interfaces\n * for themselves, but externally-owned accounts (EOA) must delegate this to a\n * contract.\n *\n * {IERC165} interfaces can also be queried via the registry.\n *\n * For an in-depth explanation and source code analysis, see the EIP text.\n */\ninterface IERC1820Registry {\n    /**\n     * @dev Sets `newManager` as the manager for `account`. A manager of an\n     * account is able to set interface implementers for it.\n     *\n     * By default, each account is its own manager. Passing a value of `0x0` in\n     * `newManager` will reset the manager to this initial state.\n     *\n     * Emits a {ManagerChanged} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     */\n    function setManager(address account, address newManager) external;\n\n    /**\n     * @dev Returns the manager for `account`.\n     *\n     * See {setManager}.\n     */\n    function getManager(address account) external view returns (address);\n\n    /**\n     * @dev Sets the `implementer` contract as ``account``'s implementer for\n     * `interfaceHash`.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     * The zero address can also be used in `implementer` to remove an old one.\n     *\n     * See {interfaceHash} to learn how these are created.\n     *\n     * Emits an {InterfaceImplementerSet} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     * - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n     * end in 28 zeroes).\n     * - `implementer` must implement {IERC1820Implementer} and return true when\n     * queried for support, unless `implementer` is the caller. See\n     * {IERC1820Implementer-canImplementInterfaceForAddress}.\n     */\n    function setInterfaceImplementer(address account, bytes32 _interfaceHash, address implementer) external;\n\n    /**\n     * @dev Returns the implementer of `interfaceHash` for `account`. If no such\n     * implementer is registered, returns the zero address.\n     *\n     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n     * zeroes), `account` will be queried for support of it.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     */\n    function getInterfaceImplementer(address account, bytes32 _interfaceHash) external view returns (address);\n\n    /**\n     * @dev Returns the interface hash for an `interfaceName`, as defined in the\n     * corresponding\n     * https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\n     */\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\n\n    /**\n     * @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n     * @param account Address of the contract for which to update the cache.\n     * @param interfaceId ERC165 interface for which to update the cache.\n     */\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\n\n    /**\n     * @notice Checks whether a contract implements an ERC165 interface or not.\n     * If the result is not cached a direct lookup on the contract address is performed.\n     * If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n     * {updateERC165Cache} with the contract address.\n     * @param account Address of the contract to check.\n     * @param interfaceId ERC165 interface to check.\n     * @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\n\n    /**\n     * @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n     * @param account Address of the contract to check.\n     * @param interfaceId ERC165 interface to check.\n     * @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\n\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\n\n    event ManagerChanged(address indexed account, address indexed newManager);\n}\n"
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777TokensSender standard as defined in the EIP.\n *\n * {IERC777} Token holders can be notified of operations performed on their\n * tokens by having a contract implement this interface (contract holders can be\n *  their own implementer) and registering it on the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n *\n * See {IERC1820Registry} and {ERC1820Implementer}.\n */\ninterface IERC777Sender {\n    /**\n     * @dev Called by an {IERC777} token contract whenever a registered holder's\n     * (`from`) tokens are about to be moved or destroyed. The type of operation\n     * is conveyed by `to` being the zero address or not.\n     *\n     * This call occurs _before_ the token contract's state is updated, so\n     * {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n"
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n *\n * Accounts can be notified of {IERC777} tokens being sent to them by having a\n * contract implement this interface (contract holders can be their own\n * implementer) and registering it on the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n *\n * See {IERC1820Registry} and {ERC1820Implementer}.\n */\ninterface IERC777Recipient {\n    /**\n     * @dev Called by an {IERC777} token contract whenever tokens are being\n     * moved or created into a registered account (`to`). The type of operation\n     * is conveyed by `from` being the zero address or not.\n     *\n     * This call occurs _after_ the token contract's state is updated, so\n     * {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n"
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777Token standard as defined in the EIP.\n *\n * This contract uses the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n * token holders and recipients react to token movements by using setting implementers\n * for the associated interfaces in said registry. See {IERC1820Registry} and\n * {ERC1820Implementer}.\n */\ninterface IERC777 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     * means all token operations (creation, movement and destruction) must have\n     * amounts that are a multiple of this number.\n     *\n     * For most token contracts, this value will equal 1.\n     */\n    function granularity() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address owner) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * If send or receive hooks are registered for the caller and `recipient`,\n     * the corresponding functions will be called with `data` and empty\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(address recipient, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * Emits an {AuthorizedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external;\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * Emits a {RevokedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external;\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    event Sent(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData\n    );\n\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\n\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\n\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\n\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 600
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":600},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol": {
				"ERC777": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "address[]",
									"name": "defaultOperators_",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "AuthorizedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "RevokedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Sent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "authorizeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultOperators",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "granularity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "isOperatorFor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC777} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. Support for ERC20 is included in this contract, as specified by the EIP: both the ERC777 and ERC20 interfaces can be safely used when interacting with it. Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token movements. Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there are no special restrictions in the amount of tokens that created, moved, or destroyed. This makes integration with ERC20 applications seamless.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Note that accounts cannot have allowance issued by their operators."
							},
							"authorizeOperator(address)": {
								"details": "See {IERC777-authorizeOperator}."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by an account (`tokenHolder`)."
							},
							"burn(uint256,bytes)": {
								"details": "See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
							},
							"constructor": {
								"details": "`defaultOperators` may be an empty array."
							},
							"decimals()": {
								"details": "See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
							},
							"defaultOperators()": {
								"details": "See {IERC777-defaultOperators}."
							},
							"granularity()": {
								"details": "See {IERC777-granularity}. This implementation always returns `1`."
							},
							"isOperatorFor(address,address)": {
								"details": "See {IERC777-isOperatorFor}."
							},
							"name()": {
								"details": "See {IERC777-name}."
							},
							"operatorBurn(address,uint256,bytes,bytes)": {
								"details": "See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events."
							},
							"operatorSend(address,address,uint256,bytes,bytes)": {
								"details": "See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events."
							},
							"revokeOperator(address)": {
								"details": "See {IERC777-revokeOperator}."
							},
							"send(address,uint256,bytes)": {
								"details": "See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
							},
							"symbol()": {
								"details": "See {IERC777-symbol}."
							},
							"totalSupply()": {
								"details": "See {IERC777-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1014:18161  contract ERC777 is Context, IERC777, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2244:2856  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2376:2381  _name */\n  0x02\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2376:2389  _name = name_ */\n  tag_6\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2384:2389  name_ */\n  dup5\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2376:2381  _name */\n  dup3\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2376:2389  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2399:2406  _symbol */\n  0x03\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2399:2416  _symbol = symbol_ */\n  tag_8\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2409:2416  symbol_ */\n  dup4\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2399:2406  _symbol */\n  dup3\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2399:2416  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2427:2469  _defaultOperatorsArray = defaultOperators_ */\n  dup1\n  mload\n  tag_9\n  swap1\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2427:2449  _defaultOperatorsArray */\n  0x04\n  swap1\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2427:2469  _defaultOperatorsArray = defaultOperators_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2484:2493  uint256 i */\n  0x00\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2479:2605  for (uint256 i = 0; i < defaultOperators_.length; i++) {... */\ntag_11:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2503:2520  defaultOperators_ */\n  dup2\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2503:2527  defaultOperators_.length */\n  mload\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2499:2500  i */\n  dup2\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2499:2527  i < defaultOperators_.length */\n  lt\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2479:2605  for (uint256 i = 0; i < defaultOperators_.length; i++) {... */\n  iszero\n  tag_12\n  jumpi\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2590:2594  true */\n  0x01\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2548:2565  _defaultOperators */\n  0x05\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2548:2587  _defaultOperators[defaultOperators_[i]] */\n  0x00\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2566:2583  defaultOperators_ */\n  dup5\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2584:2585  i */\n  dup5\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2566:2586  defaultOperators_[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_15\n  jumpi\n  tag_15\n  tag_16\n  jump\t// in\ntag_15:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  dup2\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2548:2587  _defaultOperators[defaultOperators_[i]] */\n  and\n  dup3\n  mstore\n  dup2\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  0x40\n  add\n  0x00\n  keccak256\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2548:2594  _defaultOperators[defaultOperators_[i]] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap2\n  iszero\n  iszero\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2529:2532  i++ */\n  dup1\n  tag_17\n  dup2\n  tag_18\n  jump\t// in\ntag_17:\n  swap2\n  pop\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2479:2605  for (uint256 i = 0; i < defaultOperators_.length; i++) {... */\n  jump(tag_11)\ntag_12:\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2646:2743  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this)) */\n  mload(0x40)\n  shl(0xe0, 0x29965a1d)\n  dup2\n  mstore\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2696:2700  this */\n  address\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2646:2743  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5812:5846   */\n  dup2\n  swap1\n  mstore\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2703:2727  keccak256(\"ERC777Token\") */\n  0xac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054\n    /* \"#utility.yul\":5862:5880   */\n  0x24\n  dup4\n  add\n    /* \"#utility.yul\":5855:5889   */\n  mstore\n    /* \"#utility.yul\":5905:5923   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5898:5941   */\n  mstore\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1168:1210  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n  0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n  swap1\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2646:2687  _ERC1820_REGISTRY.setInterfaceImplementer */\n  0x29965a1d\n  swap1\n    /* \"#utility.yul\":5747:5765   */\n  0x64\n  add\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2646:2743  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this)) */\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_21\n  jumpi\n  0x00\n  dup1\n  revert\ntag_21:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_23\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_23:\n  pop\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2753:2849  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this)) */\n  mload(0x40)\n  shl(0xe0, 0x29965a1d)\n  dup2\n  mstore\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2803:2807  this */\n  address\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2753:2849  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5812:5846   */\n  dup2\n  swap1\n  mstore\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2810:2833  keccak256(\"ERC20Token\") */\n  0xaea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a\n    /* \"#utility.yul\":5862:5880   */\n  0x24\n  dup4\n  add\n    /* \"#utility.yul\":5855:5889   */\n  mstore\n    /* \"#utility.yul\":5905:5923   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5898:5941   */\n  mstore\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1168:1210  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n  0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n  swap3\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2753:2794  _ERC1820_REGISTRY.setInterfaceImplementer */\n  0x29965a1d\n  swap2\n  pop\n    /* \"#utility.yul\":5747:5765   */\n  0x64\n  add\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2753:2849  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this)) */\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_25\n  jumpi\n  0x00\n  dup1\n  revert\ntag_25:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_27\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_27:\n  pop\n  pop\n  pop\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2244:2856  constructor(... */\n  pop\n  pop\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1014:18161  contract ERC777 is Context, IERC777, IERC20 {... */\n  jump(tag_43)\ntag_10:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_31\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_30:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_31\n  jumpi\n  dup3\n  mload\n  dup3\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  or\n  dup3\n  sstore\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  0x01\n  swap1\n  swap2\n  add\n  swap1\n  jump(tag_30)\ntag_31:\n  pop\n  tag_32\n  swap3\n  swap2\n  pop\n  tag_33\n  jump\t// in\ntag_32:\n  pop\n  swap1\n  jump\t// out\ntag_33:\ntag_34:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_32\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_34)\n    /* \"#utility.yul\":14:141   */\ntag_36:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:421   */\ntag_37:\n    /* \"#utility.yul\":217:219   */\n  0x40\n    /* \"#utility.yul\":211:220   */\n  mload\n    /* \"#utility.yul\":282:284   */\n  0x1f\n    /* \"#utility.yul\":263:276   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":259:286   */\n  and\n    /* \"#utility.yul\":247:287   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":302:336   */\n  dup2\n  gt\n    /* \"#utility.yul\":338:360   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":299:361   */\n  or\n    /* \"#utility.yul\":296:384   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":364:382   */\n  tag_47\n  tag_36\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":400:402   */\n  0x40\n    /* \"#utility.yul\":393:415   */\n  mstore\n    /* \"#utility.yul\":146:421   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":426:1076   */\ntag_38:\n    /* \"#utility.yul\":480:485   */\n  0x00\n    /* \"#utility.yul\":533:536   */\n  dup3\n    /* \"#utility.yul\":526:530   */\n  0x1f\n    /* \"#utility.yul\":518:524   */\n  dup4\n    /* \"#utility.yul\":514:531   */\n  add\n    /* \"#utility.yul\":510:537   */\n  slt\n    /* \"#utility.yul\":500:555   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":551:552   */\n  0x00\n    /* \"#utility.yul\":548:549   */\n  dup1\n    /* \"#utility.yul\":541:553   */\n  revert\n    /* \"#utility.yul\":500:555   */\ntag_49:\n    /* \"#utility.yul\":574:587   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":599:625   */\n  dup2\n  gt\n    /* \"#utility.yul\":596:648   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":628:646   */\n  tag_51\n  tag_36\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":667:671   */\n  0x20\n    /* \"#utility.yul\":695:748   */\n  tag_52\n    /* \"#utility.yul\":738:740   */\n  0x1f\n    /* \"#utility.yul\":719:732   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":715:742   */\n  and\n    /* \"#utility.yul\":711:747   */\n  dup3\n  add\n    /* \"#utility.yul\":695:748   */\n  tag_37\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":773:775   */\n  dup3\n    /* \"#utility.yul\":764:771   */\n  dup2\n    /* \"#utility.yul\":757:776   */\n  mstore\n    /* \"#utility.yul\":817:820   */\n  dup6\n    /* \"#utility.yul\":812:814   */\n  dup3\n    /* \"#utility.yul\":807:809   */\n  dup5\n    /* \"#utility.yul\":799:805   */\n  dup8\n    /* \"#utility.yul\":795:810   */\n  add\n    /* \"#utility.yul\":791:815   */\n  add\n    /* \"#utility.yul\":788:821   */\n  gt\n    /* \"#utility.yul\":785:838   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":834:835   */\n  0x00\n    /* \"#utility.yul\":831:832   */\n  dup1\n    /* \"#utility.yul\":824:836   */\n  revert\n    /* \"#utility.yul\":785:838   */\ntag_53:\n    /* \"#utility.yul\":856:857   */\n  0x00\n    /* \"#utility.yul\":866:1000   */\ntag_54:\n    /* \"#utility.yul\":880:882   */\n  dup4\n    /* \"#utility.yul\":877:878   */\n  dup2\n    /* \"#utility.yul\":874:883   */\n  lt\n    /* \"#utility.yul\":866:1000   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":969:983   */\n  dup6\n  dup2\n  add\n    /* \"#utility.yul\":965:988   */\n  dup4\n  add\n    /* \"#utility.yul\":959:989   */\n  mload\n    /* \"#utility.yul\":937:952   */\n  dup3\n  dup3\n  add\n    /* \"#utility.yul\":933:957   */\n  dup5\n  add\n    /* \"#utility.yul\":926:990   */\n  mstore\n    /* \"#utility.yul\":891:901   */\n  dup3\n  add\n    /* \"#utility.yul\":866:1000   */\n  jump(tag_54)\ntag_56:\n  pop\n    /* \"#utility.yul\":1043:1044   */\n  0x00\n    /* \"#utility.yul\":1020:1036   */\n  swap3\n  dup2\n  add\n    /* \"#utility.yul\":1016:1041   */\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":1009:1045   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":1024:1031   */\n  swap4\n    /* \"#utility.yul\":426:1076   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1081:2609   */\ntag_3:\n    /* \"#utility.yul\":1214:1220   */\n  0x00\n    /* \"#utility.yul\":1222:1228   */\n  dup1\n    /* \"#utility.yul\":1230:1236   */\n  0x00\n    /* \"#utility.yul\":1283:1285   */\n  0x60\n    /* \"#utility.yul\":1271:1280   */\n  dup5\n    /* \"#utility.yul\":1262:1269   */\n  dup7\n    /* \"#utility.yul\":1258:1281   */\n  sub\n    /* \"#utility.yul\":1254:1286   */\n  slt\n    /* \"#utility.yul\":1251:1303   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1299:1300   */\n  0x00\n    /* \"#utility.yul\":1296:1297   */\n  dup1\n    /* \"#utility.yul\":1289:1301   */\n  revert\n    /* \"#utility.yul\":1251:1303   */\ntag_58:\n    /* \"#utility.yul\":1326:1342   */\n  dup4\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1391:1405   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1388:1422   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1418:1419   */\n  0x00\n    /* \"#utility.yul\":1415:1416   */\n  dup1\n    /* \"#utility.yul\":1408:1420   */\n  revert\n    /* \"#utility.yul\":1388:1422   */\ntag_59:\n    /* \"#utility.yul\":1441:1502   */\n  tag_60\n    /* \"#utility.yul\":1494:1501   */\n  dup8\n    /* \"#utility.yul\":1485:1491   */\n  dup4\n    /* \"#utility.yul\":1474:1483   */\n  dup9\n    /* \"#utility.yul\":1470:1492   */\n  add\n    /* \"#utility.yul\":1441:1502   */\n  tag_38\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1431:1502   */\n  swap5\n  pop\n    /* \"#utility.yul\":1521:1523   */\n  0x20\n    /* \"#utility.yul\":1511:1523   */\n  swap2\n  pop\n    /* \"#utility.yul\":1569:1571   */\n  dup2\n    /* \"#utility.yul\":1558:1567   */\n  dup7\n    /* \"#utility.yul\":1554:1572   */\n  add\n    /* \"#utility.yul\":1548:1573   */\n  mload\n    /* \"#utility.yul\":1598:1600   */\n  dup2\n    /* \"#utility.yul\":1588:1596   */\n  dup2\n    /* \"#utility.yul\":1585:1601   */\n  gt\n    /* \"#utility.yul\":1582:1618   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1614:1615   */\n  0x00\n    /* \"#utility.yul\":1611:1612   */\n  dup1\n    /* \"#utility.yul\":1604:1616   */\n  revert\n    /* \"#utility.yul\":1582:1618   */\ntag_61:\n    /* \"#utility.yul\":1637:1700   */\n  tag_62\n    /* \"#utility.yul\":1692:1699   */\n  dup9\n    /* \"#utility.yul\":1681:1689   */\n  dup3\n    /* \"#utility.yul\":1670:1679   */\n  dup10\n    /* \"#utility.yul\":1666:1690   */\n  add\n    /* \"#utility.yul\":1637:1700   */\n  tag_38\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1627:1700   */\n  swap5\n  pop\n  pop\n    /* \"#utility.yul\":1746:1748   */\n  0x40\n    /* \"#utility.yul\":1735:1744   */\n  dup7\n    /* \"#utility.yul\":1731:1749   */\n  add\n    /* \"#utility.yul\":1725:1750   */\n  mload\n    /* \"#utility.yul\":1775:1777   */\n  dup2\n    /* \"#utility.yul\":1765:1773   */\n  dup2\n    /* \"#utility.yul\":1762:1778   */\n  gt\n    /* \"#utility.yul\":1759:1795   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1791:1792   */\n  0x00\n    /* \"#utility.yul\":1788:1789   */\n  dup1\n    /* \"#utility.yul\":1781:1793   */\n  revert\n    /* \"#utility.yul\":1759:1795   */\ntag_63:\n    /* \"#utility.yul\":1814:1838   */\n  dup7\n  add\n    /* \"#utility.yul\":1869:1873   */\n  0x1f\n    /* \"#utility.yul\":1861:1874   */\n  dup2\n  add\n    /* \"#utility.yul\":1857:1884   */\n  dup9\n  sgt\n    /* \"#utility.yul\":1847:1902   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1898:1899   */\n  0x00\n    /* \"#utility.yul\":1895:1896   */\n  dup1\n    /* \"#utility.yul\":1888:1900   */\n  revert\n    /* \"#utility.yul\":1847:1902   */\ntag_64:\n    /* \"#utility.yul\":1927:1929   */\n  dup1\n    /* \"#utility.yul\":1921:1930   */\n  mload\n    /* \"#utility.yul\":1949:1951   */\n  dup3\n    /* \"#utility.yul\":1945:1947   */\n  dup2\n    /* \"#utility.yul\":1942:1952   */\n  gt\n    /* \"#utility.yul\":1939:1975   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1955:1973   */\n  tag_66\n  tag_36\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2001:2003   */\n  dup1\n    /* \"#utility.yul\":1998:1999   */\n  0x05\n    /* \"#utility.yul\":1994:2004   */\n  shl\n    /* \"#utility.yul\":1984:2004   */\n  swap3\n  pop\n    /* \"#utility.yul\":2024:2052   */\n  tag_67\n    /* \"#utility.yul\":2048:2050   */\n  dup5\n    /* \"#utility.yul\":2044:2046   */\n  dup5\n    /* \"#utility.yul\":2040:2051   */\n  add\n    /* \"#utility.yul\":2024:2052   */\n  tag_37\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2086:2101   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":2156:2167   */\n  swap3\n  dup3\n  add\n    /* \"#utility.yul\":2152:2172   */\n  dup5\n  add\n  swap3\n    /* \"#utility.yul\":2117:2129   */\n  dup5\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":2184:2203   */\n  dup11\n  dup6\n  gt\n    /* \"#utility.yul\":2181:2220   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2216:2217   */\n  0x00\n    /* \"#utility.yul\":2213:2214   */\n  dup1\n    /* \"#utility.yul\":2206:2218   */\n  revert\n    /* \"#utility.yul\":2181:2220   */\ntag_68:\n    /* \"#utility.yul\":2240:2251   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":2260:2579   */\ntag_69:\n    /* \"#utility.yul\":2276:2282   */\n  dup5\n    /* \"#utility.yul\":2271:2274   */\n  dup5\n    /* \"#utility.yul\":2268:2283   */\n  lt\n    /* \"#utility.yul\":2260:2579   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2343:2353   */\n  dup4\n  mload\n  swap3\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":2386:2417   */\n  dup4\n  and\n    /* \"#utility.yul\":2376:2418   */\n  dup4\n  eq\n    /* \"#utility.yul\":2366:2506   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2460:2461   */\n  0x00\n    /* \"#utility.yul\":2489:2491   */\n  dup1\n    /* \"#utility.yul\":2485:2487   */\n  dup2\n    /* \"#utility.yul\":2478:2492   */\n  revert\n    /* \"#utility.yul\":2366:2506   */\ntag_72:\n    /* \"#utility.yul\":2519:2537   */\n  dup3\n  dup3\n  mstore\n    /* \"#utility.yul\":2293:2305   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":2557:2569   */\n  swap1\n  dup6\n  add\n  swap1\n    /* \"#utility.yul\":2260:2579   */\n  jump(tag_69)\ntag_71:\n    /* \"#utility.yul\":2598:2603   */\n  dup1\n    /* \"#utility.yul\":2588:2603   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1081:2609   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2614:2994   */\ntag_39:\n    /* \"#utility.yul\":2693:2694   */\n  0x01\n    /* \"#utility.yul\":2689:2701   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2736:2748   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2757:2818   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2811:2815   */\n  0x7f\n    /* \"#utility.yul\":2803:2809   */\n  dup3\n    /* \"#utility.yul\":2799:2816   */\n  and\n    /* \"#utility.yul\":2789:2816   */\n  swap2\n  pop\n    /* \"#utility.yul\":2757:2818   */\ntag_74:\n    /* \"#utility.yul\":2864:2866   */\n  0x20\n    /* \"#utility.yul\":2856:2862   */\n  dup3\n    /* \"#utility.yul\":2853:2867   */\n  lt\n    /* \"#utility.yul\":2833:2851   */\n  dup2\n    /* \"#utility.yul\":2830:2868   */\n  sub\n    /* \"#utility.yul\":2827:2988   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2910:2920   */\n  0x4e487b71\n    /* \"#utility.yul\":2905:2908   */\n  0xe0\n    /* \"#utility.yul\":2901:2921   */\n  shl\n    /* \"#utility.yul\":2898:2899   */\n  0x00\n    /* \"#utility.yul\":2891:2922   */\n  mstore\n    /* \"#utility.yul\":2945:2949   */\n  0x22\n    /* \"#utility.yul\":2942:2943   */\n  0x04\n    /* \"#utility.yul\":2935:2950   */\n  mstore\n    /* \"#utility.yul\":2973:2977   */\n  0x24\n    /* \"#utility.yul\":2970:2971   */\n  0x00\n    /* \"#utility.yul\":2963:2978   */\n  revert\n    /* \"#utility.yul\":2827:2988   */\ntag_75:\n  pop\n    /* \"#utility.yul\":2614:2994   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3125:3670   */\ntag_41:\n    /* \"#utility.yul\":3227:3229   */\n  0x1f\n    /* \"#utility.yul\":3222:3225   */\n  dup3\n    /* \"#utility.yul\":3219:3230   */\n  gt\n    /* \"#utility.yul\":3216:3664   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3263:3264   */\n  0x00\n    /* \"#utility.yul\":3288:3293   */\n  dup2\n    /* \"#utility.yul\":3284:3286   */\n  dup2\n    /* \"#utility.yul\":3277:3294   */\n  mstore\n    /* \"#utility.yul\":3333:3337   */\n  0x20\n    /* \"#utility.yul\":3329:3331   */\n  dup2\n    /* \"#utility.yul\":3319:3338   */\n  keccak256\n    /* \"#utility.yul\":3403:3405   */\n  0x1f\n    /* \"#utility.yul\":3391:3401   */\n  dup6\n    /* \"#utility.yul\":3387:3406   */\n  add\n    /* \"#utility.yul\":3384:3385   */\n  0x05\n    /* \"#utility.yul\":3380:3407   */\n  shr\n    /* \"#utility.yul\":3374:3378   */\n  dup2\n    /* \"#utility.yul\":3370:3408   */\n  add\n    /* \"#utility.yul\":3439:3443   */\n  0x20\n    /* \"#utility.yul\":3427:3437   */\n  dup7\n    /* \"#utility.yul\":3424:3444   */\n  lt\n    /* \"#utility.yul\":3421:3468   */\n  iszero\n  tag_79\n  jumpi\n  pop\n    /* \"#utility.yul\":3462:3466   */\n  dup1\n    /* \"#utility.yul\":3421:3468   */\ntag_79:\n    /* \"#utility.yul\":3517:3519   */\n  0x1f\n    /* \"#utility.yul\":3512:3515   */\n  dup6\n    /* \"#utility.yul\":3508:3520   */\n  add\n    /* \"#utility.yul\":3505:3506   */\n  0x05\n    /* \"#utility.yul\":3501:3521   */\n  shr\n    /* \"#utility.yul\":3495:3499   */\n  dup3\n    /* \"#utility.yul\":3491:3522   */\n  add\n    /* \"#utility.yul\":3481:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3572:3654   */\ntag_80:\n    /* \"#utility.yul\":3590:3592   */\n  dup2\n    /* \"#utility.yul\":3583:3588   */\n  dup2\n    /* \"#utility.yul\":3580:3593   */\n  lt\n    /* \"#utility.yul\":3572:3654   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":3635:3652   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":3616:3617   */\n  0x01\n    /* \"#utility.yul\":3605:3618   */\n  add\n    /* \"#utility.yul\":3572:3654   */\n  jump(tag_80)\ntag_82:\n    /* \"#utility.yul\":3576:3579   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3216:3664   */\ntag_78:\n    /* \"#utility.yul\":3125:3670   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3846:5198   */\ntag_7:\n    /* \"#utility.yul\":3966:3976   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3988:4018   */\n  dup2\n  gt\n    /* \"#utility.yul\":3985:4041   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":4021:4039   */\n  tag_86\n  tag_36\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4050:4147   */\n  tag_87\n    /* \"#utility.yul\":4140:4146   */\n  dup2\n    /* \"#utility.yul\":4100:4138   */\n  tag_88\n    /* \"#utility.yul\":4132:4136   */\n  dup5\n    /* \"#utility.yul\":4126:4137   */\n  sload\n    /* \"#utility.yul\":4100:4138   */\n  tag_39\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4094:4098   */\n  dup5\n    /* \"#utility.yul\":4050:4147   */\n  tag_41\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":4202:4206   */\n  0x20\n  dup1\n    /* \"#utility.yul\":4266:4268   */\n  0x1f\n    /* \"#utility.yul\":4255:4269   */\n  dup4\n  gt\n    /* \"#utility.yul\":4283:4284   */\n  0x01\n    /* \"#utility.yul\":4278:4941   */\n  dup2\n  eq\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4985:4986   */\n  0x00\n    /* \"#utility.yul\":5002:5008   */\n  dup5\n    /* \"#utility.yul\":4999:5088   */\n  iszero\n  tag_91\n  jumpi\n  pop\n    /* \"#utility.yul\":5054:5073   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":5048:5074   */\n  mload\n    /* \"#utility.yul\":4999:5088   */\ntag_91:\n  not(0x00)\n    /* \"#utility.yul\":3803:3804   */\n  0x03\n    /* \"#utility.yul\":3799:3810   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":3795:3819   */\n  shr\n    /* \"#utility.yul\":3791:3820   */\n  not\n    /* \"#utility.yul\":3781:3821   */\n  and\n    /* \"#utility.yul\":3827:3828   */\n  0x01\n    /* \"#utility.yul\":3823:3834   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3778:3835   */\n  or\n    /* \"#utility.yul\":5101:5182   */\n  dup6\n  sstore\n    /* \"#utility.yul\":4248:5192   */\n  jump(tag_82)\n    /* \"#utility.yul\":4278:4941   */\ntag_90:\n    /* \"#utility.yul\":3072:3073   */\n  0x00\n    /* \"#utility.yul\":3065:3079   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":3109:3113   */\n  0x20\n    /* \"#utility.yul\":3096:3114   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":4314:4334   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":4432:4668   */\ntag_94:\n    /* \"#utility.yul\":4446:4453   */\n  dup3\n    /* \"#utility.yul\":4443:4444   */\n  dup2\n    /* \"#utility.yul\":4440:4454   */\n  lt\n    /* \"#utility.yul\":4432:4668   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4535:4554   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":4529:4555   */\n  mload\n    /* \"#utility.yul\":4514:4556   */\n  dup3\n  sstore\n    /* \"#utility.yul\":4627:4654   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":4595:4596   */\n  0x01\n    /* \"#utility.yul\":4583:4597   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":4462:4481   */\n  dup5\n  add\n    /* \"#utility.yul\":4432:4668   */\n  jump(tag_94)\ntag_96:\n    /* \"#utility.yul\":4436:4439   */\n  pop\n    /* \"#utility.yul\":4696:4702   */\n  dup6\n    /* \"#utility.yul\":4687:4694   */\n  dup3\n    /* \"#utility.yul\":4684:4703   */\n  lt\n    /* \"#utility.yul\":4681:4882   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":4757:4776   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":4751:4777   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4840:4841   */\n  0x03\n    /* \"#utility.yul\":4836:4850   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":4852:4855   */\n  0xf8\n    /* \"#utility.yul\":4832:4856   */\n  and\n    /* \"#utility.yul\":4828:4865   */\n  shr\n    /* \"#utility.yul\":4824:4866   */\n  not\n    /* \"#utility.yul\":4809:4867   */\n  and\n    /* \"#utility.yul\":4794:4868   */\n  dup2\n  sstore\n    /* \"#utility.yul\":4681:4882   */\ntag_97:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4928:4929   */\n  0x01\n    /* \"#utility.yul\":4912:4926   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4908:4930   */\n  add\n    /* \"#utility.yul\":4895:4931   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3846:5198   */\n  jump\t// out\n    /* \"#utility.yul\":5203:5330   */\ntag_16:\n    /* \"#utility.yul\":5264:5274   */\n  0x4e487b71\n    /* \"#utility.yul\":5259:5262   */\n  0xe0\n    /* \"#utility.yul\":5255:5275   */\n  shl\n    /* \"#utility.yul\":5252:5253   */\n  0x00\n    /* \"#utility.yul\":5245:5276   */\n  mstore\n    /* \"#utility.yul\":5295:5299   */\n  0x32\n    /* \"#utility.yul\":5292:5293   */\n  0x04\n    /* \"#utility.yul\":5285:5300   */\n  mstore\n    /* \"#utility.yul\":5319:5323   */\n  0x24\n    /* \"#utility.yul\":5316:5317   */\n  0x00\n    /* \"#utility.yul\":5309:5324   */\n  revert\n    /* \"#utility.yul\":5335:5567   */\ntag_18:\n    /* \"#utility.yul\":5374:5377   */\n  0x00\n    /* \"#utility.yul\":5395:5412   */\n  0x01\n  dup3\n  add\n    /* \"#utility.yul\":5392:5532   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":5454:5464   */\n  0x4e487b71\n    /* \"#utility.yul\":5449:5452   */\n  0xe0\n    /* \"#utility.yul\":5445:5465   */\n  shl\n    /* \"#utility.yul\":5442:5443   */\n  0x00\n    /* \"#utility.yul\":5435:5466   */\n  mstore\n    /* \"#utility.yul\":5489:5493   */\n  0x11\n    /* \"#utility.yul\":5486:5487   */\n  0x04\n    /* \"#utility.yul\":5479:5494   */\n  mstore\n    /* \"#utility.yul\":5517:5521   */\n  0x24\n    /* \"#utility.yul\":5514:5515   */\n  0x00\n    /* \"#utility.yul\":5507:5522   */\n  revert\n    /* \"#utility.yul\":5392:5532   */\ntag_100:\n  pop\n    /* \"#utility.yul\":5559:5560   */\n  0x01\n    /* \"#utility.yul\":5548:5561   */\n  add\n  swap1\n    /* \"#utility.yul\":5335:5567   */\n  jump\t// out\n    /* \"#utility.yul\":5572:5947   */\ntag_43:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1014:18161  contract ERC777 is Context, IERC777, IERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1014:18161  contract ERC777 is Context, IERC777, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x959b8c3f\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xd95b6371\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xfad8b32a\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xfad8b32a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xfc673c4f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xfe9d9303\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0xd95b6371\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x959b8c3f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9bd9bbc6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x556f0dc7\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x556f0dc7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x62ad1b83\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x06e48538\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6674:6804  function defaultOperators() public view virtual override returns (address[] memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2910:3008  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8253:8450  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_5:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":1997:2011   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1990:2012   */\n      iszero\n        /* \"#utility.yul\":1972:2013   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1960:1962   */\n      0x20\n        /* \"#utility.yul\":1945:1963   */\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8253:8450  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n      tag_28\n        /* \"#utility.yul\":1832:2019   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3703:3826  function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {... */\n    tag_6:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3807:3819  _totalSupply */\n      sload(0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3703:3826  function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {... */\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":2170:2195   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2143:2161   */\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3703:3826  function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {... */\n      tag_28\n        /* \"#utility.yul\":2024:2201   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8815:9591  function transferFrom(address holder, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_7:\n      tag_34\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3350:3432  function decimals() public pure virtual returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3423:3425  18 */\n      0x12\n        /* \"#utility.yul\":2809:2845   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2797:2799   */\n      0x20\n        /* \"#utility.yul\":2782:2800   */\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3350:3432  function decimals() public pure virtual returns (uint8) {... */\n      tag_28\n        /* \"#utility.yul\":2667:2851   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3547:3642  function granularity() public view virtual override returns (uint256) {... */\n    tag_9:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3634:3635  1 */\n      0x01\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3547:3642  function granularity() public view virtual override returns (uint256) {... */\n      jump(tag_40)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6923:7317  function operatorSend(... */\n    tag_10:\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3926:4076  function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {... */\n    tag_11:\n      tag_40\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4047:4069  _balances[tokenHolder] */\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4021:4028  uint256 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4047:4069  _balances[tokenHolder] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3926:4076  function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {... */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5727:6140  function authorizeOperator(address operator) public virtual override  {... */\n    tag_12:\n      tag_56\n      tag_66\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3064:3166  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_30\n      tag_69\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4206:4370  function send(address recipient, uint256 amount, bytes memory data) public virtual override  {... */\n    tag_14:\n      tag_56\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4601:5040  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_15:\n      tag_34\n      tag_76\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5361:5660  function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_34\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7964:8115  function allowance(address holder, address spender) public view virtual override returns (uint256) {... */\n    tag_17:\n      tag_40\n      tag_85\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8080:8099  _allowances[holder] */\n      swap2\n      dup3\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8054:8061  uint256 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8080:8099  _allowances[holder] */\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8080:8091  _allowances */\n      0x08\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8080:8099  _allowances[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8080:8108  _allowances[holder][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7964:8115  function allowance(address holder, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6204:6608  function revokeOperator(address operator) public virtual override  {... */\n    tag_18:\n      tag_56\n      tag_89\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7438:7725  function operatorBurn(address account, uint256 amount, bytes memory data, bytes memory operatorData) public virtual override {... */\n    tag_19:\n      tag_56\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5170:5298  function burn(uint256 amount, bytes memory data) public virtual override  {... */\n    tag_20:\n      tag_56\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6674:6804  function defaultOperators() public view virtual override returns (address[] memory) {... */\n    tag_27:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6740:6756  address[] memory */\n      0x60\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6775:6797  _defaultOperatorsArray */\n      0x04\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6768:6797  return _defaultOperatorsArray */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_101:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_101\n      jumpi\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6674:6804  function defaultOperators() public view virtual override returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2910:3008  function name() public view virtual override returns (string memory) {... */\n    tag_31:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2964:2977  string memory */\n      0x60\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2996:3001  _name */\n      0x02\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2989:3001  return _name */\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_104\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_100\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_100)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      pop\n      swap4\n      swap6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":2910:3008  function name() public view virtual override returns (string memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8253:8450  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_37:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8335:8339  bool */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8390:8422  _approve(holder, spender, value) */\n      tag_112\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      dup2\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8407:8414  spender */\n      dup6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8416:8421  value */\n      dup6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8390:8398  _approve */\n      tag_113\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8390:8422  _approve(holder, spender, value) */\n      jump\t// in\n    tag_112:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8439:8443  true */\n      0x01\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8432:8443  return true */\n      swap2\n      pop\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8253:8450  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_109:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8815:9591  function transferFrom(address holder, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_47:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8921:8925  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8945:8968  recipient != address(0) */\n      dup4\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8937:9009  require(recipient != address(0), \"ERC777: transfer to the zero address\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7502:7504   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8937:9009  require(recipient != address(0), \"ERC777: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7484:7505   */\n      mstore\n        /* \"#utility.yul\":7541:7543   */\n      0x24\n        /* \"#utility.yul\":7521:7539   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7514:7544   */\n      mstore\n        /* \"#utility.yul\":7580:7614   */\n      0x4552433737373a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":7560:7578   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7553:7615   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":7631:7649   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7624:7658   */\n      mstore\n        /* \"#utility.yul\":7675:7694   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8937:9009  require(recipient != address(0), \"ERC777: transfer to the zero address\") */\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9027:9047  holder != address(0) */\n      dup5\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9019:9090  require(holder != address(0), \"ERC777: transfer from the zero address\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7907:7909   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9019:9090  require(holder != address(0), \"ERC777: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7889:7910   */\n      mstore\n        /* \"#utility.yul\":7946:7948   */\n      0x26\n        /* \"#utility.yul\":7926:7944   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7919:7949   */\n      mstore\n        /* \"#utility.yul\":7985:8019   */\n      0x4552433737373a207472616e736665722066726f6d20746865207a65726f2061\n        /* \"#utility.yul\":7965:7983   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7958:8020   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8036:8054   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8029:8065   */\n      mstore\n        /* \"#utility.yul\":8082:8101   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9019:9090  require(holder != address(0), \"ERC777: transfer from the zero address\") */\n      tag_117\n        /* \"#utility.yul\":7705:8107   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9019:9090  require(holder != address(0), \"ERC777: transfer from the zero address\") */\n    tag_119:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9101:9116  address spender */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9101:9131  address spender = _msgSender() */\n      swap1\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9142:9203  _callTokensToSend(spender, holder, recipient, amount, \"\", \"\") */\n      tag_123\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9160:9167  spender */\n      dup2\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9169:9175  holder */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9177:9186  recipient */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9188:9194  amount */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9142:9203  _callTokensToSend(spender, holder, recipient, amount, \"\", \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9142:9159  _callTokensToSend */\n      tag_124\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9142:9203  _callTokensToSend(spender, holder, recipient, amount, \"\", \"\") */\n      jump\t// in\n    tag_123:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9214:9263  _move(spender, holder, recipient, amount, \"\", \"\") */\n      tag_125\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9220:9227  spender */\n      dup2\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9229:9235  holder */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9237:9246  recipient */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9248:9254  amount */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9214:9263  _move(spender, holder, recipient, amount, \"\", \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9214:9219  _move */\n      tag_126\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9214:9263  _move(spender, holder, recipient, amount, \"\", \"\") */\n      jump\t// in\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9301:9320  _allowances[holder] */\n      dup1\n      dup7\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9274:9298  uint256 currentAllowance */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9301:9320  _allowances[holder] */\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9301:9312  _allowances */\n      0x08\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9301:9320  _allowances[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9301:9329  _allowances[holder][spender] */\n      swap4\n      dup6\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9347:9373  currentAllowance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9339:9419  require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8314:8316   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9339:9419  require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8296:8317   */\n      mstore\n        /* \"#utility.yul\":8353:8355   */\n      0x29\n        /* \"#utility.yul\":8333:8351   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8326:8356   */\n      mstore\n        /* \"#utility.yul\":8392:8426   */\n      0x4552433737373a207472616e7366657220616d6f756e74206578636565647320\n        /* \"#utility.yul\":8372:8390   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8365:8427   */\n      mstore\n      shl(0xb8, 0x616c6c6f77616e6365)\n        /* \"#utility.yul\":8443:8461   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8436:8475   */\n      mstore\n        /* \"#utility.yul\":8492:8511   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9339:9419  require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\") */\n      tag_117\n        /* \"#utility.yul\":8112:8517   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9339:9419  require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\") */\n    tag_127:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9429:9481  _approve(holder, spender, currentAllowance - amount) */\n      tag_130\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9438:9444  holder */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9446:9453  spender */\n      dup4\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9455:9480  currentAllowance - amount */\n      tag_131\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9474:9480  amount */\n      dup8\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9455:9471  currentAllowance */\n      dup6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9455:9480  currentAllowance - amount */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9429:9437  _approve */\n      tag_113\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9429:9481  _approve(holder, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_130:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9492:9562  _callTokensReceived(spender, holder, recipient, amount, \"\", \"\", false) */\n      tag_133\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9512:9519  spender */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9521:9527  holder */\n      dup8\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9529:9538  recipient */\n      dup8\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9540:9546  amount */\n      dup8\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9492:9562  _callTokensReceived(spender, holder, recipient, amount, \"\", \"\", false) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9556:9561  false */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9492:9511  _callTokensReceived */\n      tag_134\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9492:9562  _callTokensReceived(spender, holder, recipient, amount, \"\", \"\", false) */\n      jump\t// in\n    tag_133:\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":9580:9584  true */\n      0x01\n      swap6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":8815:9591  function transferFrom(address holder, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6923:7317  function operatorSend(... */\n    tag_59:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7158:7193  isOperatorFor(_msgSender(), sender) */\n      tag_138\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7186:7192  sender */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7158:7171  isOperatorFor */\n      tag_82\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7158:7193  isOperatorFor(_msgSender(), sender) */\n      jump\t// in\n    tag_138:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7150:7242  require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8989:8991   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7150:7242  require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8971:8992   */\n      mstore\n        /* \"#utility.yul\":9028:9030   */\n      0x2c\n        /* \"#utility.yul\":9008:9026   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9001:9031   */\n      mstore\n        /* \"#utility.yul\":9067:9101   */\n      0x4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f\n        /* \"#utility.yul\":9047:9065   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9040:9102   */\n      mstore\n      shl(0xa1, 0x39103337b9103437b63232b9)\n        /* \"#utility.yul\":9118:9136   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9111:9153   */\n      mstore\n        /* \"#utility.yul\":9170:9189   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7150:7242  require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\") */\n      tag_117\n        /* \"#utility.yul\":8787:9195   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7150:7242  require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\") */\n    tag_140:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7252:7310  _send(sender, recipient, amount, data, operatorData, true) */\n      tag_143\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7258:7264  sender */\n      dup6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7266:7275  recipient */\n      dup6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7277:7283  amount */\n      dup6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7285:7289  data */\n      dup6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7291:7303  operatorData */\n      dup6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7305:7309  true */\n      0x01\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7252:7257  _send */\n      tag_144\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7252:7310  _send(sender, recipient, amount, data, operatorData, true) */\n      jump\t// in\n    tag_143:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6923:7317  function operatorSend(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5727:6140  function authorizeOperator(address operator) public virtual override  {... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5815:5839  _msgSender() != operator */\n      dup2\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5815:5839  _msgSender() != operator */\n      sub\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5807:5880  require(_msgSender() != operator, \"ERC777: authorizing self as operator\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9402:9404   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5807:5880  require(_msgSender() != operator, \"ERC777: authorizing self as operator\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9384:9405   */\n      mstore\n        /* \"#utility.yul\":9441:9443   */\n      0x24\n        /* \"#utility.yul\":9421:9439   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9414:9444   */\n      mstore\n        /* \"#utility.yul\":9480:9514   */\n      0x4552433737373a20617574686f72697a696e672073656c66206173206f706572\n        /* \"#utility.yul\":9460:9478   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9453:9515   */\n      mstore\n      shl(0xe1, 0x30ba37b9)\n        /* \"#utility.yul\":9531:9549   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9524:9558   */\n      mstore\n        /* \"#utility.yul\":9575:9594   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5807:5880  require(_msgSender() != operator, \"ERC777: authorizing self as operator\") */\n      tag_117\n        /* \"#utility.yul\":9200:9600   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5807:5880  require(_msgSender() != operator, \"ERC777: authorizing self as operator\") */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5895:5922  _defaultOperators[operator] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5895:5912  _defaultOperators */\n      0x05\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5895:5922  _defaultOperators[operator] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5891:6076  if (_defaultOperators[operator]) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5945:5983  _revokedDefaultOperators[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5945:5969  _revokedDefaultOperators */\n      0x07\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5945:5983  _revokedDefaultOperators[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5945:5993  _revokedDefaultOperators[_msgSender()][operator] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5938:5993  delete _revokedDefaultOperators[_msgSender()][operator] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5891:6076  if (_defaultOperators[operator]) {... */\n      jump(tag_153)\n    tag_151:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6024:6048  _operators[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6024:6034  _operators */\n      0x06\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6024:6048  _operators[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6024:6058  _operators[_msgSender()][operator] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6024:6065  _operators[_msgSender()][operator] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6061:6065  true */\n      0x01\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6024:6065  _operators[_msgSender()][operator] = true */\n      or\n      swap1\n      sstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5891:6076  if (_defaultOperators[operator]) {... */\n    tag_153:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6091:6133  AuthorizedOperator(operator, _msgSender()) */\n      mload(0x40)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6091:6133  AuthorizedOperator(operator, _msgSender()) */\n      dup4\n      and\n      swap1\n      0xf4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f9\n      swap1\n      0x00\n      swap1\n      log3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5727:6140  function authorizeOperator(address operator) public virtual override  {... */\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3064:3166  function symbol() public view virtual override returns (string memory) {... */\n    tag_69:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3120:3133  string memory */\n      0x60\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3152:3159  _symbol */\n      0x03\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":3145:3159  return _symbol */\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4206:4370  function send(address recipient, uint256 amount, bytes memory data) public virtual override  {... */\n    tag_74:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4309:4363  _send(_msgSender(), recipient, amount, data, \"\", true) */\n      tag_163\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4329:4338  recipient */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4340:4346  amount */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4348:4352  data */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4309:4363  _send(_msgSender(), recipient, amount, data, \"\", true) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4358:4362  true */\n      0x01\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4309:4314  _send */\n      tag_144\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4309:4363  _send(_msgSender(), recipient, amount, data, \"\", true) */\n      jump\t// in\n    tag_163:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4206:4370  function send(address recipient, uint256 amount, bytes memory data) public virtual override  {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4601:5040  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_77:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4687:4691  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4711:4734  recipient != address(0) */\n      dup4\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4703:4775  require(recipient != address(0), \"ERC777: transfer to the zero address\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7502:7504   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4703:4775  require(recipient != address(0), \"ERC777: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7484:7505   */\n      mstore\n        /* \"#utility.yul\":7541:7543   */\n      0x24\n        /* \"#utility.yul\":7521:7539   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7514:7544   */\n      mstore\n        /* \"#utility.yul\":7580:7614   */\n      0x4552433737373a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":7560:7578   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7553:7615   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":7631:7649   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7624:7658   */\n      mstore\n        /* \"#utility.yul\":7675:7694   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4703:4775  require(recipient != address(0), \"ERC777: transfer to the zero address\") */\n      tag_117\n        /* \"#utility.yul\":7300:7700   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4703:4775  require(recipient != address(0), \"ERC777: transfer to the zero address\") */\n    tag_166:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4786:4798  address from */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4786:4813  address from = _msgSender() */\n      swap1\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4824:4880  _callTokensToSend(from, from, recipient, amount, \"\", \"\") */\n      tag_169\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4842:4846  from */\n      dup2\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4848:4852  from */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4854:4863  recipient */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4865:4871  amount */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4824:4880  _callTokensToSend(from, from, recipient, amount, \"\", \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4824:4841  _callTokensToSend */\n      tag_124\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4824:4880  _callTokensToSend(from, from, recipient, amount, \"\", \"\") */\n      jump\t// in\n    tag_169:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4891:4935  _move(from, from, recipient, amount, \"\", \"\") */\n      tag_170\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4897:4901  from */\n      dup2\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4903:4907  from */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4909:4918  recipient */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4920:4926  amount */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4891:4935  _move(from, from, recipient, amount, \"\", \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4891:4896  _move */\n      tag_126\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4891:4935  _move(from, from, recipient, amount, \"\", \"\") */\n      jump\t// in\n    tag_170:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4946:5011  _callTokensReceived(from, from, recipient, amount, \"\", \"\", false) */\n      tag_112\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4966:4970  from */\n      dup2\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4972:4976  from */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4978:4987  recipient */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4989:4995  amount */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4946:5011  _callTokensReceived(from, from, recipient, amount, \"\", \"\", false) */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5005:5010  false */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4946:4965  _callTokensReceived */\n      tag_134\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":4946:5011  _callTokensReceived(from, from, recipient, amount, \"\", \"\", false) */\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5361:5660  function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {... */\n    tag_82:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5461:5465  bool */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5496:5507  tokenHolder */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5484:5507  operator == tokenHolder */\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5484:5492  operator */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5484:5507  operator == tokenHolder */\n      and\n      eq\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5484:5604  operator == tokenHolder ||... */\n      dup1\n      tag_174\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5524:5551  _defaultOperators[operator] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5524:5541  _defaultOperators */\n      0x05\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5524:5551  _defaultOperators[operator] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5524:5603  _defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator] */\n      dup1\n      iszero\n      tag_174\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5556:5593  _revokedDefaultOperators[tokenHolder] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5556:5580  _revokedDefaultOperators */\n      0x07\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5556:5593  _revokedDefaultOperators[tokenHolder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5556:5603  _revokedDefaultOperators[tokenHolder][operator] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5555:5603  !_revokedDefaultOperators[tokenHolder][operator] */\n      iszero\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5524:5603  _defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator] */\n    tag_174:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5484:5653  operator == tokenHolder ||... */\n      dup1\n      tag_175\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5620:5643  _operators[tokenHolder] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5620:5630  _operators */\n      0x06\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5620:5643  _operators[tokenHolder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5620:5653  _operators[tokenHolder][operator] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5484:5653  operator == tokenHolder ||... */\n    tag_175:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5477:5653  return operator == tokenHolder ||... */\n      swap4\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5361:5660  function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6204:6608  function revokeOperator(address operator) public virtual override  {... */\n    tag_90:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6289:6313  operator != _msgSender() */\n      dup3\n      and\n      sub\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6281:6351  require(operator != _msgSender(), \"ERC777: revoking self as operator\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9807:9809   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6281:6351  require(operator != _msgSender(), \"ERC777: revoking self as operator\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9789:9810   */\n      mstore\n        /* \"#utility.yul\":9846:9848   */\n      0x21\n        /* \"#utility.yul\":9826:9844   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9819:9849   */\n      mstore\n        /* \"#utility.yul\":9885:9919   */\n      0x4552433737373a207265766f6b696e672073656c66206173206f70657261746f\n        /* \"#utility.yul\":9865:9883   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9858:9920   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":9936:9954   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9929:9960   */\n      mstore\n        /* \"#utility.yul\":9977:9996   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6281:6351  require(operator != _msgSender(), \"ERC777: revoking self as operator\") */\n      tag_117\n        /* \"#utility.yul\":9605:10002   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6281:6351  require(operator != _msgSender(), \"ERC777: revoking self as operator\") */\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6366:6393  _defaultOperators[operator] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6366:6383  _defaultOperators */\n      0x05\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6366:6393  _defaultOperators[operator] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6362:6547  if (_defaultOperators[operator]) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6409:6447  _revokedDefaultOperators[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6409:6433  _revokedDefaultOperators */\n      0x07\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6409:6447  _revokedDefaultOperators[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6409:6457  _revokedDefaultOperators[_msgSender()][operator] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6409:6464  _revokedDefaultOperators[_msgSender()][operator] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6460:6464  true */\n      0x01\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6409:6464  _revokedDefaultOperators[_msgSender()][operator] = true */\n      or\n      swap1\n      sstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6362:6547  if (_defaultOperators[operator]) {... */\n      jump(tag_184)\n    tag_182:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6502:6526  _operators[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6502:6512  _operators */\n      0x06\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6502:6526  _operators[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6502:6536  _operators[_msgSender()][operator] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6495:6536  delete _operators[_msgSender()][operator] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6362:6547  if (_defaultOperators[operator]) {... */\n    tag_184:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6562:6601  RevokedOperator(operator, _msgSender()) */\n      mload(0x40)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6562:6601  RevokedOperator(operator, _msgSender()) */\n      dup4\n      and\n      swap1\n      0x50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa1\n      swap1\n      0x00\n      swap1\n      log3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":6204:6608  function revokeOperator(address operator) public virtual override  {... */\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7438:7725  function operatorBurn(address account, uint256 amount, bytes memory data, bytes memory operatorData) public virtual override {... */\n    tag_94:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7581:7617  isOperatorFor(_msgSender(), account) */\n      tag_188\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7609:7616  account */\n      dup6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7581:7594  isOperatorFor */\n      tag_82\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7581:7617  isOperatorFor(_msgSender(), account) */\n      jump\t// in\n    tag_188:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7573:7666  require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8989:8991   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7573:7666  require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8971:8992   */\n      mstore\n        /* \"#utility.yul\":9028:9030   */\n      0x2c\n        /* \"#utility.yul\":9008:9026   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9001:9031   */\n      mstore\n        /* \"#utility.yul\":9067:9101   */\n      0x4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f\n        /* \"#utility.yul\":9047:9065   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9040:9102   */\n      mstore\n      shl(0xa1, 0x39103337b9103437b63232b9)\n        /* \"#utility.yul\":9118:9136   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9111:9153   */\n      mstore\n        /* \"#utility.yul\":9170:9189   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7573:7666  require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\") */\n      tag_117\n        /* \"#utility.yul\":8787:9195   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7573:7666  require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\") */\n    tag_190:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7676:7718  _burn(account, amount, data, operatorData) */\n      tag_192\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7682:7689  account */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7691:7697  amount */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7699:7703  data */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7705:7717  operatorData */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7676:7681  _burn */\n      tag_193\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7676:7718  _burn(account, amount, data, operatorData) */\n      jump\t// in\n    tag_192:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":7438:7725  function operatorBurn(address account, uint256 amount, bytes memory data, bytes memory operatorData) public virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5170:5298  function burn(uint256 amount, bytes memory data) public virtual override  {... */\n    tag_98:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5254:5291  _burn(_msgSender(), amount, data, \"\") */\n      tag_195\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5274:5280  amount */\n      dup4\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5282:5286  data */\n      dup4\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5254:5291  _burn(_msgSender(), amount, data, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5254:5259  _burn */\n      tag_193\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5254:5291  _burn(_msgSender(), amount, data, \"\") */\n      jump\t// in\n    tag_195:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":5170:5298  function burn(uint256 amount, bytes memory data) public virtual override  {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14752:15087  function _approve(address holder, address spender, uint256 value) internal {... */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14845:14865  holder != address(0) */\n      dup4\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14837:14907  require(holder != address(0), \"ERC777: approve from the zero address\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10209:10211   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14837:14907  require(holder != address(0), \"ERC777: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10191:10212   */\n      mstore\n        /* \"#utility.yul\":10248:10250   */\n      0x25\n        /* \"#utility.yul\":10228:10246   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10221:10251   */\n      mstore\n        /* \"#utility.yul\":10287:10321   */\n      0x4552433737373a20617070726f76652066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10267:10285   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10260:10322   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":10338:10356   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10331:10366   */\n      mstore\n        /* \"#utility.yul\":10383:10402   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14837:14907  require(holder != address(0), \"ERC777: approve from the zero address\") */\n      tag_117\n        /* \"#utility.yul\":10007:10408   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14837:14907  require(holder != address(0), \"ERC777: approve from the zero address\") */\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14925:14946  spender != address(0) */\n      dup3\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14917:14986  require(spender != address(0), \"ERC777: approve to the zero address\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10615:10617   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14917:14986  require(spender != address(0), \"ERC777: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10597:10618   */\n      mstore\n        /* \"#utility.yul\":10654:10656   */\n      0x23\n        /* \"#utility.yul\":10634:10652   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10627:10657   */\n      mstore\n        /* \"#utility.yul\":10693:10727   */\n      0x4552433737373a20617070726f766520746f20746865207a65726f2061646472\n        /* \"#utility.yul\":10673:10691   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10666:10728   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":10744:10762   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10737:10770   */\n      mstore\n        /* \"#utility.yul\":10787:10806   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14917:14986  require(spender != address(0), \"ERC777: approve to the zero address\") */\n      tag_117\n        /* \"#utility.yul\":10413:10812   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14917:14986  require(spender != address(0), \"ERC777: approve to the zero address\") */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14997:15016  _allowances[holder] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14997:15008  _allowances */\n      0x08\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14997:15016  _allowances[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14997:15025  _allowances[holder][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14997:15033  _allowances[holder][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15048:15080  Approval(holder, spender, value) */\n      swap1\n      mload\n        /* \"#utility.yul\":2170:2195   */\n      dup5\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15048:15080  Approval(holder, spender, value) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":2143:2161   */\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15048:15080  Approval(holder, spender, value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14752:15087  function _approve(address holder, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15560:16044  function _callTokensToSend(... */\n    tag_124:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15803:15881  _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH) */\n      mload(0x40)\n      shl(0xe1, 0x555ddc65)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11009:11064   */\n      dup7\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15803:15881  _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10991:11065   */\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1417:1448  keccak256(\"ERC777TokensSender\") */\n      0x29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895\n        /* \"#utility.yul\":11081:11099   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11074:11108   */\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15781:15800  address implementer */\n      0x00\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1168:1210  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n      0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15803:15844  _ERC1820_REGISTRY.getInterfaceImplementer */\n      0xaabbb8ca\n      swap1\n        /* \"#utility.yul\":10964:10982   */\n      0x44\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15803:15881  _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15781:15881  address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15895:15920  implementer != address(0) */\n      dup2\n      and\n      iszero\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15891:16038  if (implementer != address(0)) {... */\n      tag_213\n      jumpi\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15936:16027  IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData) */\n      mload(0x40)\n      shl(0xe1, 0x3ad5cbc1)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15936:15975  IERC777Sender(implementer).tokensToSend */\n      dup3\n      and\n      swap1\n      0x75ab9782\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15936:16027  IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData) */\n      tag_214\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15976:15984  operator */\n      dup11\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15986:15990  from */\n      dup11\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15992:15994  to */\n      dup11\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15996:16002  amount */\n      dup11\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":16004:16012  userData */\n      dup11\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":16014:16026  operatorData */\n      dup11\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15936:16027  IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData) */\n      0x04\n      add\n      tag_215\n      jump\t// in\n    tag_214:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15891:16038  if (implementer != address(0)) {... */\n    tag_213:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15771:16044  {... */\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":15560:16044  function _callTokensToSend(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14025:14614  function _move(... */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14315:14330  _balances[from] */\n      dup6\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14293:14312  uint256 fromBalance */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14315:14330  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14348:14369  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14340:14413  require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12337:12339   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14340:14413  require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12319:12340   */\n      mstore\n        /* \"#utility.yul\":12376:12378   */\n      0x27\n        /* \"#utility.yul\":12356:12374   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12349:12379   */\n      mstore\n        /* \"#utility.yul\":12415:12449   */\n      0x4552433737373a207472616e7366657220616d6f756e74206578636565647320\n        /* \"#utility.yul\":12395:12413   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12388:12450   */\n      mstore\n      shl(0xc8, 0x62616c616e6365)\n        /* \"#utility.yul\":12466:12484   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12459:12496   */\n      mstore\n        /* \"#utility.yul\":12513:12532   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14340:14413  require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\") */\n      tag_117\n        /* \"#utility.yul\":12135:12538   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14340:14413  require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\") */\n    tag_222:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14441:14461  fromBalance - amount */\n      tag_225\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14455:14461  amount */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14441:14452  fromBalance */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14441:14461  fromBalance - amount */\n      tag_132\n      jump\t// in\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14423:14438  _balances[from] */\n      dup1\n      dup9\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14423:14432  _balances */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14423:14438  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14423:14461  _balances[from] = fromBalance - amount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14471:14484  _balances[to] */\n      swap1\n      dup8\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14471:14494  _balances[to] += amount */\n      dup1\n      sload\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14488:14494  amount */\n      dup7\n      swap3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14423:14432  _balances */\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14471:14494  _balances[to] += amount */\n      tag_226\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14488:14494  amount */\n      dup5\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14471:14494  _balances[to] += amount */\n      tag_227\n      jump\t// in\n    tag_226:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14531:14533  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14510:14566  Sent(operator, from, to, amount, userData, operatorData) */\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14525:14529  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14510:14566  Sent(operator, from, to, amount, userData, operatorData) */\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14515:14523  operator */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14510:14566  Sent(operator, from, to, amount, userData, operatorData) */\n      and\n      0x06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14535:14541  amount */\n      dup8\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14543:14551  userData */\n      dup8\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14553:14565  operatorData */\n      dup8\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14510:14566  Sent(operator, from, to, amount, userData, operatorData) */\n      mload(0x40)\n      tag_228\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14596:14598  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14581:14607  Transfer(from, to, amount) */\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14590:14594  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14581:14607  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14600:14606  amount */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14581:14607  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_230\n      swap2\n        /* \"#utility.yul\":2170:2195   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2143:2161   */\n      add\n      swap1\n        /* \"#utility.yul\":2024:2201   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14581:14607  Transfer(from, to, amount) */\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14224:14614  {... */\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14025:14614  function _move(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":16733:17421  function _callTokensReceived(... */\n    tag_134:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17012:17091  _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH) */\n      mload(0x40)\n      shl(0xe1, 0x555ddc65)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11009:11064   */\n      dup7\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17012:17091  _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10991:11065   */\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1514:1548  keccak256(\"ERC777TokensRecipient\") */\n      0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b\n        /* \"#utility.yul\":11081:11099   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11074:11108   */\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":16990:17009  address implementer */\n      0x00\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":1168:1210  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n      0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17012:17053  _ERC1820_REGISTRY.getInterfaceImplementer */\n      0xaabbb8ca\n      swap1\n        /* \"#utility.yul\":10964:10982   */\n      0x44\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17012:17091  _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_234\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_234:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_235\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_235:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":16990:17091  address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17105:17130  implementer != address(0) */\n      dup2\n      and\n      iszero\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17101:17415  if (implementer != address(0)) {... */\n      tag_236\n      jumpi\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17146:17242  IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData) */\n      mload(0x40)\n      shl(0xe0, 0x23de29)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17146:17190  IERC777Recipient(implementer).tokensReceived */\n      dup3\n      and\n      swap1\n      0x23de29\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17146:17242  IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData) */\n      tag_237\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17191:17199  operator */\n      dup12\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17201:17205  from */\n      dup12\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17207:17209  to */\n      dup12\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17211:17217  amount */\n      dup12\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17219:17227  userData */\n      dup12\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17229:17241  operatorData */\n      dup12\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17146:17242  IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData) */\n      0x04\n      add\n      tag_215\n      jump\t// in\n    tag_237:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_238:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_240:\n      pop\n      pop\n      pop\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17101:17415  if (implementer != address(0)) {... */\n      jump(tag_245)\n    tag_236:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17263:17282  requireReceptionAck */\n      dup2\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17259:17415  if (requireReceptionAck) {... */\n      iszero\n      tag_245\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17307:17320  to.isContract */\n      dup7\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":1078:1098  extcodesize(account) */\n      extcodesize\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":1116:1124  size > 0 */\n      iszero\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17298:17404  require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13330:13332   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17298:17404  require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13312:13333   */\n      mstore\n        /* \"#utility.yul\":13369:13371   */\n      0x4d\n        /* \"#utility.yul\":13349:13367   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13342:13372   */\n      mstore\n        /* \"#utility.yul\":13408:13442   */\n      0x4552433737373a20746f6b656e20726563697069656e7420636f6e7472616374\n        /* \"#utility.yul\":13388:13406   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13381:13443   */\n      mstore\n        /* \"#utility.yul\":13479:13513   */\n      0x20686173206e6f20696d706c656d656e74657220666f7220455243373737546f\n        /* \"#utility.yul\":13459:13477   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13452:13514   */\n      mstore\n        /* \"#utility.yul\":13551:13566   */\n      0x6b656e73526563697069656e7400000000000000000000000000000000000000\n        /* \"#utility.yul\":13530:13549   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":13523:13567   */\n      mstore\n        /* \"#utility.yul\":13584:13603   */\n      0xa4\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17298:17404  require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\") */\n      tag_117\n        /* \"#utility.yul\":13128:13609   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":17298:17404  require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\") */\n    tag_245:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":16980:17421  {... */\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":16733:17421  function _callTokensReceived(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12247:12917  function _send(... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12489:12507  from != address(0) */\n      dup7\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12481:12546  require(from != address(0), \"ERC777: send from the zero address\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13816:13818   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12481:12546  require(from != address(0), \"ERC777: send from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13798:13819   */\n      mstore\n        /* \"#utility.yul\":13855:13857   */\n      0x22\n        /* \"#utility.yul\":13835:13853   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13828:13858   */\n      mstore\n        /* \"#utility.yul\":13894:13928   */\n      0x4552433737373a2073656e642066726f6d20746865207a65726f206164647265\n        /* \"#utility.yul\":13874:13892   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13867:13929   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":13945:13963   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13938:13970   */\n      mstore\n        /* \"#utility.yul\":13987:14006   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12481:12546  require(from != address(0), \"ERC777: send from the zero address\") */\n      tag_117\n        /* \"#utility.yul\":13614:14012   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12481:12546  require(from != address(0), \"ERC777: send from the zero address\") */\n    tag_249:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12564:12580  to != address(0) */\n      dup6\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12556:12617  require(to != address(0), \"ERC777: send to the zero address\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14219:14221   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12556:12617  require(to != address(0), \"ERC777: send to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14201:14222   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14238:14256   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14231:14261   */\n      mstore\n        /* \"#utility.yul\":14297:14331   */\n      0x4552433737373a2073656e6420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":14277:14295   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14270:14332   */\n      mstore\n        /* \"#utility.yul\":14349:14367   */\n      0x64\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12556:12617  require(to != address(0), \"ERC777: send to the zero address\") */\n      tag_117\n        /* \"#utility.yul\":14017:14373   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12556:12617  require(to != address(0), \"ERC777: send to the zero address\") */\n    tag_252:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12670:12739  _callTokensToSend(operator, from, to, amount, userData, operatorData) */\n      tag_256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      dup2\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12698:12702  from */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12704:12706  to */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12708:12714  amount */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12716:12724  userData */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12726:12738  operatorData */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12670:12687  _callTokensToSend */\n      tag_124\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12670:12739  _callTokensToSend(operator, from, to, amount, userData, operatorData) */\n      jump\t// in\n    tag_256:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12750:12807  _move(operator, from, to, amount, userData, operatorData) */\n      tag_257\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12756:12764  operator */\n      dup2\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12766:12770  from */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12772:12774  to */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12776:12782  amount */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12784:12792  userData */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12794:12806  operatorData */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12750:12755  _move */\n      tag_126\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12750:12807  _move(operator, from, to, amount, userData, operatorData) */\n      jump\t// in\n    tag_257:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12818:12910  _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck) */\n      tag_213\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12838:12846  operator */\n      dup2\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12848:12852  from */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12854:12856  to */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12858:12864  amount */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12866:12874  userData */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12876:12888  operatorData */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12890:12909  requireReceptionAck */\n      dup9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12818:12837  _callTokensReceived */\n      tag_134\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":12818:12910  _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck) */\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13222:14019  function _burn(... */\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13406:13424  from != address(0) */\n      dup5\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13398:13463  require(from != address(0), \"ERC777: burn from the zero address\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14580:14582   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13398:13463  require(from != address(0), \"ERC777: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14562:14583   */\n      mstore\n        /* \"#utility.yul\":14619:14621   */\n      0x22\n        /* \"#utility.yul\":14599:14617   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14592:14622   */\n      mstore\n        /* \"#utility.yul\":14658:14692   */\n      0x4552433737373a206275726e2066726f6d20746865207a65726f206164647265\n        /* \"#utility.yul\":14638:14656   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14631:14693   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":14709:14727   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14702:14734   */\n      mstore\n        /* \"#utility.yul\":14751:14770   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13398:13463  require(from != address(0), \"ERC777: burn from the zero address\") */\n      tag_117\n        /* \"#utility.yul\":14378:14776   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13398:13463  require(from != address(0), \"ERC777: burn from the zero address\") */\n    tag_260:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13516:13589  _callTokensToSend(operator, from, address(0), amount, data, operatorData) */\n      tag_264\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":665:675  msg.sender */\n      dup2\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13544:13548  from */\n      dup7\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13474:13490  address operator */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13562:13568  amount */\n      dup8\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13570:13574  data */\n      dup8\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13576:13588  operatorData */\n      dup8\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13516:13533  _callTokensToSend */\n      tag_124\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13516:13589  _callTokensToSend(operator, from, address(0), amount, data, operatorData) */\n      jump\t// in\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13723:13738  _balances[from] */\n      dup6\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13701:13720  uint256 fromBalance */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13723:13738  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13756:13777  fromBalance >= amount */\n      dup5\n      dup2\n      lt\n      iszero\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13748:13817  require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14983:14985   */\n      0x20\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13748:13817  require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14965:14986   */\n      mstore\n        /* \"#utility.yul\":15022:15024   */\n      0x23\n        /* \"#utility.yul\":15002:15020   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14995:15025   */\n      mstore\n        /* \"#utility.yul\":15061:15095   */\n      0x4552433737373a206275726e20616d6f756e7420657863656564732062616c61\n        /* \"#utility.yul\":15041:15059   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15034:15096   */\n      mstore\n      shl(0xe8, 0x6e6365)\n        /* \"#utility.yul\":15112:15130   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15105:15138   */\n      mstore\n        /* \"#utility.yul\":15155:15174   */\n      0x84\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13748:13817  require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\") */\n      tag_117\n        /* \"#utility.yul\":14781:15180   */\n      jump\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13748:13817  require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\") */\n    tag_266:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13845:13865  fromBalance - amount */\n      tag_269\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13859:13865  amount */\n      dup6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13845:13856  fromBalance */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13845:13865  fromBalance - amount */\n      tag_132\n      jump\t// in\n    tag_269:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13827:13842  _balances[from] */\n      dup8\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13827:13836  _balances */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13827:13842  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13827:13865  _balances[from] = fromBalance - amount */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13875:13887  _totalSupply */\n      0x01\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13875:13897  _totalSupply -= amount */\n      dup1\n      sload\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13891:13897  amount */\n      dup8\n      swap3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13827:13836  _balances */\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13875:13897  _totalSupply -= amount */\n      tag_270\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13891:13897  amount */\n      dup5\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13875:13897  _totalSupply -= amount */\n      tag_132\n      jump\t// in\n    tag_270:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13930:13934  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13913:13963  Burned(operator, from, amount, data, operatorData) */\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13920:13928  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13913:13963  Burned(operator, from, amount, data, operatorData) */\n      and\n      0xa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13936:13942  amount */\n      dup8\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13944:13948  data */\n      dup8\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13950:13962  operatorData */\n      dup8\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13913:13963  Burned(operator, from, amount, data, operatorData) */\n      mload(0x40)\n      tag_271\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13978:14012  Transfer(from, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":2170:2195   */\n      dup6\n      dup2\n      mstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":14001:14002  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13978:14012  Transfer(from, address(0), amount) */\n      dup9\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2143:2161   */\n      add\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13978:14012  Transfer(from, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13388:14019  {... */\n      pop\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":13222:14019  function _burn(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:695   */\n    tag_29:\n        /* \"#utility.yul\":185:187   */\n      0x20\n        /* \"#utility.yul\":237:258   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":307:320   */\n      dup3\n      mload\n        /* \"#utility.yul\":210:228   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":329:351   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":156:160   */\n      0x00\n      swap2\n        /* \"#utility.yul\":185:187   */\n      swap1\n        /* \"#utility.yul\":408:423   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":382:384   */\n      0x40\n        /* \"#utility.yul\":367:385   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":156:160   */\n      dup5\n        /* \"#utility.yul\":451:669   */\n    tag_282:\n        /* \"#utility.yul\":465:471   */\n      dup2\n        /* \"#utility.yul\":462:463   */\n      dup2\n        /* \"#utility.yul\":459:472   */\n      lt\n        /* \"#utility.yul\":451:669   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":530:543   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":526:588   */\n      and\n        /* \"#utility.yul\":514:589   */\n      dup4\n      mstore\n        /* \"#utility.yul\":644:659   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":609:621   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":487:488   */\n      0x01\n        /* \"#utility.yul\":480:489   */\n      add\n        /* \"#utility.yul\":451:669   */\n      jump(tag_282)\n    tag_284:\n      pop\n        /* \"#utility.yul\":686:689   */\n      swap1\n      swap7\n        /* \"#utility.yul\":14:695   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":700:1123   */\n    tag_275:\n        /* \"#utility.yul\":742:745   */\n      0x00\n        /* \"#utility.yul\":780:785   */\n      dup2\n        /* \"#utility.yul\":774:786   */\n      mload\n        /* \"#utility.yul\":807:813   */\n      dup1\n        /* \"#utility.yul\":802:805   */\n      dup5\n        /* \"#utility.yul\":795:814   */\n      mstore\n        /* \"#utility.yul\":832:833   */\n      0x00\n        /* \"#utility.yul\":842:1004   */\n    tag_286:\n        /* \"#utility.yul\":856:862   */\n      dup2\n        /* \"#utility.yul\":853:854   */\n      dup2\n        /* \"#utility.yul\":850:863   */\n      lt\n        /* \"#utility.yul\":842:1004   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":918:922   */\n      0x20\n        /* \"#utility.yul\":974:987   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":970:992   */\n      dup2\n      add\n        /* \"#utility.yul\":964:993   */\n      mload\n        /* \"#utility.yul\":946:957   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":942:962   */\n      dup3\n      add\n        /* \"#utility.yul\":935:994   */\n      mstore\n        /* \"#utility.yul\":871:883   */\n      add\n        /* \"#utility.yul\":842:1004   */\n      jump(tag_286)\n    tag_288:\n        /* \"#utility.yul\":846:849   */\n      pop\n        /* \"#utility.yul\":1049:1050   */\n      0x00\n        /* \"#utility.yul\":1042:1046   */\n      0x20\n        /* \"#utility.yul\":1033:1039   */\n      dup3\n        /* \"#utility.yul\":1028:1031   */\n      dup7\n        /* \"#utility.yul\":1024:1040   */\n      add\n        /* \"#utility.yul\":1020:1047   */\n      add\n        /* \"#utility.yul\":1013:1051   */\n      mstore\n        /* \"#utility.yul\":1112:1116   */\n      0x20\n        /* \"#utility.yul\":1105:1107   */\n      0x1f\n        /* \"#utility.yul\":1101:1108   */\n      not\n        /* \"#utility.yul\":1096:1098   */\n      0x1f\n        /* \"#utility.yul\":1088:1094   */\n      dup4\n        /* \"#utility.yul\":1084:1099   */\n      add\n        /* \"#utility.yul\":1080:1109   */\n      and\n        /* \"#utility.yul\":1075:1078   */\n      dup6\n        /* \"#utility.yul\":1071:1110   */\n      add\n        /* \"#utility.yul\":1067:1117   */\n      add\n        /* \"#utility.yul\":1060:1117   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":700:1123   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1128:1348   */\n    tag_33:\n        /* \"#utility.yul\":1277:1279   */\n      0x20\n        /* \"#utility.yul\":1266:1275   */\n      dup2\n        /* \"#utility.yul\":1259:1280   */\n      mstore\n        /* \"#utility.yul\":1240:1244   */\n      0x00\n        /* \"#utility.yul\":1297:1342   */\n      tag_175\n        /* \"#utility.yul\":1338:1340   */\n      0x20\n        /* \"#utility.yul\":1327:1336   */\n      dup4\n        /* \"#utility.yul\":1323:1341   */\n      add\n        /* \"#utility.yul\":1315:1321   */\n      dup5\n        /* \"#utility.yul\":1297:1342   */\n      tag_275\n      jump\t// in\n        /* \"#utility.yul\":1353:1507   */\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1432:1437   */\n      dup2\n        /* \"#utility.yul\":1428:1482   */\n      and\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1483   */\n      eq\n        /* \"#utility.yul\":1408:1501   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":1497:1498   */\n      0x00\n        /* \"#utility.yul\":1494:1495   */\n      dup1\n        /* \"#utility.yul\":1487:1499   */\n      revert\n        /* \"#utility.yul\":1408:1501   */\n    tag_292:\n        /* \"#utility.yul\":1353:1507   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1512:1827   */\n    tag_36:\n        /* \"#utility.yul\":1580:1586   */\n      0x00\n        /* \"#utility.yul\":1588:1594   */\n      dup1\n        /* \"#utility.yul\":1641:1643   */\n      0x40\n        /* \"#utility.yul\":1629:1638   */\n      dup4\n        /* \"#utility.yul\":1620:1627   */\n      dup6\n        /* \"#utility.yul\":1616:1639   */\n      sub\n        /* \"#utility.yul\":1612:1644   */\n      slt\n        /* \"#utility.yul\":1609:1661   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":1657:1658   */\n      0x00\n        /* \"#utility.yul\":1654:1655   */\n      dup1\n        /* \"#utility.yul\":1647:1659   */\n      revert\n        /* \"#utility.yul\":1609:1661   */\n    tag_294:\n        /* \"#utility.yul\":1696:1705   */\n      dup3\n        /* \"#utility.yul\":1683:1706   */\n      calldataload\n        /* \"#utility.yul\":1715:1746   */\n      tag_295\n        /* \"#utility.yul\":1740:1745   */\n      dup2\n        /* \"#utility.yul\":1715:1746   */\n      tag_276\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":1765:1770   */\n      swap5\n        /* \"#utility.yul\":1817:1819   */\n      0x20\n        /* \"#utility.yul\":1802:1820   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1789:1821   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1512:1827   */\n      jump\t// out\n        /* \"#utility.yul\":2206:2662   */\n    tag_46:\n        /* \"#utility.yul\":2283:2289   */\n      0x00\n        /* \"#utility.yul\":2291:2297   */\n      dup1\n        /* \"#utility.yul\":2299:2305   */\n      0x00\n        /* \"#utility.yul\":2352:2354   */\n      0x60\n        /* \"#utility.yul\":2340:2349   */\n      dup5\n        /* \"#utility.yul\":2331:2338   */\n      dup7\n        /* \"#utility.yul\":2327:2350   */\n      sub\n        /* \"#utility.yul\":2323:2355   */\n      slt\n        /* \"#utility.yul\":2320:2372   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":2368:2369   */\n      0x00\n        /* \"#utility.yul\":2365:2366   */\n      dup1\n        /* \"#utility.yul\":2358:2370   */\n      revert\n        /* \"#utility.yul\":2320:2372   */\n    tag_299:\n        /* \"#utility.yul\":2407:2416   */\n      dup4\n        /* \"#utility.yul\":2394:2417   */\n      calldataload\n        /* \"#utility.yul\":2426:2457   */\n      tag_300\n        /* \"#utility.yul\":2451:2456   */\n      dup2\n        /* \"#utility.yul\":2426:2457   */\n      tag_276\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":2476:2481   */\n      swap3\n      pop\n        /* \"#utility.yul\":2533:2535   */\n      0x20\n        /* \"#utility.yul\":2518:2536   */\n      dup5\n      add\n        /* \"#utility.yul\":2505:2537   */\n      calldataload\n        /* \"#utility.yul\":2546:2579   */\n      tag_301\n        /* \"#utility.yul\":2505:2537   */\n      dup2\n        /* \"#utility.yul\":2546:2579   */\n      tag_276\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":2206:2662   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2598:2605   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2652:2654   */\n      0x40\n        /* \"#utility.yul\":2637:2655   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2624:2656   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2206:2662   */\n      jump\t// out\n        /* \"#utility.yul\":2856:2983   */\n    tag_277:\n        /* \"#utility.yul\":2917:2927   */\n      0x4e487b71\n        /* \"#utility.yul\":2912:2915   */\n      0xe0\n        /* \"#utility.yul\":2908:2928   */\n      shl\n        /* \"#utility.yul\":2905:2906   */\n      0x00\n        /* \"#utility.yul\":2898:2929   */\n      mstore\n        /* \"#utility.yul\":2948:2952   */\n      0x41\n        /* \"#utility.yul\":2945:2946   */\n      0x04\n        /* \"#utility.yul\":2938:2953   */\n      mstore\n        /* \"#utility.yul\":2972:2976   */\n      0x24\n        /* \"#utility.yul\":2969:2970   */\n      0x00\n        /* \"#utility.yul\":2962:2977   */\n      revert\n        /* \"#utility.yul\":2988:3706   */\n    tag_278:\n        /* \"#utility.yul\":3030:3035   */\n      0x00\n        /* \"#utility.yul\":3083:3086   */\n      dup3\n        /* \"#utility.yul\":3076:3080   */\n      0x1f\n        /* \"#utility.yul\":3068:3074   */\n      dup4\n        /* \"#utility.yul\":3064:3081   */\n      add\n        /* \"#utility.yul\":3060:3087   */\n      slt\n        /* \"#utility.yul\":3050:3105   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":3101:3102   */\n      0x00\n        /* \"#utility.yul\":3098:3099   */\n      dup1\n        /* \"#utility.yul\":3091:3103   */\n      revert\n        /* \"#utility.yul\":3050:3105   */\n    tag_305:\n        /* \"#utility.yul\":3137:3143   */\n      dup2\n        /* \"#utility.yul\":3124:3144   */\n      calldataload\n        /* \"#utility.yul\":3163:3181   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3200:3202   */\n      dup1\n        /* \"#utility.yul\":3196:3198   */\n      dup3\n        /* \"#utility.yul\":3193:3203   */\n      gt\n        /* \"#utility.yul\":3190:3226   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":3206:3224   */\n      tag_307\n      tag_277\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3281:3283   */\n      0x40\n        /* \"#utility.yul\":3275:3284   */\n      mload\n        /* \"#utility.yul\":3249:3251   */\n      0x1f\n        /* \"#utility.yul\":3335:3348   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3331:3353   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3355:3357   */\n      0x3f\n        /* \"#utility.yul\":3327:3358   */\n      add\n        /* \"#utility.yul\":3323:3363   */\n      and\n        /* \"#utility.yul\":3311:3364   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3379:3397   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":3399:3421   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3376:3422   */\n      or\n        /* \"#utility.yul\":3373:3445   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":3425:3443   */\n      tag_309\n      tag_277\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3465:3475   */\n      dup2\n        /* \"#utility.yul\":3461:3463   */\n      0x40\n        /* \"#utility.yul\":3454:3476   */\n      mstore\n        /* \"#utility.yul\":3500:3502   */\n      dup4\n        /* \"#utility.yul\":3492:3498   */\n      dup2\n        /* \"#utility.yul\":3485:3503   */\n      mstore\n        /* \"#utility.yul\":3546:3549   */\n      dup7\n        /* \"#utility.yul\":3539:3543   */\n      0x20\n        /* \"#utility.yul\":3534:3536   */\n      dup6\n        /* \"#utility.yul\":3526:3532   */\n      dup9\n        /* \"#utility.yul\":3522:3537   */\n      add\n        /* \"#utility.yul\":3518:3544   */\n      add\n        /* \"#utility.yul\":3515:3550   */\n      gt\n        /* \"#utility.yul\":3512:3567   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":3563:3564   */\n      0x00\n        /* \"#utility.yul\":3560:3561   */\n      dup1\n        /* \"#utility.yul\":3553:3565   */\n      revert\n        /* \"#utility.yul\":3512:3567   */\n    tag_310:\n        /* \"#utility.yul\":3627:3629   */\n      dup4\n        /* \"#utility.yul\":3620:3624   */\n      0x20\n        /* \"#utility.yul\":3612:3618   */\n      dup8\n        /* \"#utility.yul\":3608:3625   */\n      add\n        /* \"#utility.yul\":3601:3605   */\n      0x20\n        /* \"#utility.yul\":3593:3599   */\n      dup4\n        /* \"#utility.yul\":3589:3606   */\n      add\n        /* \"#utility.yul\":3576:3630   */\n      calldatacopy\n        /* \"#utility.yul\":3674:3675   */\n      0x00\n        /* \"#utility.yul\":3667:3671   */\n      0x20\n        /* \"#utility.yul\":3662:3664   */\n      dup6\n        /* \"#utility.yul\":3654:3660   */\n      dup4\n        /* \"#utility.yul\":3650:3665   */\n      add\n        /* \"#utility.yul\":3646:3672   */\n      add\n        /* \"#utility.yul\":3639:3676   */\n      mstore\n        /* \"#utility.yul\":3694:3700   */\n      dup1\n        /* \"#utility.yul\":3685:3700   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2988:3706   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3711:4596   */\n    tag_58:\n        /* \"#utility.yul\":3824:3830   */\n      0x00\n        /* \"#utility.yul\":3832:3838   */\n      dup1\n        /* \"#utility.yul\":3840:3846   */\n      0x00\n        /* \"#utility.yul\":3848:3854   */\n      dup1\n        /* \"#utility.yul\":3856:3862   */\n      0x00\n        /* \"#utility.yul\":3909:3912   */\n      0xa0\n        /* \"#utility.yul\":3897:3906   */\n      dup7\n        /* \"#utility.yul\":3888:3895   */\n      dup9\n        /* \"#utility.yul\":3884:3907   */\n      sub\n        /* \"#utility.yul\":3880:3913   */\n      slt\n        /* \"#utility.yul\":3877:3930   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":3926:3927   */\n      0x00\n        /* \"#utility.yul\":3923:3924   */\n      dup1\n        /* \"#utility.yul\":3916:3928   */\n      revert\n        /* \"#utility.yul\":3877:3930   */\n    tag_312:\n        /* \"#utility.yul\":3965:3974   */\n      dup6\n        /* \"#utility.yul\":3952:3975   */\n      calldataload\n        /* \"#utility.yul\":3984:4015   */\n      tag_313\n        /* \"#utility.yul\":4009:4014   */\n      dup2\n        /* \"#utility.yul\":3984:4015   */\n      tag_276\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4034:4039   */\n      swap5\n      pop\n        /* \"#utility.yul\":4091:4093   */\n      0x20\n        /* \"#utility.yul\":4076:4094   */\n      dup7\n      add\n        /* \"#utility.yul\":4063:4095   */\n      calldataload\n        /* \"#utility.yul\":4104:4137   */\n      tag_314\n        /* \"#utility.yul\":4063:4095   */\n      dup2\n        /* \"#utility.yul\":4104:4137   */\n      tag_276\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4156:4163   */\n      swap4\n      pop\n        /* \"#utility.yul\":4210:4212   */\n      0x40\n        /* \"#utility.yul\":4195:4213   */\n      dup7\n      add\n        /* \"#utility.yul\":4182:4214   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":4265:4267   */\n      0x60\n        /* \"#utility.yul\":4250:4268   */\n      dup7\n      add\n        /* \"#utility.yul\":4237:4269   */\n      calldataload\n        /* \"#utility.yul\":4288:4306   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4318:4332   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4315:4349   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":4345:4346   */\n      0x00\n        /* \"#utility.yul\":4342:4343   */\n      dup1\n        /* \"#utility.yul\":4335:4347   */\n      revert\n        /* \"#utility.yul\":4315:4349   */\n    tag_315:\n        /* \"#utility.yul\":4368:4417   */\n      tag_316\n        /* \"#utility.yul\":4409:4416   */\n      dup10\n        /* \"#utility.yul\":4400:4406   */\n      dup4\n        /* \"#utility.yul\":4389:4398   */\n      dup11\n        /* \"#utility.yul\":4385:4407   */\n      add\n        /* \"#utility.yul\":4368:4417   */\n      tag_278\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4358:4417   */\n      swap4\n      pop\n        /* \"#utility.yul\":4470:4473   */\n      0x80\n        /* \"#utility.yul\":4459:4468   */\n      dup9\n        /* \"#utility.yul\":4455:4474   */\n      add\n        /* \"#utility.yul\":4442:4475   */\n      calldataload\n        /* \"#utility.yul\":4426:4475   */\n      swap2\n      pop\n        /* \"#utility.yul\":4500:4502   */\n      dup1\n        /* \"#utility.yul\":4490:4498   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      gt\n        /* \"#utility.yul\":4484:4520   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":4516:4517   */\n      0x00\n        /* \"#utility.yul\":4513:4514   */\n      dup1\n        /* \"#utility.yul\":4506:4518   */\n      revert\n        /* \"#utility.yul\":4484:4520   */\n    tag_317:\n      pop\n        /* \"#utility.yul\":4539:4590   */\n      tag_318\n        /* \"#utility.yul\":4582:4589   */\n      dup9\n        /* \"#utility.yul\":4571:4579   */\n      dup3\n        /* \"#utility.yul\":4560:4569   */\n      dup10\n        /* \"#utility.yul\":4556:4580   */\n      add\n        /* \"#utility.yul\":4539:4590   */\n      tag_278\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4529:4590   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3711:4596   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4601:4848   */\n    tag_62:\n        /* \"#utility.yul\":4660:4666   */\n      0x00\n        /* \"#utility.yul\":4713:4715   */\n      0x20\n        /* \"#utility.yul\":4701:4710   */\n      dup3\n        /* \"#utility.yul\":4692:4699   */\n      dup5\n        /* \"#utility.yul\":4688:4711   */\n      sub\n        /* \"#utility.yul\":4684:4716   */\n      slt\n        /* \"#utility.yul\":4681:4733   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":4729:4730   */\n      0x00\n        /* \"#utility.yul\":4726:4727   */\n      dup1\n        /* \"#utility.yul\":4719:4731   */\n      revert\n        /* \"#utility.yul\":4681:4733   */\n    tag_320:\n        /* \"#utility.yul\":4768:4777   */\n      dup2\n        /* \"#utility.yul\":4755:4778   */\n      calldataload\n        /* \"#utility.yul\":4787:4818   */\n      tag_175\n        /* \"#utility.yul\":4812:4817   */\n      dup2\n        /* \"#utility.yul\":4787:4818   */\n      tag_276\n      jump\t// in\n        /* \"#utility.yul\":4853:5376   */\n    tag_73:\n        /* \"#utility.yul\":4939:4945   */\n      0x00\n        /* \"#utility.yul\":4947:4953   */\n      dup1\n        /* \"#utility.yul\":4955:4961   */\n      0x00\n        /* \"#utility.yul\":5008:5010   */\n      0x60\n        /* \"#utility.yul\":4996:5005   */\n      dup5\n        /* \"#utility.yul\":4987:4994   */\n      dup7\n        /* \"#utility.yul\":4983:5006   */\n      sub\n        /* \"#utility.yul\":4979:5011   */\n      slt\n        /* \"#utility.yul\":4976:5028   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":5024:5025   */\n      0x00\n        /* \"#utility.yul\":5021:5022   */\n      dup1\n        /* \"#utility.yul\":5014:5026   */\n      revert\n        /* \"#utility.yul\":4976:5028   */\n    tag_323:\n        /* \"#utility.yul\":5063:5072   */\n      dup4\n        /* \"#utility.yul\":5050:5073   */\n      calldataload\n        /* \"#utility.yul\":5082:5113   */\n      tag_324\n        /* \"#utility.yul\":5107:5112   */\n      dup2\n        /* \"#utility.yul\":5082:5113   */\n      tag_276\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5132:5137   */\n      swap3\n      pop\n        /* \"#utility.yul\":5184:5186   */\n      0x20\n        /* \"#utility.yul\":5169:5187   */\n      dup5\n      add\n        /* \"#utility.yul\":5156:5188   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":5239:5241   */\n      0x40\n        /* \"#utility.yul\":5224:5242   */\n      dup5\n      add\n        /* \"#utility.yul\":5211:5243   */\n      calldataload\n        /* \"#utility.yul\":5266:5284   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5255:5285   */\n      dup2\n      gt\n        /* \"#utility.yul\":5252:5302   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":5298:5299   */\n      0x00\n        /* \"#utility.yul\":5295:5296   */\n      dup1\n        /* \"#utility.yul\":5288:5300   */\n      revert\n        /* \"#utility.yul\":5252:5302   */\n    tag_325:\n        /* \"#utility.yul\":5321:5370   */\n      tag_326\n        /* \"#utility.yul\":5362:5369   */\n      dup7\n        /* \"#utility.yul\":5353:5359   */\n      dup3\n        /* \"#utility.yul\":5342:5351   */\n      dup8\n        /* \"#utility.yul\":5338:5360   */\n      add\n        /* \"#utility.yul\":5321:5370   */\n      tag_278\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5311:5370   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4853:5376   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5381:5769   */\n    tag_81:\n        /* \"#utility.yul\":5449:5455   */\n      0x00\n        /* \"#utility.yul\":5457:5463   */\n      dup1\n        /* \"#utility.yul\":5510:5512   */\n      0x40\n        /* \"#utility.yul\":5498:5507   */\n      dup4\n        /* \"#utility.yul\":5489:5496   */\n      dup6\n        /* \"#utility.yul\":5485:5508   */\n      sub\n        /* \"#utility.yul\":5481:5513   */\n      slt\n        /* \"#utility.yul\":5478:5530   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":5526:5527   */\n      0x00\n        /* \"#utility.yul\":5523:5524   */\n      dup1\n        /* \"#utility.yul\":5516:5528   */\n      revert\n        /* \"#utility.yul\":5478:5530   */\n    tag_328:\n        /* \"#utility.yul\":5565:5574   */\n      dup3\n        /* \"#utility.yul\":5552:5575   */\n      calldataload\n        /* \"#utility.yul\":5584:5615   */\n      tag_329\n        /* \"#utility.yul\":5609:5614   */\n      dup2\n        /* \"#utility.yul\":5584:5615   */\n      tag_276\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5634:5639   */\n      swap2\n      pop\n        /* \"#utility.yul\":5691:5693   */\n      0x20\n        /* \"#utility.yul\":5676:5694   */\n      dup4\n      add\n        /* \"#utility.yul\":5663:5695   */\n      calldataload\n        /* \"#utility.yul\":5704:5737   */\n      tag_330\n        /* \"#utility.yul\":5663:5695   */\n      dup2\n        /* \"#utility.yul\":5704:5737   */\n      tag_276\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5756:5763   */\n      dup1\n        /* \"#utility.yul\":5746:5763   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5381:5769   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5774:6517   */\n    tag_93:\n        /* \"#utility.yul\":5878:5884   */\n      0x00\n        /* \"#utility.yul\":5886:5892   */\n      dup1\n        /* \"#utility.yul\":5894:5900   */\n      0x00\n        /* \"#utility.yul\":5902:5908   */\n      dup1\n        /* \"#utility.yul\":5955:5958   */\n      0x80\n        /* \"#utility.yul\":5943:5952   */\n      dup6\n        /* \"#utility.yul\":5934:5941   */\n      dup8\n        /* \"#utility.yul\":5930:5953   */\n      sub\n        /* \"#utility.yul\":5926:5959   */\n      slt\n        /* \"#utility.yul\":5923:5976   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":5972:5973   */\n      0x00\n        /* \"#utility.yul\":5969:5970   */\n      dup1\n        /* \"#utility.yul\":5962:5974   */\n      revert\n        /* \"#utility.yul\":5923:5976   */\n    tag_332:\n        /* \"#utility.yul\":6011:6020   */\n      dup5\n        /* \"#utility.yul\":5998:6021   */\n      calldataload\n        /* \"#utility.yul\":6030:6061   */\n      tag_333\n        /* \"#utility.yul\":6055:6060   */\n      dup2\n        /* \"#utility.yul\":6030:6061   */\n      tag_276\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6080:6085   */\n      swap4\n      pop\n        /* \"#utility.yul\":6132:6134   */\n      0x20\n        /* \"#utility.yul\":6117:6135   */\n      dup6\n      add\n        /* \"#utility.yul\":6104:6136   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":6187:6189   */\n      0x40\n        /* \"#utility.yul\":6172:6190   */\n      dup6\n      add\n        /* \"#utility.yul\":6159:6191   */\n      calldataload\n        /* \"#utility.yul\":6210:6228   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6240:6254   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6237:6271   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":6267:6268   */\n      0x00\n        /* \"#utility.yul\":6264:6265   */\n      dup1\n        /* \"#utility.yul\":6257:6269   */\n      revert\n        /* \"#utility.yul\":6237:6271   */\n    tag_334:\n        /* \"#utility.yul\":6290:6339   */\n      tag_335\n        /* \"#utility.yul\":6331:6338   */\n      dup9\n        /* \"#utility.yul\":6322:6328   */\n      dup4\n        /* \"#utility.yul\":6311:6320   */\n      dup10\n        /* \"#utility.yul\":6307:6329   */\n      add\n        /* \"#utility.yul\":6290:6339   */\n      tag_278\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6280:6339   */\n      swap4\n      pop\n        /* \"#utility.yul\":6392:6394   */\n      0x60\n        /* \"#utility.yul\":6381:6390   */\n      dup8\n        /* \"#utility.yul\":6377:6395   */\n      add\n        /* \"#utility.yul\":6364:6396   */\n      calldataload\n        /* \"#utility.yul\":6348:6396   */\n      swap2\n      pop\n        /* \"#utility.yul\":6421:6423   */\n      dup1\n        /* \"#utility.yul\":6411:6419   */\n      dup3\n        /* \"#utility.yul\":6408:6424   */\n      gt\n        /* \"#utility.yul\":6405:6441   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":6437:6438   */\n      0x00\n        /* \"#utility.yul\":6434:6435   */\n      dup1\n        /* \"#utility.yul\":6427:6439   */\n      revert\n        /* \"#utility.yul\":6405:6441   */\n    tag_336:\n      pop\n        /* \"#utility.yul\":6460:6511   */\n      tag_337\n        /* \"#utility.yul\":6503:6510   */\n      dup8\n        /* \"#utility.yul\":6492:6500   */\n      dup3\n        /* \"#utility.yul\":6481:6490   */\n      dup9\n        /* \"#utility.yul\":6477:6501   */\n      add\n        /* \"#utility.yul\":6460:6511   */\n      tag_278\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6450:6511   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5774:6517   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6522:6910   */\n    tag_97:\n        /* \"#utility.yul\":6599:6605   */\n      0x00\n        /* \"#utility.yul\":6607:6613   */\n      dup1\n        /* \"#utility.yul\":6660:6662   */\n      0x40\n        /* \"#utility.yul\":6648:6657   */\n      dup4\n        /* \"#utility.yul\":6639:6646   */\n      dup6\n        /* \"#utility.yul\":6635:6658   */\n      sub\n        /* \"#utility.yul\":6631:6663   */\n      slt\n        /* \"#utility.yul\":6628:6680   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":6676:6677   */\n      0x00\n        /* \"#utility.yul\":6673:6674   */\n      dup1\n        /* \"#utility.yul\":6666:6678   */\n      revert\n        /* \"#utility.yul\":6628:6680   */\n    tag_339:\n        /* \"#utility.yul\":6712:6721   */\n      dup3\n        /* \"#utility.yul\":6699:6722   */\n      calldataload\n        /* \"#utility.yul\":6689:6722   */\n      swap2\n      pop\n        /* \"#utility.yul\":6773:6775   */\n      0x20\n        /* \"#utility.yul\":6762:6771   */\n      dup4\n        /* \"#utility.yul\":6758:6776   */\n      add\n        /* \"#utility.yul\":6745:6777   */\n      calldataload\n        /* \"#utility.yul\":6800:6818   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6792:6798   */\n      dup2\n        /* \"#utility.yul\":6789:6819   */\n      gt\n        /* \"#utility.yul\":6786:6836   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":6832:6833   */\n      0x00\n        /* \"#utility.yul\":6829:6830   */\n      dup1\n        /* \"#utility.yul\":6822:6834   */\n      revert\n        /* \"#utility.yul\":6786:6836   */\n    tag_340:\n        /* \"#utility.yul\":6855:6904   */\n      tag_341\n        /* \"#utility.yul\":6896:6903   */\n      dup6\n        /* \"#utility.yul\":6887:6893   */\n      dup3\n        /* \"#utility.yul\":6876:6885   */\n      dup7\n        /* \"#utility.yul\":6872:6894   */\n      add\n        /* \"#utility.yul\":6855:6904   */\n      tag_278\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6845:6904   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6522:6910   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6915:7295   */\n    tag_104:\n        /* \"#utility.yul\":6994:6995   */\n      0x01\n        /* \"#utility.yul\":6990:7002   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7037:7049   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7058:7119   */\n      tag_343\n      jumpi\n        /* \"#utility.yul\":7112:7116   */\n      0x7f\n        /* \"#utility.yul\":7104:7110   */\n      dup3\n        /* \"#utility.yul\":7100:7117   */\n      and\n        /* \"#utility.yul\":7090:7117   */\n      swap2\n      pop\n        /* \"#utility.yul\":7058:7119   */\n    tag_343:\n        /* \"#utility.yul\":7165:7167   */\n      0x20\n        /* \"#utility.yul\":7157:7163   */\n      dup3\n        /* \"#utility.yul\":7154:7168   */\n      lt\n        /* \"#utility.yul\":7134:7152   */\n      dup2\n        /* \"#utility.yul\":7131:7169   */\n      sub\n        /* \"#utility.yul\":7128:7289   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":7211:7221   */\n      0x4e487b71\n        /* \"#utility.yul\":7206:7209   */\n      0xe0\n        /* \"#utility.yul\":7202:7222   */\n      shl\n        /* \"#utility.yul\":7199:7200   */\n      0x00\n        /* \"#utility.yul\":7192:7223   */\n      mstore\n        /* \"#utility.yul\":7246:7250   */\n      0x22\n        /* \"#utility.yul\":7243:7244   */\n      0x04\n        /* \"#utility.yul\":7236:7251   */\n      mstore\n        /* \"#utility.yul\":7274:7278   */\n      0x24\n        /* \"#utility.yul\":7271:7272   */\n      0x00\n        /* \"#utility.yul\":7264:7279   */\n      revert\n        /* \"#utility.yul\":7128:7289   */\n    tag_344:\n      pop\n        /* \"#utility.yul\":6915:7295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8522:8649   */\n    tag_279:\n        /* \"#utility.yul\":8583:8593   */\n      0x4e487b71\n        /* \"#utility.yul\":8578:8581   */\n      0xe0\n        /* \"#utility.yul\":8574:8594   */\n      shl\n        /* \"#utility.yul\":8571:8572   */\n      0x00\n        /* \"#utility.yul\":8564:8595   */\n      mstore\n        /* \"#utility.yul\":8614:8618   */\n      0x11\n        /* \"#utility.yul\":8611:8612   */\n      0x04\n        /* \"#utility.yul\":8604:8619   */\n      mstore\n        /* \"#utility.yul\":8638:8642   */\n      0x24\n        /* \"#utility.yul\":8635:8636   */\n      0x00\n        /* \"#utility.yul\":8628:8643   */\n      revert\n        /* \"#utility.yul\":8654:8782   */\n    tag_132:\n        /* \"#utility.yul\":8721:8730   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8742:8753   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8739:8776   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":8756:8774   */\n      tag_109\n      tag_279\n      jump\t// in\n        /* \"#utility.yul\":11119:11370   */\n    tag_212:\n        /* \"#utility.yul\":11189:11195   */\n      0x00\n        /* \"#utility.yul\":11242:11244   */\n      0x20\n        /* \"#utility.yul\":11230:11239   */\n      dup3\n        /* \"#utility.yul\":11221:11228   */\n      dup5\n        /* \"#utility.yul\":11217:11240   */\n      sub\n        /* \"#utility.yul\":11213:11245   */\n      slt\n        /* \"#utility.yul\":11210:11262   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":11258:11259   */\n      0x00\n        /* \"#utility.yul\":11255:11256   */\n      dup1\n        /* \"#utility.yul\":11248:11260   */\n      revert\n        /* \"#utility.yul\":11210:11262   */\n    tag_359:\n        /* \"#utility.yul\":11290:11299   */\n      dup2\n        /* \"#utility.yul\":11284:11300   */\n      mload\n        /* \"#utility.yul\":11309:11340   */\n      tag_175\n        /* \"#utility.yul\":11334:11339   */\n      dup2\n        /* \"#utility.yul\":11309:11340   */\n      tag_276\n      jump\t// in\n        /* \"#utility.yul\":11375:12130   */\n    tag_215:\n        /* \"#utility.yul\":11643:11647   */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11753:11755   */\n      dup1\n        /* \"#utility.yul\":11745:11751   */\n      dup10\n        /* \"#utility.yul\":11741:11756   */\n      and\n        /* \"#utility.yul\":11730:11739   */\n      dup4\n        /* \"#utility.yul\":11723:11757   */\n      mstore\n        /* \"#utility.yul\":11805:11807   */\n      dup1\n        /* \"#utility.yul\":11797:11803   */\n      dup9\n        /* \"#utility.yul\":11793:11808   */\n      and\n        /* \"#utility.yul\":11788:11790   */\n      0x20\n        /* \"#utility.yul\":11777:11786   */\n      dup5\n        /* \"#utility.yul\":11773:11791   */\n      add\n        /* \"#utility.yul\":11766:11809   */\n      mstore\n        /* \"#utility.yul\":11857:11859   */\n      dup1\n        /* \"#utility.yul\":11849:11855   */\n      dup8\n        /* \"#utility.yul\":11845:11860   */\n      and\n        /* \"#utility.yul\":11840:11842   */\n      0x40\n        /* \"#utility.yul\":11829:11838   */\n      dup5\n        /* \"#utility.yul\":11825:11843   */\n      add\n        /* \"#utility.yul\":11818:11861   */\n      mstore\n      pop\n        /* \"#utility.yul\":11897:11903   */\n      dup5\n        /* \"#utility.yul\":11892:11894   */\n      0x60\n        /* \"#utility.yul\":11881:11890   */\n      dup4\n        /* \"#utility.yul\":11877:11895   */\n      add\n        /* \"#utility.yul\":11870:11904   */\n      mstore\n        /* \"#utility.yul\":11941:11944   */\n      0xc0\n        /* \"#utility.yul\":11935:11938   */\n      0x80\n        /* \"#utility.yul\":11924:11933   */\n      dup4\n        /* \"#utility.yul\":11920:11939   */\n      add\n        /* \"#utility.yul\":11913:11945   */\n      mstore\n        /* \"#utility.yul\":11968:12014   */\n      tag_362\n        /* \"#utility.yul\":12009:12012   */\n      0xc0\n        /* \"#utility.yul\":11998:12007   */\n      dup4\n        /* \"#utility.yul\":11994:12013   */\n      add\n        /* \"#utility.yul\":11986:11992   */\n      dup6\n        /* \"#utility.yul\":11968:12014   */\n      tag_275\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":12063:12072   */\n      dup3\n        /* \"#utility.yul\":12055:12061   */\n      dup2\n        /* \"#utility.yul\":12051:12073   */\n      sub\n        /* \"#utility.yul\":12045:12048   */\n      0xa0\n        /* \"#utility.yul\":12034:12043   */\n      dup5\n        /* \"#utility.yul\":12030:12049   */\n      add\n        /* \"#utility.yul\":12023:12074   */\n      mstore\n        /* \"#utility.yul\":12091:12124   */\n      tag_363\n        /* \"#utility.yul\":12117:12123   */\n      dup2\n        /* \"#utility.yul\":12109:12115   */\n      dup6\n        /* \"#utility.yul\":12091:12124   */\n      tag_275\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":12083:12124   */\n      swap10\n        /* \"#utility.yul\":11375:12130   */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12543:12668   */\n    tag_227:\n        /* \"#utility.yul\":12608:12617   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12629:12639   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":12626:12662   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":12642:12660   */\n      tag_109\n      tag_279\n      jump\t// in\n        /* \"#utility.yul\":12673:13123   */\n    tag_229:\n        /* \"#utility.yul\":12894:12900   */\n      dup4\n        /* \"#utility.yul\":12883:12892   */\n      dup2\n        /* \"#utility.yul\":12876:12901   */\n      mstore\n        /* \"#utility.yul\":12937:12939   */\n      0x60\n        /* \"#utility.yul\":12932:12934   */\n      0x20\n        /* \"#utility.yul\":12921:12930   */\n      dup3\n        /* \"#utility.yul\":12917:12935   */\n      add\n        /* \"#utility.yul\":12910:12940   */\n      mstore\n        /* \"#utility.yul\":12857:12861   */\n      0x00\n        /* \"#utility.yul\":12963:13008   */\n      tag_369\n        /* \"#utility.yul\":13004:13006   */\n      0x60\n        /* \"#utility.yul\":12993:13002   */\n      dup4\n        /* \"#utility.yul\":12989:13007   */\n      add\n        /* \"#utility.yul\":12981:12987   */\n      dup6\n        /* \"#utility.yul\":12963:13008   */\n      tag_275\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":13056:13065   */\n      dup3\n        /* \"#utility.yul\":13048:13054   */\n      dup2\n        /* \"#utility.yul\":13044:13066   */\n      sub\n        /* \"#utility.yul\":13039:13041   */\n      0x40\n        /* \"#utility.yul\":13028:13037   */\n      dup5\n        /* \"#utility.yul\":13024:13042   */\n      add\n        /* \"#utility.yul\":13017:13067   */\n      mstore\n        /* \"#utility.yul\":13084:13117   */\n      tag_370\n        /* \"#utility.yul\":13110:13116   */\n      dup2\n        /* \"#utility.yul\":13102:13108   */\n      dup6\n        /* \"#utility.yul\":13084:13117   */\n      tag_275\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":13076:13117   */\n      swap7\n        /* \"#utility.yul\":12673:13123   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e480e27bfdbd46f6cfe688fb078e98a0278137b8c54e3dbdbe37e69a2bacf43764736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 1488,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5949:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "191:230:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "201:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "217:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "211:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "201:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "229:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "251:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "267:4:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "273:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "263:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "263:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "282:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "278:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "278:7:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "259:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "259:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "233:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "362:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "364:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "364:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "364:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "305:10:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "325:2:8",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "329:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "321:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "321:10:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "333:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "317:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "317:18:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "302:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "341:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "353:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "338:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "338:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "299:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:62:8"
															},
															"nodeType": "YulIf",
															"src": "296:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "400:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "404:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "393:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "393:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "393:22:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "171:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "180:6:8",
														"type": ""
													}
												],
												"src": "146:275:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "490:586:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "539:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "548:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "551:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "541:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "541:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "541:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "518:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "526:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "514:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "514:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "533:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "510:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "510:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "503:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:35:8"
															},
															"nodeType": "YulIf",
															"src": "500:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "564:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "580:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "574:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "574:13:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "568:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "626:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "628:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "628:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "628:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "602:2:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "614:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "618:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "610:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "610:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "606:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "599:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:26:8"
															},
															"nodeType": "YulIf",
															"src": "596:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "657:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "667:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "661:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "680:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "723:2:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:4:8",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "719:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "719:13:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "738:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "734:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "734:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "715:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "715:27:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "744:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "711:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "711:36:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "695:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:53:8"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "684:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "764:7:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "773:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "757:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "757:19:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "822:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "831:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "834:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "799:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "807:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "795:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "795:15:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "812:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "791:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "791:24:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "817:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "788:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:33:8"
															},
															"nodeType": "YulIf",
															"src": "785:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "847:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "856:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "851:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "912:88:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "array_1",
																									"nodeType": "YulIdentifier",
																									"src": "941:7:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "950:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "937:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "937:15:8"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "954:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "933:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "933:24:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "973:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "981:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "969:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "969:14:8"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "985:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "965:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "965:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "959:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "959:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "926:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "926:64:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "926:64:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "877:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "880:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "874:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "884:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "886:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "895:1:8"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "898:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "891:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "891:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "886:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "870:3:8",
																"statements": []
															},
															"src": "866:134:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "1024:7:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1033:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1020:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1020:16:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1038:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1016:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:25:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1043:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1009:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1009:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1009:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1054:16:8",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "1063:7:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1054:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "464:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "472:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "480:5:8",
														"type": ""
													}
												],
												"src": "426:650:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1241:1368:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1287:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1296:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1299:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1289:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1289:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1289:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1262:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1271:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1258:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1258:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1283:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1254:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:32:8"
															},
															"nodeType": "YulIf",
															"src": "1251:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1312:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1332:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1326:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1316:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1351:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1369:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1373:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1365:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1365:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1377:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1361:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1361:18:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1355:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1406:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1415:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1418:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1408:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1408:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1408:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1394:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1402:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1391:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:14:8"
															},
															"nodeType": "YulIf",
															"src": "1388:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1431:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1474:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1485:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1470:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1470:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1494:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1441:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1441:61:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1431:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1511:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1521:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1515:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1532:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1569:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1554:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1554:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1548:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1548:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1536:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1602:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1611:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1614:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1604:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1604:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1604:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1588:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1598:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1585:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1585:16:8"
															},
															"nodeType": "YulIf",
															"src": "1582:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1627:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1670:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1681:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1666:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1666:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1692:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1637:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1637:63:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1709:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1735:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1746:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1731:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1731:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1725:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:25:8"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "1713:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1779:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1788:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1791:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1781:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1781:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1781:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "1765:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1775:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1762:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:16:8"
															},
															"nodeType": "YulIf",
															"src": "1759:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1804:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1818:9:8"
																	},
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "1829:8:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1814:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1814:24:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1808:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1895:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1898:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1888:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1888:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1888:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1865:2:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1869:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1861:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1861:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1876:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1857:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1857:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1850:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1850:35:8"
															},
															"nodeType": "YulIf",
															"src": "1847:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1911:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1927:2:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1921:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1921:9:8"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1915:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1953:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1955:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1955:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1955:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1945:2:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1949:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1942:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:10:8"
															},
															"nodeType": "YulIf",
															"src": "1939:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1984:20:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1998:1:8",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2001:2:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1994:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1994:10:8"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "1988:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2013:39:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "2044:2:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2048:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2040:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2040:11:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2024:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2024:28:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2017:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2061:16:8",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "2074:3:8"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "2065:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2093:3:8"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2098:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2086:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2086:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2086:15:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2110:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2121:3:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2126:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2117:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2117:12:8"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2110:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2138:34:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2160:2:8"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "2164:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2156:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:11:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2169:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2152:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2152:20:8"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "2142:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2204:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2216:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2206:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2206:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2206:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2187:6:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2195:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2184:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2184:19:8"
															},
															"nodeType": "YulIf",
															"src": "2181:39:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2229:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2244:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2248:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:11:8"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "2233:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2316:263:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2330:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2349:3:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2343:5:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2343:10:8"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "2334:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2432:74:8",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "2450:11:8",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2460:1:8",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_6",
																							"nodeType": "YulTypedName",
																							"src": "2454:2:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_6",
																								"nodeType": "YulIdentifier",
																								"src": "2485:2:8"
																							},
																							{
																								"name": "_6",
																								"nodeType": "YulIdentifier",
																								"src": "2489:2:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "2478:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2478:14:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2478:14:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "2379:5:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2390:5:8"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "2405:3:8",
																													"type": "",
																													"value": "160"
																												},
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "2410:1:8",
																													"type": "",
																													"value": "1"
																												}
																											],
																											"functionName": {
																												"name": "shl",
																												"nodeType": "YulIdentifier",
																												"src": "2401:3:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "2401:11:8"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:8",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "2397:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2397:19:8"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "2386:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2386:31:8"
																						}
																					],
																					"functionName": {
																						"name": "eq",
																						"nodeType": "YulIdentifier",
																						"src": "2376:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2376:42:8"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "2369:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2369:50:8"
																		},
																		"nodeType": "YulIf",
																		"src": "2366:140:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2526:3:8"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "2531:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2519:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2519:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2519:18:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2550:19:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2561:3:8"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2566:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2557:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2557:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2550:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2271:3:8"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2276:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2268:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2268:15:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2284:23:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2286:19:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2297:3:8"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2302:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2293:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2293:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2286:3:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2264:3:8",
																"statements": []
															},
															"src": "2260:319:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2588:15:8",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "2598:5:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2588:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1191:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1202:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1214:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1222:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1230:6:8",
														"type": ""
													}
												],
												"src": "1081:1528:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2669:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2679:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2693:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2696:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2689:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2689:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2679:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2710:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2740:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2746:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2736:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2736:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2714:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2787:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2789:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2803:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2811:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2799:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2799:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2789:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2767:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2760:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2760:26:8"
															},
															"nodeType": "YulIf",
															"src": "2757:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2877:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2898:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2905:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2910:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2901:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2901:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2891:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2891:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2891:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2945:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2935:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2935:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2935:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2970:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2973:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2963:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2963:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2963:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2833:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2856:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2864:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2853:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2853:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2830:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2830:38:8"
															},
															"nodeType": "YulIf",
															"src": "2827:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2649:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2658:6:8",
														"type": ""
													}
												],
												"src": "2614:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3055:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3072:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3075:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3065:14:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3065:14:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3088:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3106:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3109:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3096:9:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3096:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3088:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3038:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3046:4:8",
														"type": ""
													}
												],
												"src": "2999:121:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3206:464:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3239:425:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3253:11:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3263:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "3257:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3284:2:8"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "3288:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3277:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3277:17:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3277:17:8"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3307:31:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3329:2:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3333:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "3319:9:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3319:19:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "3311:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3351:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "3374:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3384:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "3391:10:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3403:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3387:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3387:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "3380:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3380:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3370:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3370:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "3355:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3445:23:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3447:19:8",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "3462:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3447:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3427:10:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3439:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3424:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3424:20:8"
																		},
																		"nodeType": "YulIf",
																		"src": "3421:47:8"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3481:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "3495:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3505:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3512:3:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3517:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3508:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3508:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "3501:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3501:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3491:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3491:31:8"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "3485:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3535:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "3548:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "3539:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3633:21:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "3642:5:8"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3649:2:8"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "3635:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3635:17:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3635:17:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3583:5:8"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3590:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3580:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3580:13:8"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "3594:26:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3596:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "3609:5:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3616:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3605:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3605:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "3596:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "3576:3:8",
																			"statements": []
																		},
																		"src": "3572:82:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3222:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3219:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:11:8"
															},
															"nodeType": "YulIf",
															"src": "3216:448:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3178:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3185:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "3190:10:8",
														"type": ""
													}
												],
												"src": "3125:545:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3760:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3770:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "3785:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3803:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "3806:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "3799:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3799:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3816:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "3812:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3812:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "3795:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3795:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3791:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3791:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3781:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3781:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3827:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3830:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3823:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3778:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3778:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3770:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3737:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3743:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3751:4:8",
														"type": ""
													}
												],
												"src": "3675:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3942:1256:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3952:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3972:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3966:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3966:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3956:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4019:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4021:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4021:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4021:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3991:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4007:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4011:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4003:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3988:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3988:30:8"
															},
															"nodeType": "YulIf",
															"src": "3985:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4094:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "4132:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "4126:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4126:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "4100:25:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4100:38:8"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4140:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4050:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4050:97:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4050:97:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4156:18:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4173:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4160:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4183:23:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4202:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "4187:11:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4215:24:8",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "4228:11:8"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4215:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4285:656:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4299:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4318:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4330:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4326:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4326:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4314:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4314:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4303:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4347:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4391:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4361:29:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4361:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4351:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4409:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4418:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4413:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4496:172:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4521:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4539:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4544:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4535:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4535:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4529:5:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4529:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4514:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4514:42:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4514:42:8"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4573:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4587:6:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4595:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4583:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4583:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4573:6:8"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4614:40:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4631:9:8"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "4642:11:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4627:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4627:27:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4614:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4443:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4446:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4440:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4440:14:8"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4455:28:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4457:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4466:1:8"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "4469:11:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4462:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4462:19:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4457:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4436:3:8",
																					"statements": []
																				},
																				"src": "4432:236:8"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4716:166:8",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4734:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4761:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4766:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4757:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4757:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4751:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4751:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4738:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4801:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4813:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "4840:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "4843:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "4836:3:8"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "4836:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4852:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "4832:3:8"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4832:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4862:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "4858:3:8"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4858:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "4828:3:8"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "4828:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "4824:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4824:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4794:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4794:74:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4794:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4687:7:8"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4696:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4684:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4684:19:8"
																				},
																				"nodeType": "YulIf",
																				"src": "4681:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4902:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4916:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4919:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4912:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4912:14:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4928:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4908:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4908:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4895:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4895:36:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4895:36:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4278:663:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4283:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4958:234:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4972:14:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4985:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "4976:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5021:67:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5039:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5058:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5063:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5054:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5054:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5048:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5048:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5039:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5002:6:8"
																				},
																				"nodeType": "YulIf",
																				"src": "4999:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5108:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5167:5:8"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5174:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5114:52:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5114:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5101:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5101:81:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5101:81:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4950:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4258:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4266:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4255:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4255:14:8"
															},
															"nodeType": "YulSwitch",
															"src": "4248:944:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3927:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3933:3:8",
														"type": ""
													}
												],
												"src": "3846:1352:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5235:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5252:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5259:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5264:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5255:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5255:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5245:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5245:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5245:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5292:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5295:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5285:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5285:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5285:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5316:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5319:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5309:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5309:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5203:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5382:185:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5421:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5442:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5449:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5454:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5445:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5445:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5435:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5435:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5435:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5486:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5489:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5479:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5479:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5479:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5514:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5517:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5507:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5507:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5507:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5398:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5409:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5405:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5405:6:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5395:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5395:17:8"
															},
															"nodeType": "YulIf",
															"src": "5392:140:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5541:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5552:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5559:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5548:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5548:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5541:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5364:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5374:3:8",
														"type": ""
													}
												],
												"src": "5335:232:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5729:218:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5739:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5751:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5762:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5747:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5747:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5739:4:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5774:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5792:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5797:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5788:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5788:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5801:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5784:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5784:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5778:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5819:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5834:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5842:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5830:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5830:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5812:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5812:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5812:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5866:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5877:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5862:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5862:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5882:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5855:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5855:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5855:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5909:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5920:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5905:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5905:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "5929:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5937:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5925:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5925:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5898:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5898:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5898:43:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5682:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5693:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5701:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5709:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5720:4:8",
														"type": ""
													}
												],
												"src": "5572:375:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let _2 := 0x20\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _2) }\n        {\n            mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n        }\n        mstore(add(add(array_1, _1), _2), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let _2 := 32\n        let offset_1 := mload(add(headStart, _2))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_2)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _1) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _2))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _2)\n        let srcEnd := add(add(_3, _5), _2)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := mload(src)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n            {\n                let _6 := 0\n                revert(_6, _6)\n            }\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        value2 := dst_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001e6d38038062001e6d83398101604081905262000034916200035e565b600262000042848262000504565b50600362000051838262000504565b5080516200006790600490602084019062000207565b5060005b8151811015620000d757600160056000848481518110620000905762000090620005d0565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000ce81620005e6565b9150506200006b565b506040516329965a1d60e01b815230600482018190527fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce217705460248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d90606401600060405180830381600087803b1580156200015257600080fd5b505af115801562000167573d6000803e3d6000fd5b50506040516329965a1d60e01b815230600482018190527faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a60248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d9150606401600060405180830381600087803b158015620001e557600080fd5b505af1158015620001fa573d6000803e3d6000fd5b505050505050506200060e565b8280548282559060005260206000209081019282156200025f579160200282015b828111156200025f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000228565b506200026d92915062000271565b5090565b5b808211156200026d576000815560010162000272565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620002c957620002c962000288565b604052919050565b600082601f830112620002e357600080fd5b81516001600160401b03811115620002ff57620002ff62000288565b602062000315601f8301601f191682016200029e565b82815285828487010111156200032a57600080fd5b60005b838110156200034a5785810183015182820184015282016200032d565b506000928101909101919091529392505050565b6000806000606084860312156200037457600080fd5b83516001600160401b03808211156200038c57600080fd5b6200039a87838801620002d1565b9450602091508186015181811115620003b257600080fd5b620003c088828901620002d1565b945050604086015181811115620003d657600080fd5b8601601f81018813620003e857600080fd5b805182811115620003fd57620003fd62000288565b8060051b9250620004108484016200029e565b818152928201840192848101908a8511156200042b57600080fd5b928501925b848410156200046557835192506001600160a01b0383168314620004545760008081fd5b828252928501929085019062000430565b8096505050505050509250925092565b600181811c908216806200048a57607f821691505b602082108103620004ab57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004ff57600081815260208120601f850160051c81016020861015620004da5750805b601f850160051c820191505b81811015620004fb57828155600101620004e6565b5050505b505050565b81516001600160401b0381111562000520576200052062000288565b620005388162000531845462000475565b84620004b1565b602080601f831160018114620005705760008415620005575750858301515b600019600386901b1c1916600185901b178555620004fb565b600085815260208120601f198616915b82811015620005a15788860151825594840194600190910190840162000580565b5085821015620005c05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6000600182016200060757634e487b7160e01b600052601160045260246000fd5b5060010190565b61184f806200061e6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063959b8c3f116100b2578063d95b637111610081578063fad8b32a11610066578063fad8b32a14610297578063fc673c4f146102aa578063fe9d9303146102bd57600080fd5b8063d95b63711461024b578063dd62ed3e1461025e57600080fd5b8063959b8c3f1461020a57806395d89b411461021d5780639bd9bbc614610225578063a9059cbb1461023857600080fd5b806323b872dd11610109578063556f0dc7116100ee578063556f0dc7146101c557806362ad1b83146101cc57806370a08231146101e157600080fd5b806323b872dd146101a3578063313ce567146101b657600080fd5b806306e485381461013b57806306fdde0314610159578063095ea7b31461016e57806318160ddd14610191575b600080fd5b6101436102d0565b6040516101509190611321565b60405180910390f35b610161610332565b60405161015091906113b4565b61018161017c3660046113df565b6103bb565b6040519015158152602001610150565b6001545b604051908152602001610150565b6101816101b136600461140b565b6103d5565b60405160128152602001610150565b6001610195565b6101df6101da3660046114ef565b6105d6565b005b6101956101ef366004611582565b6001600160a01b031660009081526020819052604090205490565b6101df610218366004611582565b610657565b610161610774565b6101df61023336600461159f565b610783565b6101816102463660046113df565b6107a6565b6101816102593660046115f8565b610895565b61019561026c3660046115f8565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101df6102a5366004611582565b610937565b6101df6102b8366004611631565b610a52565b6101df6102cb3660046116b1565b610acf565b6060600480548060200260200160405190810160405280929190818152602001828054801561032857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161030a575b5050505050905090565b606060028054610341906116f8565b80601f016020809104026020016040519081016040528092919081815260200182805461036d906116f8565b80156103285780601f1061038f57610100808354040283529160200191610328565b820191906000526020600020905b81548152906001019060200180831161039d57509395945050505050565b6000336103c9818585610aee565b60019150505b92915050565b60006001600160a01b03831661043e5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0384166104a35760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b6064820152608401610435565b60003390506104d4818686866040518060200160405280600081525060405180602001604052806000815250610c15565b610500818686866040518060200160405280600081525060405180602001604052806000815250610d3d565b6001600160a01b03808616600090815260086020908152604080832093851683529290522054838110156105885760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b6064820152608401610435565b61059c86836105978785611748565b610aee565b6105ca8287878760405180602001604052806000815250604051806020016040528060008152506000610eac565b50600195945050505050565b6105e03386610895565b6106415760405162461bcd60e51b815260206004820152602c60248201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60448201526b39103337b9103437b63232b960a11b6064820152608401610435565b61065085858585856001611081565b5050505050565b6001600160a01b03811633036106bb5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b6064820152608401610435565b6001600160a01b03811660009081526005602052604090205460ff161561070c573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561073b565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b606060038054610341906116f8565b6107a133848484604051806020016040528060008152506001611081565b505050565b60006001600160a01b03831661080a5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610435565b600033905061083b818286866040518060200160405280600081525060405180602001604052806000815250610c15565b610867818286866040518060200160405280600081525060405180602001604052806000815250610d3d565b6103c98182868660405180602001604052806000815250604051806020016040528060008152506000610eac565b6000816001600160a01b0316836001600160a01b0316148061090057506001600160a01b03831660009081526005602052604090205460ff16801561090057506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061093057506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b336001600160a01b038216036109995760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b6064820152608401610435565b6001600160a01b03811660009081526005602052604090205460ff16156109ed573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610a19565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b610a5c3385610895565b610abd5760405162461bcd60e51b815260206004820152602c60248201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60448201526b39103337b9103437b63232b960a11b6064820152608401610435565b610ac984848484611164565b50505050565b610aea33838360405180602001604052806000815250611164565b5050565b6001600160a01b038316610b525760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610435565b6001600160a01b038216610bb45760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610435565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610c96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cba919061175b565b90506001600160a01b03811615610d3457604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610d01908a908a908a908a908a908a90600401611778565b600060405180830381600087803b158015610d1b57600080fd5b505af1158015610d2f573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610db65760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b6064820152608401610435565b610dc08482611748565b6001600160a01b038088166000908152602081905260408082209390935590871681529081208054869290610df69084906117d1565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610e4e939291906117e4565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610e9b91815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f51919061175b565b90506001600160a01b03811615610fcd576040516223de2960e01b81526001600160a01b038216906223de2990610f96908b908b908b908b908b908b90600401611778565b600060405180830381600087803b158015610fb057600080fd5b505af1158015610fc4573d6000803e3d6000fd5b50505050611077565b8115611077576001600160a01b0386163b156110775760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201527f6b656e73526563697069656e7400000000000000000000000000000000000000608482015260a401610435565b5050505050505050565b6001600160a01b0386166110e25760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b6064820152608401610435565b6001600160a01b0385166111385760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f20616464726573736044820152606401610435565b33611147818888888888610c15565b611155818888888888610d3d565b610d3481888888888888610eac565b6001600160a01b0384166111c55760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b6064820152608401610435565b336111d581866000878787610c15565b6001600160a01b0385166000908152602081905260409020548481101561124a5760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b6064820152608401610435565b6112548582611748565b6001600160a01b03871660009081526020819052604081209190915560018054879290611282908490611748565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a40988787876040516112d0939291906117e4565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b6020808252825182820181905260009190848201906040850190845b818110156113625783516001600160a01b03168352928401929184019160010161133d565b50909695505050505050565b6000815180845260005b8181101561139457602081850181015186830182015201611378565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610930602083018461136e565b6001600160a01b03811681146113dc57600080fd5b50565b600080604083850312156113f257600080fd5b82356113fd816113c7565b946020939093013593505050565b60008060006060848603121561142057600080fd5b833561142b816113c7565b9250602084013561143b816113c7565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261147357600080fd5b813567ffffffffffffffff8082111561148e5761148e61144c565b604051601f8301601f19908116603f011681019082821181831017156114b6576114b661144c565b816040528381528660208588010111156114cf57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561150757600080fd5b8535611512816113c7565b94506020860135611522816113c7565b935060408601359250606086013567ffffffffffffffff8082111561154657600080fd5b61155289838a01611462565b9350608088013591508082111561156857600080fd5b5061157588828901611462565b9150509295509295909350565b60006020828403121561159457600080fd5b8135610930816113c7565b6000806000606084860312156115b457600080fd5b83356115bf816113c7565b925060208401359150604084013567ffffffffffffffff8111156115e257600080fd5b6115ee86828701611462565b9150509250925092565b6000806040838503121561160b57600080fd5b8235611616816113c7565b91506020830135611626816113c7565b809150509250929050565b6000806000806080858703121561164757600080fd5b8435611652816113c7565b935060208501359250604085013567ffffffffffffffff8082111561167657600080fd5b61168288838901611462565b9350606087013591508082111561169857600080fd5b506116a587828801611462565b91505092959194509250565b600080604083850312156116c457600080fd5b82359150602083013567ffffffffffffffff8111156116e257600080fd5b6116ee85828601611462565b9150509250929050565b600181811c9082168061170c57607f821691505b60208210810361172c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103cf576103cf611732565b60006020828403121561176d57600080fd5b8151610930816113c7565b60006001600160a01b038089168352808816602084015280871660408401525084606083015260c060808301526117b260c083018561136e565b82810360a08401526117c4818561136e565b9998505050505050505050565b808201808211156103cf576103cf611732565b8381526060602082015260006117fd606083018561136e565b828103604084015261180f818561136e565b969550505050505056fea2646970667358221220e480e27bfdbd46f6cfe688fb078e98a0278137b8c54e3dbdbe37e69a2bacf43764736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E6D CODESIZE SUB DUP1 PUSH3 0x1E6D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x35E JUMP JUMPDEST PUSH1 0x2 PUSH3 0x42 DUP5 DUP3 PUSH3 0x504 JUMP JUMPDEST POP PUSH1 0x3 PUSH3 0x51 DUP4 DUP3 PUSH3 0x504 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x67 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x207 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0xD7 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x90 JUMPI PUSH3 0x90 PUSH3 0x5D0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH3 0xCE DUP2 PUSH3 0x5E6 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x6B JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x29965A1D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0xAC7FBAB5F54A3CA8194167523C6753BFEB96A445279294B6125B68CCE2177054 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0x29965A1D SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x167 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x29965A1D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0xAEA199E31A596269B42CDAFD93407F14436DB6E4CAD65417994C2EB37381E05A PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP3 POP PUSH4 0x29965A1D SWAP2 POP PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x1FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP PUSH3 0x60E JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x25F JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x25F JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x228 JUMP JUMPDEST POP PUSH3 0x26D SWAP3 SWAP2 POP PUSH3 0x271 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x26D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x272 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x2C9 JUMPI PUSH3 0x2C9 PUSH3 0x288 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2FF JUMPI PUSH3 0x2FF PUSH3 0x288 JUMP JUMPDEST PUSH1 0x20 PUSH3 0x315 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH3 0x29E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP6 DUP3 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x34A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP3 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x32D JUMP JUMPDEST POP PUSH1 0x0 SWAP3 DUP2 ADD SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x39A DUP8 DUP4 DUP9 ADD PUSH3 0x2D1 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 SWAP2 POP DUP2 DUP7 ADD MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3C0 DUP9 DUP3 DUP10 ADD PUSH3 0x2D1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH3 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD DUP3 DUP2 GT ISZERO PUSH3 0x3FD JUMPI PUSH3 0x3FD PUSH3 0x288 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP3 POP PUSH3 0x410 DUP5 DUP5 ADD PUSH3 0x29E JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP3 DUP3 ADD DUP5 ADD SWAP3 DUP5 DUP2 ADD SWAP1 DUP11 DUP6 GT ISZERO PUSH3 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP5 DUP5 LT ISZERO PUSH3 0x465 JUMPI DUP4 MLOAD SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 EQ PUSH3 0x454 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP3 DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH3 0x430 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x48A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4AB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4FF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x4DA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4FB JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4E6 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x520 JUMPI PUSH3 0x520 PUSH3 0x288 JUMP JUMPDEST PUSH3 0x538 DUP2 PUSH3 0x531 DUP5 SLOAD PUSH3 0x475 JUMP JUMPDEST DUP5 PUSH3 0x4B1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x570 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x557 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x4FB JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5A1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x580 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x5C0 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0x607 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x184F DUP1 PUSH3 0x61E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x136 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x959B8C3F GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0xD95B6371 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xFAD8B32A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x109 JUMPI DUP1 PUSH4 0x556F0DC7 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x195 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x14EF JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x1582 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x774 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x783 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1582 JUMP JUMPDEST PUSH2 0x937 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1631 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x16B1 JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x341 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36D SWAP1 PUSH2 0x16F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x328 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x328 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39D JUMPI POP SWAP4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3C9 DUP2 DUP6 DUP6 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x4D4 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x500 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x588 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x616C6C6F77616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH2 0x59C DUP7 DUP4 PUSH2 0x597 DUP8 DUP6 PUSH2 0x1748 JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x5CA DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xEAC JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5E0 CALLER DUP7 PUSH2 0x895 JUMP JUMPDEST PUSH2 0x641 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH2 0x650 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1081 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER SUB PUSH2 0x6BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x70C JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x73B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x341 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0x7A1 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0x1081 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x80A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x83B DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x867 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x3C9 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x900 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x900 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x930 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9ED JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xA19 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xA5C CALLER DUP6 PUSH2 0x895 JUMP JUMPDEST PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH2 0xAC9 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1164 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAEA CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1164 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCBA SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD34 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AD5CBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x75AB9782 SWAP1 PUSH2 0xD01 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH2 0xDC0 DUP5 DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP8 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xDF6 SWAP1 DUP5 SWAP1 PUSH2 0x17D1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE4E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0xE9B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF51 SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x23DE29 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH3 0x23DE29 SWAP1 PUSH2 0xF96 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1077 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1077 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EXTCODESIZE ISZERO PUSH2 0x1077 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6B656E73526563697069656E7400000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x435 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x435 JUMP JUMPDEST CALLER PUSH2 0x1147 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x1155 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0xD34 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x11C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST CALLER PUSH2 0x11D5 DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x124A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH2 0x1254 DUP6 DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1282 SWAP1 DUP5 SWAP1 PUSH2 0x1748 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x12D0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1362 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x133D JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1394 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1378 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x930 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x136E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x13FD DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x142B DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x143B DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x148E JUMPI PUSH2 0x148E PUSH2 0x144C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x14B6 JUMPI PUSH2 0x14B6 PUSH2 0x144C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x14CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1512 DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1522 DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1552 DUP10 DUP4 DUP11 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1575 DUP9 DUP3 DUP10 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x930 DUP2 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x15BF DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15EE DUP7 DUP3 DUP8 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x160B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1616 DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1626 DUP2 PUSH2 0x13C7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1652 DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1682 DUP9 DUP4 DUP10 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A5 DUP8 DUP3 DUP9 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16EE DUP6 DUP3 DUP7 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x170C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x172C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3CF JUMPI PUSH2 0x3CF PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x176D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x930 DUP2 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP4 MSTORE DUP1 DUP9 AND PUSH1 0x20 DUP5 ADD MSTORE DUP1 DUP8 AND PUSH1 0x40 DUP5 ADD MSTORE POP DUP5 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xC0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x17B2 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x136E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x17C4 DUP2 DUP6 PUSH2 0x136E JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3CF JUMPI PUSH2 0x3CF PUSH2 0x1732 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x17FD PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x136E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x180F DUP2 DUP6 PUSH2 0x136E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 DUP1 0xE2 PUSH28 0xFDBD46F6CFE688FB078E98A0278137B8C54E3DBDBE37E69A2BACF437 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1014:17147:1:-:0;;;2244:612;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2376:5;:13;2384:5;2376;:13;:::i;:::-;-1:-1:-1;2399:7:1;:17;2409:7;2399;:17;:::i;:::-;-1:-1:-1;2427:42:1;;;;:22;;:42;;;;;:::i;:::-;;2484:9;2479:126;2503:17;:24;2499:1;:28;2479:126;;;2590:4;2548:17;:39;2566:17;2584:1;2566:20;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2548:39:1;;;;;;;;;;;-1:-1:-1;2548:39:1;:46;;-1:-1:-1;;2548:46:1;;;;;;;;;;2529:3;;;;:::i;:::-;;;;2479:126;;;-1:-1:-1;2646:97:1;;-1:-1:-1;;;2646:97:1;;2696:4;2646:97;;;5812:34:8;;;2703:24:1;5862:18:8;;;5855:34;5905:18;;;5898:43;1168:42:1;;2646:41;;5747:18:8;;2646:97:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2753:96:1;;-1:-1:-1;;;2753:96:1;;2803:4;2753:96;;;5812:34:8;;;2810:23:1;5862:18:8;;;5855:34;5905:18;;;5898:43;1168:42:1;;-1:-1:-1;2753:41:1;;-1:-1:-1;5747:18:8;;2753:96:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2244:612;;;1014:17147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1014:17147:1;-1:-1:-1;;;;;1014:17147:1;;;;;;;;;;;-1:-1:-1;1014:17147:1;;;;;;;-1:-1:-1;1014:17147:1;;;-1:-1:-1;1014:17147:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:8;247:40;;-1:-1:-1;;;;;302:34:8;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:8:o;426:650::-;480:5;533:3;526:4;518:6;514:17;510:27;500:55;;551:1;548;541:12;500:55;574:13;;-1:-1:-1;;;;;599:26:8;;596:52;;;628:18;;:::i;:::-;667:4;695:53;738:2;719:13;;-1:-1:-1;;715:27:8;711:36;;695:53;:::i;:::-;773:2;764:7;757:19;817:3;812:2;807;799:6;795:15;791:24;788:33;785:53;;;834:1;831;824:12;785:53;856:1;866:134;880:2;877:1;874:9;866:134;;;969:14;;;965:23;;959:30;937:15;;;933:24;;926:64;891:10;;866:134;;;-1:-1:-1;1043:1:8;1020:16;;;1016:25;;;1009:36;;;;1024:7;426:650;-1:-1:-1;;;426:650:8:o;1081:1528::-;1214:6;1222;1230;1283:2;1271:9;1262:7;1258:23;1254:32;1251:52;;;1299:1;1296;1289:12;1251:52;1326:16;;-1:-1:-1;;;;;1391:14:8;;;1388:34;;;1418:1;1415;1408:12;1388:34;1441:61;1494:7;1485:6;1474:9;1470:22;1441:61;:::i;:::-;1431:71;;1521:2;1511:12;;1569:2;1558:9;1554:18;1548:25;1598:2;1588:8;1585:16;1582:36;;;1614:1;1611;1604:12;1582:36;1637:63;1692:7;1681:8;1670:9;1666:24;1637:63;:::i;:::-;1627:73;;;1746:2;1735:9;1731:18;1725:25;1775:2;1765:8;1762:16;1759:36;;;1791:1;1788;1781:12;1759:36;1814:24;;1869:4;1861:13;;1857:27;-1:-1:-1;1847:55:8;;1898:1;1895;1888:12;1847:55;1927:2;1921:9;1949:2;1945;1942:10;1939:36;;;1955:18;;:::i;:::-;2001:2;1998:1;1994:10;1984:20;;2024:28;2048:2;2044;2040:11;2024:28;:::i;:::-;2086:15;;;2156:11;;;2152:20;;;2117:12;;;;2184:19;;;2181:39;;;2216:1;2213;2206:12;2181:39;2240:11;;;;2260:319;2276:6;2271:3;2268:15;2260:319;;;2343:10;;;-1:-1:-1;;;;;;2386:31:8;;2376:42;;2366:140;;2460:1;2489:2;2485;2478:14;2366:140;2519:18;;;2293:12;;;;2557;;;;2260:319;;;2598:5;2588:15;;;;;;;;1081:1528;;;;;:::o;2614:380::-;2693:1;2689:12;;;;2736;;;2757:61;;2811:4;2803:6;2799:17;2789:27;;2757:61;2864:2;2856:6;2853:14;2833:18;2830:38;2827:161;;2910:10;2905:3;2901:20;2898:1;2891:31;2945:4;2942:1;2935:15;2973:4;2970:1;2963:15;2827:161;;2614:380;;;:::o;3125:545::-;3227:2;3222:3;3219:11;3216:448;;;3263:1;3288:5;3284:2;3277:17;3333:4;3329:2;3319:19;3403:2;3391:10;3387:19;3384:1;3380:27;3374:4;3370:38;3439:4;3427:10;3424:20;3421:47;;;-1:-1:-1;3462:4:8;3421:47;3517:2;3512:3;3508:12;3505:1;3501:20;3495:4;3491:31;3481:41;;3572:82;3590:2;3583:5;3580:13;3572:82;;;3635:17;;;3616:1;3605:13;3572:82;;;3576:3;;;3216:448;3125:545;;;:::o;3846:1352::-;3966:10;;-1:-1:-1;;;;;3988:30:8;;3985:56;;;4021:18;;:::i;:::-;4050:97;4140:6;4100:38;4132:4;4126:11;4100:38;:::i;:::-;4094:4;4050:97;:::i;:::-;4202:4;;4266:2;4255:14;;4283:1;4278:663;;;;4985:1;5002:6;4999:89;;;-1:-1:-1;5054:19:8;;;5048:26;4999:89;-1:-1:-1;;3803:1:8;3799:11;;;3795:24;3791:29;3781:40;3827:1;3823:11;;;3778:57;5101:81;;4248:944;;4278:663;3072:1;3065:14;;;3109:4;3096:18;;-1:-1:-1;;4314:20:8;;;4432:236;4446:7;4443:1;4440:14;4432:236;;;4535:19;;;4529:26;4514:42;;4627:27;;;;4595:1;4583:14;;;;4462:19;;4432:236;;;4436:3;4696:6;4687:7;4684:19;4681:201;;;4757:19;;;4751:26;-1:-1:-1;;4840:1:8;4836:14;;;4852:3;4832:24;4828:37;4824:42;4809:58;4794:74;;4681:201;-1:-1:-1;;;;;4928:1:8;4912:14;;;4908:22;4895:36;;-1:-1:-1;3846:1352:8:o;5203:127::-;5264:10;5259:3;5255:20;5252:1;5245:31;5295:4;5292:1;5285:15;5319:4;5316:1;5309:15;5335:232;5374:3;5395:17;;;5392:140;;5454:10;5449:3;5445:20;5442:1;5435:31;5489:4;5486:1;5479:15;5517:4;5514:1;5507:15;5392:140;-1:-1:-1;5559:1:8;5548:13;;5335:232::o;5572:375::-;1014:17147:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1095": {
									"entryPoint": 2798,
									"id": 1095,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1211": {
									"entryPoint": null,
									"id": 1211,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_985": {
									"entryPoint": 4452,
									"id": 985,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_callTokensReceived_1198": {
									"entryPoint": 3756,
									"id": 1198,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_callTokensToSend_1140": {
									"entryPoint": 3093,
									"id": 1140,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_move_1050": {
									"entryPoint": 3389,
									"id": 1050,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1718": {
									"entryPoint": null,
									"id": 1718,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_send_893": {
									"entryPoint": 4225,
									"id": 893,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@allowance_605": {
									"entryPoint": null,
									"id": 605,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_630": {
									"entryPoint": 955,
									"id": 630,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@authorizeOperator_467": {
									"entryPoint": 1623,
									"id": 467,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOf_291": {
									"entryPoint": null,
									"id": 291,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_388": {
									"entryPoint": 2767,
									"id": 388,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_253": {
									"entryPoint": null,
									"id": 253,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@defaultOperators_523": {
									"entryPoint": 720,
									"id": 523,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@granularity_263": {
									"entryPoint": null,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_1431": {
									"entryPoint": null,
									"id": 1431,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isOperatorFor_422": {
									"entryPoint": 2197,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_234": {
									"entryPoint": 818,
									"id": 234,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@operatorBurn_587": {
									"entryPoint": 2642,
									"id": 587,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@operatorSend_557": {
									"entryPoint": 1494,
									"id": 557,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@revokeOperator_512": {
									"entryPoint": 2359,
									"id": 512,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@send_313": {
									"entryPoint": 1923,
									"id": 313,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@symbol_244": {
									"entryPoint": 1908,
									"id": 244,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_275": {
									"entryPoint": null,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_722": {
									"entryPoint": 981,
									"id": 722,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_370": {
									"entryPoint": 1958,
									"id": 370,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 5218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 5979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 4974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6008,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6116,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5938,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5196,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 5063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15182:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "165:530:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "175:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "185:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "179:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "214:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "225:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "210:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:18:8"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "200:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "244:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "255:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "237:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "237:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "267:17:8",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "278:6:8"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "271:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "293:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "313:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "307:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "297:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "336:6:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "344:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "329:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "329:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "329:22:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "360:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "371:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "382:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "367:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "367:18:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "360:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "394:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "412:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "420:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:15:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "398:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "432:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "441:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "436:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "500:169:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "536:6:8"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "530:5:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "530:13:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "545:42:8",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "526:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "526:62:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "514:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "514:75:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "514:75:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "602:19:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "613:3:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "618:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "609:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "609:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "602:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "634:25:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "648:6:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "656:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "644:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "644:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "634:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "462:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "465:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "459:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "459:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "473:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "475:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "484:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "487:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "480:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "480:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "475:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "455:3:8",
																"statements": []
															},
															"src": "451:218:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "678:11:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "686:3:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "678:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "134:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "145:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "156:4:8",
														"type": ""
													}
												],
												"src": "14:681:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "750:373:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "780:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "774:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:12:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "764:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "802:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "807:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "795:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "795:19:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "823:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "832:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "827:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "894:110:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "908:14:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "918:4:8",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "912:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "950:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "955:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "946:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "946:11:8"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "959:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "942:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "942:20:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "985:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:13:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "989:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "970:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "970:22:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "964:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "964:29:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "935:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "935:59:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "935:59:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "853:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "856:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "850:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "850:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "864:21:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "866:17:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "875:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "871:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "866:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "846:3:8",
																"statements": []
															},
															"src": "842:162:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1028:3:8"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1033:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1024:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1024:16:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1042:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1020:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1020:27:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1049:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1013:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1013:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1013:38:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1060:57:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1075:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1088:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1096:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1084:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1084:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1105:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1101:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1101:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1080:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1080:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1071:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1071:39:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1112:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1067:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1067:50:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1060:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "727:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "734:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "742:3:8",
														"type": ""
													}
												],
												"src": "700:423:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1249:99:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1266:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1277:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1259:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1259:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1289:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1315:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1327:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1338:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1323:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1323:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1297:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1297:45:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1289:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1218:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1229:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1240:4:8",
														"type": ""
													}
												],
												"src": "1128:220:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:109:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1485:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1494:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1497:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1487:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1487:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1487:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1432:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1439:42:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1428:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:54:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:65:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:73:8"
															},
															"nodeType": "YulIf",
															"src": "1408:93:8"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1387:5:8",
														"type": ""
													}
												],
												"src": "1353:154:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1599:228:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1645:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1654:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1657:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1647:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1647:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1647:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1620:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1629:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1616:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1616:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1641:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1612:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:32:8"
															},
															"nodeType": "YulIf",
															"src": "1609:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1670:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1696:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1683:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1683:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1674:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1740:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1715:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1715:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1715:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1755:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1765:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1755:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1779:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1806:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1817:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1802:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1802:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1789:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1789:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1779:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1557:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1568:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1580:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1588:6:8",
														"type": ""
													}
												],
												"src": "1512:315:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1927:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1937:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1949:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1960:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1937:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1979:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2004:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1997:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1997:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1990:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1990:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1972:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1972:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1896:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1907:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1918:4:8",
														"type": ""
													}
												],
												"src": "1832:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2125:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2135:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2147:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2158:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2143:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2143:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2135:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2177:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2188:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2170:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2170:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2094:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2105:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2116:4:8",
														"type": ""
													}
												],
												"src": "2024:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2310:352:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2356:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2365:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2368:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2358:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2358:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2358:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2331:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2340:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2327:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2327:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2352:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2323:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2323:32:8"
															},
															"nodeType": "YulIf",
															"src": "2320:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2381:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2407:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2394:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2394:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2385:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2451:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2426:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2426:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2426:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2466:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2476:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2466:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2490:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2522:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2533:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2518:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2518:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2505:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2505:32:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2494:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2571:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2546:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2546:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2588:17:8",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2598:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2588:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2641:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2652:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2637:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2637:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2624:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2614:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2260:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2271:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2283:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2291:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2299:6:8",
														"type": ""
													}
												],
												"src": "2206:456:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2764:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2774:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2786:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2797:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2782:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2782:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2774:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2816:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2831:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2839:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2827:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2827:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2809:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2809:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2809:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2733:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2744:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2755:4:8",
														"type": ""
													}
												],
												"src": "2667:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2888:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2912:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2917:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2908:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2908:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2898:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2898:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2898:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2945:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2948:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2938:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2938:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2938:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2969:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2972:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2962:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2962:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2962:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2856:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3040:666:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3089:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3098:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3101:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3091:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3091:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3091:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3068:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3076:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3064:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3064:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3083:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3060:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3060:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3053:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3053:35:8"
															},
															"nodeType": "YulIf",
															"src": "3050:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3114:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3137:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3124:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3124:20:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3118:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3153:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3163:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3157:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3204:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3206:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3206:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3206:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3196:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3200:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3193:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3193:10:8"
															},
															"nodeType": "YulIf",
															"src": "3190:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3235:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3249:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3245:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3245:7:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3239:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3261:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3281:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3275:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3275:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3265:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3293:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3315:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "3339:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3343:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3335:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3335:13:8"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "3350:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3331:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3331:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3355:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3327:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3327:31:8"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3360:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3323:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3323:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3311:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3311:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3297:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3423:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3425:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3425:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3425:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3382:10:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3394:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3379:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3379:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3402:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3414:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3399:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3399:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3376:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3376:46:8"
															},
															"nodeType": "YulIf",
															"src": "3373:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3461:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3465:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3454:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3454:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3454:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3492:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3500:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3485:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3485:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3485:18:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3551:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3563:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3553:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3553:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3553:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3526:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3534:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3522:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3522:15:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3539:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3518:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3518:26:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3546:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3515:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3515:35:8"
															},
															"nodeType": "YulIf",
															"src": "3512:55:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3593:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3601:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3589:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3589:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3612:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3620:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3608:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3608:17:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3627:2:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3576:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:54:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3576:54:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3654:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3662:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3650:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3650:15:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3667:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3646:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3646:26:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3674:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3639:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3639:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3639:37:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3685:15:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3694:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3685:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3014:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3022:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3030:5:8",
														"type": ""
													}
												],
												"src": "2988:718:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3867:729:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3914:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3923:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3926:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3916:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3916:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3916:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3888:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3897:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3884:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3884:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3909:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3880:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:33:8"
															},
															"nodeType": "YulIf",
															"src": "3877:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3939:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3965:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3952:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3952:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3943:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4009:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3984:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3984:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3984:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4024:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4034:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4024:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4048:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4080:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4091:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4076:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4063:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4063:32:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4052:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4129:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4104:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4104:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4104:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4146:17:8",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "4156:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4146:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4172:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4199:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4210:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4195:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4195:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4182:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4172:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4223:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4254:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4265:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4250:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4237:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4237:32:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4227:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4278:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4288:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4282:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4333:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4342:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4345:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4335:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4335:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4335:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4321:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4329:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4318:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4318:14:8"
															},
															"nodeType": "YulIf",
															"src": "4315:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4358:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4389:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4400:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4385:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4385:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4409:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4368:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4368:49:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4426:49:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4442:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4442:33:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4430:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4504:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4513:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4516:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4506:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4506:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4506:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4490:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4500:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4487:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:8"
															},
															"nodeType": "YulIf",
															"src": "4484:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4529:61:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4560:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4571:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4556:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4556:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4582:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4539:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4539:51:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3801:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3812:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3824:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3832:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3840:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3848:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3856:6:8",
														"type": ""
													}
												],
												"src": "3711:885:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4671:177:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4717:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4726:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4729:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4719:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4719:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4719:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4692:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4701:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4688:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4688:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4713:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4684:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4684:32:8"
															},
															"nodeType": "YulIf",
															"src": "4681:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4742:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4768:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4755:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4755:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4746:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4812:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4787:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4787:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4787:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4827:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4837:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4827:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4637:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4648:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4660:6:8",
														"type": ""
													}
												],
												"src": "4601:247:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4966:410:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5012:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5021:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5024:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5014:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5014:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5014:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4987:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4996:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4983:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4983:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5008:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4979:32:8"
															},
															"nodeType": "YulIf",
															"src": "4976:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5037:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5063:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5050:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5050:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5041:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5107:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5082:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5082:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5082:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5122:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5132:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5122:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5146:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5173:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5184:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5169:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5169:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5156:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5156:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5146:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5197:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5228:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5239:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5224:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5224:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5211:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5211:32:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5201:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5286:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5295:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5298:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5288:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5288:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5288:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5258:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5266:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5255:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:30:8"
															},
															"nodeType": "YulIf",
															"src": "5252:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5311:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5342:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5353:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5338:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5338:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5362:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5321:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5321:49:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5311:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4916:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4927:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4939:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4947:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4955:6:8",
														"type": ""
													}
												],
												"src": "4853:523:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5468:301:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5514:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5523:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5526:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5516:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5516:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5516:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5489:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5498:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5485:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5485:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5481:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5481:32:8"
															},
															"nodeType": "YulIf",
															"src": "5478:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5539:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5565:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5552:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5552:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5543:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5609:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5584:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5584:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5584:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5624:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5634:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5624:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5648:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5680:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5691:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5676:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5676:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5663:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5663:32:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5652:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5729:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5704:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5704:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5704:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5746:17:8",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "5756:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5746:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5426:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5437:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5449:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5457:6:8",
														"type": ""
													}
												],
												"src": "5381:388:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5913:604:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5960:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5969:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5972:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5962:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5962:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5962:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5934:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5943:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5930:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5930:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5955:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5926:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5926:33:8"
															},
															"nodeType": "YulIf",
															"src": "5923:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5985:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6011:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5998:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5998:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5989:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6055:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "6030:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6030:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6030:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6070:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6080:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6070:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6094:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6121:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6132:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6117:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6117:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6104:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6104:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6094:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6145:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6176:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6187:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6172:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6172:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6159:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6159:32:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6149:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6200:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6210:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6204:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6255:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6264:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6267:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6257:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6257:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6257:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6243:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6251:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6240:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6240:14:8"
															},
															"nodeType": "YulIf",
															"src": "6237:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6280:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6311:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6322:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6307:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6307:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6331:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6290:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6290:49:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6280:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6348:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6381:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6392:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6377:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6377:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6364:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:32:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6352:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6425:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6434:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6437:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6427:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6427:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6427:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6411:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6421:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6408:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6408:16:8"
															},
															"nodeType": "YulIf",
															"src": "6405:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6450:61:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6481:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6492:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6477:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6477:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6503:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6460:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6460:51:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6450:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5855:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5866:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5878:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5886:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5894:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5902:6:8",
														"type": ""
													}
												],
												"src": "5774:743:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6618:292:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6664:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6673:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6676:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6666:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6666:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6666:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6639:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6648:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6635:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6635:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6660:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6631:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6631:32:8"
															},
															"nodeType": "YulIf",
															"src": "6628:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6689:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6712:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6699:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6699:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6689:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6731:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6762:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6773:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6758:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6758:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6745:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6745:32:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6735:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6820:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6829:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6832:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6822:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6822:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6822:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6792:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6800:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6789:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:30:8"
															},
															"nodeType": "YulIf",
															"src": "6786:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6845:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6876:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6887:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6872:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6872:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6896:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6855:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6855:49:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6845:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6576:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6587:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6599:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6607:6:8",
														"type": ""
													}
												],
												"src": "6522:388:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6970:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6980:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6994:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6997:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6990:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6990:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6980:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7011:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7041:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7047:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7037:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7037:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7015:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7088:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7090:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7104:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7112:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7100:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7100:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7090:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7068:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7061:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7061:26:8"
															},
															"nodeType": "YulIf",
															"src": "7058:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7178:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7199:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7206:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7211:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7202:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7202:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7192:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7192:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7192:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7243:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7246:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7236:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7236:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7236:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7271:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7274:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7264:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7264:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7264:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7134:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7157:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7165:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7154:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7154:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7131:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7131:38:8"
															},
															"nodeType": "YulIf",
															"src": "7128:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6950:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6959:6:8",
														"type": ""
													}
												],
												"src": "6915:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7474:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7491:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7502:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7484:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7484:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7484:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7525:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7536:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7521:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7521:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7541:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7514:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7514:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7514:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7564:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7575:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7560:18:8"
																	},
																	{
																		"hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7580:34:8",
																		"type": "",
																		"value": "ERC777: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7553:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7553:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7553:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7635:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7646:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7631:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7631:18:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7651:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7624:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7624:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7624:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7667:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7679:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7690:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7675:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7675:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7667:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7451:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7465:4:8",
														"type": ""
													}
												],
												"src": "7300:400:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7879:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7896:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7907:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7889:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7889:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7889:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7930:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7941:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7926:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7926:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7946:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7919:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7919:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7919:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7969:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7980:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7965:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7965:18:8"
																	},
																	{
																		"hexValue": "4552433737373a207472616e736665722066726f6d20746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7985:34:8",
																		"type": "",
																		"value": "ERC777: transfer from the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7958:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7958:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7958:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8040:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8051:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8036:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8036:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8056:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8029:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8029:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8029:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8074:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8086:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8097:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8082:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8082:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8074:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7856:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7870:4:8",
														"type": ""
													}
												],
												"src": "7705:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8286:231:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8303:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8314:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8296:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8296:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8296:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8337:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8348:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8333:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8333:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8353:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8326:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8326:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8326:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8376:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8387:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8372:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8372:18:8"
																	},
																	{
																		"hexValue": "4552433737373a207472616e7366657220616d6f756e74206578636565647320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8392:34:8",
																		"type": "",
																		"value": "ERC777: transfer amount exceeds "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8365:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8365:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8365:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8447:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8458:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8443:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8443:18:8"
																	},
																	{
																		"hexValue": "616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8463:11:8",
																		"type": "",
																		"value": "allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8436:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8436:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8436:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8484:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8496:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8507:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8492:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8492:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8484:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8263:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8277:4:8",
														"type": ""
													}
												],
												"src": "8112:405:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8554:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8571:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8578:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8583:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8574:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8574:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8564:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8564:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8564:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8611:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8614:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8604:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8604:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8604:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8635:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8638:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8628:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8628:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8628:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8522:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8703:79:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8713:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8725:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8728:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8721:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8721:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8713:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8754:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8756:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8756:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8756:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "8745:4:8"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8751:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8742:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8742:11:8"
															},
															"nodeType": "YulIf",
															"src": "8739:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8685:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8688:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8694:4:8",
														"type": ""
													}
												],
												"src": "8654:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8961:234:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8978:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8989:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8971:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8971:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8971:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9012:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9023:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9008:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9008:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9028:2:8",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9001:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9001:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9001:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9051:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9062:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9047:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9047:18:8"
																	},
																	{
																		"hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9067:34:8",
																		"type": "",
																		"value": "ERC777: caller is not an operato"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9040:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9040:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9040:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9122:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9133:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9118:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9118:18:8"
																	},
																	{
																		"hexValue": "7220666f7220686f6c646572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9138:14:8",
																		"type": "",
																		"value": "r for holder"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9111:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9111:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9111:42:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9162:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9174:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9185:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9170:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9170:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9162:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8938:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8952:4:8",
														"type": ""
													}
												],
												"src": "8787:408:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9374:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9391:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9402:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9384:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9384:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9384:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9425:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9436:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9421:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9421:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9441:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9414:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9414:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9414:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9464:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9475:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9460:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9460:18:8"
																	},
																	{
																		"hexValue": "4552433737373a20617574686f72697a696e672073656c66206173206f706572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9480:34:8",
																		"type": "",
																		"value": "ERC777: authorizing self as oper"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9453:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9453:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9453:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9535:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9546:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9531:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9531:18:8"
																	},
																	{
																		"hexValue": "61746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9551:6:8",
																		"type": "",
																		"value": "ator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9524:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9524:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9524:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9567:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9579:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9590:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9575:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9575:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9567:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9351:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9365:4:8",
														"type": ""
													}
												],
												"src": "9200:400:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9779:223:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9796:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9807:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9789:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9789:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9789:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9830:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9841:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9826:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9826:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9846:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9819:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9819:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9819:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9869:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9880:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9865:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9865:18:8"
																	},
																	{
																		"hexValue": "4552433737373a207265766f6b696e672073656c66206173206f70657261746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9885:34:8",
																		"type": "",
																		"value": "ERC777: revoking self as operato"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9858:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9858:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9858:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9940:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9951:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9936:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9936:18:8"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9956:3:8",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9929:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9929:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9929:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9969:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9981:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9992:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9977:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9977:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9969:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9756:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9770:4:8",
														"type": ""
													}
												],
												"src": "9605:397:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10181:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10198:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10209:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10191:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10191:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10191:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10232:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10243:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10228:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10228:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10248:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10221:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10221:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10221:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10271:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10282:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10267:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:18:8"
																	},
																	{
																		"hexValue": "4552433737373a20617070726f76652066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10287:34:8",
																		"type": "",
																		"value": "ERC777: approve from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10260:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10260:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10260:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10342:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10353:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10338:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10338:18:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10358:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10331:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10331:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10331:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10375:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10387:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10398:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10383:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10383:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10375:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10158:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10172:4:8",
														"type": ""
													}
												],
												"src": "10007:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10587:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10604:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10615:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10597:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10597:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10597:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10638:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10649:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10634:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10634:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10654:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10627:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10627:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10627:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10677:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10688:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10673:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10673:18:8"
																	},
																	{
																		"hexValue": "4552433737373a20617070726f766520746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10693:34:8",
																		"type": "",
																		"value": "ERC777: approve to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10666:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10666:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10666:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10748:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10759:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10744:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10744:18:8"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10764:5:8",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10737:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10737:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10737:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10779:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10791:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10802:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10787:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10787:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10779:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10564:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10578:4:8",
														"type": ""
													}
												],
												"src": "10413:399:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10946:168:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10956:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10968:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10979:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10964:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10964:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10956:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10998:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11013:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11021:42:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11009:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11009:55:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10991:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10991:74:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10991:74:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11085:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11096:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11081:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11081:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11101:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11074:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11074:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11074:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10907:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10918:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10926:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10937:4:8",
														"type": ""
													}
												],
												"src": "10817:297:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11200:170:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11246:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11255:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11258:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11248:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11248:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11248:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11221:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11230:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11217:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11217:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11242:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11213:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11213:32:8"
															},
															"nodeType": "YulIf",
															"src": "11210:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11271:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11290:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11284:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11284:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11275:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11334:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "11309:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11309:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11309:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11349:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11359:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11349:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11166:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11177:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11189:6:8",
														"type": ""
													}
												],
												"src": "11119:251:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11652:478:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11662:52:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11672:42:8",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11666:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11730:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11745:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11753:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11741:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11741:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11723:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11723:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11723:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11777:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11788:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11773:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11773:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11797:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11805:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11793:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11793:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11766:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11766:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11766:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11829:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11840:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11825:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11825:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "11849:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11857:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11845:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11845:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11818:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11818:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11818:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11881:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11892:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11877:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11877:18:8"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11897:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11870:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11870:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11870:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11924:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11935:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11920:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11920:19:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11941:3:8",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11913:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11913:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11913:32:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11954:60:8",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "11986:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11998:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12009:3:8",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11994:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11994:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "11968:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11968:46:8"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11958:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12034:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12045:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12030:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12030:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "12055:6:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12063:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12051:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12051:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12023:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12023:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12023:51:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12083:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "12109:6:8"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "12117:6:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "12091:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12091:33:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12083:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11581:9:8",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "11592:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11600:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11608:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11616:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11624:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11632:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11643:4:8",
														"type": ""
													}
												],
												"src": "11375:755:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12309:229:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12326:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12337:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12319:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12319:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12319:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12360:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12371:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12356:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12356:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12376:2:8",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12349:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12349:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12349:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12399:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12410:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12395:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12395:18:8"
																	},
																	{
																		"hexValue": "4552433737373a207472616e7366657220616d6f756e74206578636565647320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12415:34:8",
																		"type": "",
																		"value": "ERC777: transfer amount exceeds "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12388:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12388:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12388:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12470:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12481:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12466:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12466:18:8"
																	},
																	{
																		"hexValue": "62616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12486:9:8",
																		"type": "",
																		"value": "balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12459:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12459:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12459:37:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12505:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12517:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12528:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12513:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12513:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12505:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12286:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12300:4:8",
														"type": ""
													}
												],
												"src": "12135:403:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12591:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12601:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12612:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12615:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12608:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12608:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12601:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12640:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12642:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12642:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12642:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12632:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "12635:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12629:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12629:10:8"
															},
															"nodeType": "YulIf",
															"src": "12626:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12574:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12577:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12583:3:8",
														"type": ""
													}
												],
												"src": "12543:125:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12866:257:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12883:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12894:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12876:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12876:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12876:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12921:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12932:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12917:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12917:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12937:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12910:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12910:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12910:30:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12949:59:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12981:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12993:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13004:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12989:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12989:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "12963:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12963:45:8"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "12953:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13028:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13039:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13024:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13024:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13048:6:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13056:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13044:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13044:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13017:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13017:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13017:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13076:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13102:6:8"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13110:6:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "13084:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13084:33:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13076:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12819:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12830:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12838:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12846:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12857:4:8",
														"type": ""
													}
												],
												"src": "12673:450:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13302:307:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13319:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13330:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13312:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13312:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13312:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13353:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13364:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13349:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13349:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13369:2:8",
																		"type": "",
																		"value": "77"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13342:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13342:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13342:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13392:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13403:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13388:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13388:18:8"
																	},
																	{
																		"hexValue": "4552433737373a20746f6b656e20726563697069656e7420636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13408:34:8",
																		"type": "",
																		"value": "ERC777: token recipient contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13381:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13381:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13381:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13463:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13474:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13459:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13459:18:8"
																	},
																	{
																		"hexValue": "20686173206e6f20696d706c656d656e74657220666f7220455243373737546f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13479:34:8",
																		"type": "",
																		"value": " has no implementer for ERC777To"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13452:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13452:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13452:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13534:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13545:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13530:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13530:19:8"
																	},
																	{
																		"hexValue": "6b656e73526563697069656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13551:15:8",
																		"type": "",
																		"value": "kensRecipient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13523:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13523:44:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13523:44:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13576:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13588:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13599:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13584:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13584:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13576:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13279:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13293:4:8",
														"type": ""
													}
												],
												"src": "13128:481:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13788:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13805:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13816:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13798:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13798:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13798:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13839:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13850:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13835:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13835:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13855:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13828:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13828:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13828:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13878:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13889:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13874:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13874:18:8"
																	},
																	{
																		"hexValue": "4552433737373a2073656e642066726f6d20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13894:34:8",
																		"type": "",
																		"value": "ERC777: send from the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13867:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13867:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13867:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13949:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13960:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13945:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13945:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13965:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13938:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13938:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13938:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13979:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13991:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14002:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13987:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13987:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13979:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13765:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13779:4:8",
														"type": ""
													}
												],
												"src": "13614:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14191:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14208:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14219:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14201:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14201:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14201:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14242:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14253:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14238:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14238:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14258:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14231:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14231:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14231:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14281:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14292:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14277:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14277:18:8"
																	},
																	{
																		"hexValue": "4552433737373a2073656e6420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14297:34:8",
																		"type": "",
																		"value": "ERC777: send to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14270:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14270:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14270:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14341:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14353:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14364:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14349:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14349:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14341:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14168:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14182:4:8",
														"type": ""
													}
												],
												"src": "14017:356:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14552:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14569:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14580:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14562:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14562:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14562:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14603:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14614:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14599:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14599:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14619:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14592:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14592:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14592:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14642:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14653:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14638:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14638:18:8"
																	},
																	{
																		"hexValue": "4552433737373a206275726e2066726f6d20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14658:34:8",
																		"type": "",
																		"value": "ERC777: burn from the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14631:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14631:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14631:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14713:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14724:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14709:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14709:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14729:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14702:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14702:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14702:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14743:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14755:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14766:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14751:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14751:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14743:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14529:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14543:4:8",
														"type": ""
													}
												],
												"src": "14378:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14955:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14972:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14983:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14965:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14965:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14965:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15006:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15017:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15002:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15002:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15022:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14995:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14995:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14995:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15045:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15056:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15041:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15041:18:8"
																	},
																	{
																		"hexValue": "4552433737373a206275726e20616d6f756e7420657863656564732062616c61",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15061:34:8",
																		"type": "",
																		"value": "ERC777: burn amount exceeds bala"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15034:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15034:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15034:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15116:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15127:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15112:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15112:18:8"
																	},
																	{
																		"hexValue": "6e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15132:5:8",
																		"type": "",
																		"value": "nce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15105:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15105:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15105:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15147:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15159:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15170:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15155:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15155:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15147:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14932:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14946:4:8",
														"type": ""
													}
												],
												"src": "14781:399:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC777: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC777: transfer from the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC777: transfer amount exceeds \")\n        mstore(add(headStart, 96), \"allowance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC777: caller is not an operato\")\n        mstore(add(headStart, 96), \"r for holder\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC777: authorizing self as oper\")\n        mstore(add(headStart, 96), \"ator\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC777: revoking self as operato\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC777: approve from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC777: approve to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 192)\n        let tail_1 := abi_encode_string(value4, add(headStart, 192))\n        mstore(add(headStart, 160), sub(tail_1, headStart))\n        tail := abi_encode_string(value5, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"ERC777: transfer amount exceeds \")\n        mstore(add(headStart, 96), \"balance\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        let tail_1 := abi_encode_string(value1, add(headStart, 96))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_string(value2, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 77)\n        mstore(add(headStart, 64), \"ERC777: token recipient contract\")\n        mstore(add(headStart, 96), \" has no implementer for ERC777To\")\n        mstore(add(headStart, 128), \"kensRecipient\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC777: send from the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC777: send to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC777: burn from the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC777: burn amount exceeds bala\")\n        mstore(add(headStart, 96), \"nce\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101365760003560e01c8063959b8c3f116100b2578063d95b637111610081578063fad8b32a11610066578063fad8b32a14610297578063fc673c4f146102aa578063fe9d9303146102bd57600080fd5b8063d95b63711461024b578063dd62ed3e1461025e57600080fd5b8063959b8c3f1461020a57806395d89b411461021d5780639bd9bbc614610225578063a9059cbb1461023857600080fd5b806323b872dd11610109578063556f0dc7116100ee578063556f0dc7146101c557806362ad1b83146101cc57806370a08231146101e157600080fd5b806323b872dd146101a3578063313ce567146101b657600080fd5b806306e485381461013b57806306fdde0314610159578063095ea7b31461016e57806318160ddd14610191575b600080fd5b6101436102d0565b6040516101509190611321565b60405180910390f35b610161610332565b60405161015091906113b4565b61018161017c3660046113df565b6103bb565b6040519015158152602001610150565b6001545b604051908152602001610150565b6101816101b136600461140b565b6103d5565b60405160128152602001610150565b6001610195565b6101df6101da3660046114ef565b6105d6565b005b6101956101ef366004611582565b6001600160a01b031660009081526020819052604090205490565b6101df610218366004611582565b610657565b610161610774565b6101df61023336600461159f565b610783565b6101816102463660046113df565b6107a6565b6101816102593660046115f8565b610895565b61019561026c3660046115f8565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101df6102a5366004611582565b610937565b6101df6102b8366004611631565b610a52565b6101df6102cb3660046116b1565b610acf565b6060600480548060200260200160405190810160405280929190818152602001828054801561032857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161030a575b5050505050905090565b606060028054610341906116f8565b80601f016020809104026020016040519081016040528092919081815260200182805461036d906116f8565b80156103285780601f1061038f57610100808354040283529160200191610328565b820191906000526020600020905b81548152906001019060200180831161039d57509395945050505050565b6000336103c9818585610aee565b60019150505b92915050565b60006001600160a01b03831661043e5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0384166104a35760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b6064820152608401610435565b60003390506104d4818686866040518060200160405280600081525060405180602001604052806000815250610c15565b610500818686866040518060200160405280600081525060405180602001604052806000815250610d3d565b6001600160a01b03808616600090815260086020908152604080832093851683529290522054838110156105885760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b6064820152608401610435565b61059c86836105978785611748565b610aee565b6105ca8287878760405180602001604052806000815250604051806020016040528060008152506000610eac565b50600195945050505050565b6105e03386610895565b6106415760405162461bcd60e51b815260206004820152602c60248201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60448201526b39103337b9103437b63232b960a11b6064820152608401610435565b61065085858585856001611081565b5050505050565b6001600160a01b03811633036106bb5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b6064820152608401610435565b6001600160a01b03811660009081526005602052604090205460ff161561070c573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561073b565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b606060038054610341906116f8565b6107a133848484604051806020016040528060008152506001611081565b505050565b60006001600160a01b03831661080a5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610435565b600033905061083b818286866040518060200160405280600081525060405180602001604052806000815250610c15565b610867818286866040518060200160405280600081525060405180602001604052806000815250610d3d565b6103c98182868660405180602001604052806000815250604051806020016040528060008152506000610eac565b6000816001600160a01b0316836001600160a01b0316148061090057506001600160a01b03831660009081526005602052604090205460ff16801561090057506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061093057506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b336001600160a01b038216036109995760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b6064820152608401610435565b6001600160a01b03811660009081526005602052604090205460ff16156109ed573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610a19565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b610a5c3385610895565b610abd5760405162461bcd60e51b815260206004820152602c60248201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60448201526b39103337b9103437b63232b960a11b6064820152608401610435565b610ac984848484611164565b50505050565b610aea33838360405180602001604052806000815250611164565b5050565b6001600160a01b038316610b525760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610435565b6001600160a01b038216610bb45760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610435565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610c96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cba919061175b565b90506001600160a01b03811615610d3457604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610d01908a908a908a908a908a908a90600401611778565b600060405180830381600087803b158015610d1b57600080fd5b505af1158015610d2f573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610db65760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b6064820152608401610435565b610dc08482611748565b6001600160a01b038088166000908152602081905260408082209390935590871681529081208054869290610df69084906117d1565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610e4e939291906117e4565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610e9b91815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f51919061175b565b90506001600160a01b03811615610fcd576040516223de2960e01b81526001600160a01b038216906223de2990610f96908b908b908b908b908b908b90600401611778565b600060405180830381600087803b158015610fb057600080fd5b505af1158015610fc4573d6000803e3d6000fd5b50505050611077565b8115611077576001600160a01b0386163b156110775760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201527f6b656e73526563697069656e7400000000000000000000000000000000000000608482015260a401610435565b5050505050505050565b6001600160a01b0386166110e25760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b6064820152608401610435565b6001600160a01b0385166111385760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f20616464726573736044820152606401610435565b33611147818888888888610c15565b611155818888888888610d3d565b610d3481888888888888610eac565b6001600160a01b0384166111c55760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b6064820152608401610435565b336111d581866000878787610c15565b6001600160a01b0385166000908152602081905260409020548481101561124a5760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b6064820152608401610435565b6112548582611748565b6001600160a01b03871660009081526020819052604081209190915560018054879290611282908490611748565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a40988787876040516112d0939291906117e4565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b6020808252825182820181905260009190848201906040850190845b818110156113625783516001600160a01b03168352928401929184019160010161133d565b50909695505050505050565b6000815180845260005b8181101561139457602081850181015186830182015201611378565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610930602083018461136e565b6001600160a01b03811681146113dc57600080fd5b50565b600080604083850312156113f257600080fd5b82356113fd816113c7565b946020939093013593505050565b60008060006060848603121561142057600080fd5b833561142b816113c7565b9250602084013561143b816113c7565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261147357600080fd5b813567ffffffffffffffff8082111561148e5761148e61144c565b604051601f8301601f19908116603f011681019082821181831017156114b6576114b661144c565b816040528381528660208588010111156114cf57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561150757600080fd5b8535611512816113c7565b94506020860135611522816113c7565b935060408601359250606086013567ffffffffffffffff8082111561154657600080fd5b61155289838a01611462565b9350608088013591508082111561156857600080fd5b5061157588828901611462565b9150509295509295909350565b60006020828403121561159457600080fd5b8135610930816113c7565b6000806000606084860312156115b457600080fd5b83356115bf816113c7565b925060208401359150604084013567ffffffffffffffff8111156115e257600080fd5b6115ee86828701611462565b9150509250925092565b6000806040838503121561160b57600080fd5b8235611616816113c7565b91506020830135611626816113c7565b809150509250929050565b6000806000806080858703121561164757600080fd5b8435611652816113c7565b935060208501359250604085013567ffffffffffffffff8082111561167657600080fd5b61168288838901611462565b9350606087013591508082111561169857600080fd5b506116a587828801611462565b91505092959194509250565b600080604083850312156116c457600080fd5b82359150602083013567ffffffffffffffff8111156116e257600080fd5b6116ee85828601611462565b9150509250929050565b600181811c9082168061170c57607f821691505b60208210810361172c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103cf576103cf611732565b60006020828403121561176d57600080fd5b8151610930816113c7565b60006001600160a01b038089168352808816602084015280871660408401525084606083015260c060808301526117b260c083018561136e565b82810360a08401526117c4818561136e565b9998505050505050505050565b808201808211156103cf576103cf611732565b8381526060602082015260006117fd606083018561136e565b828103604084015261180f818561136e565b969550505050505056fea2646970667358221220e480e27bfdbd46f6cfe688fb078e98a0278137b8c54e3dbdbe37e69a2bacf43764736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x136 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x959B8C3F GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0xD95B6371 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xFAD8B32A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x109 JUMPI DUP1 PUSH4 0x556F0DC7 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x195 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x14EF JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x1582 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x774 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x783 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x13DF JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x895 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1582 JUMP JUMPDEST PUSH2 0x937 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1631 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x16B1 JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x341 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36D SWAP1 PUSH2 0x16F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x328 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x38F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x328 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39D JUMPI POP SWAP4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3C9 DUP2 DUP6 DUP6 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x4D4 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x500 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x588 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x616C6C6F77616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH2 0x59C DUP7 DUP4 PUSH2 0x597 DUP8 DUP6 PUSH2 0x1748 JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x5CA DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xEAC JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5E0 CALLER DUP7 PUSH2 0x895 JUMP JUMPDEST PUSH2 0x641 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH2 0x650 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1081 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER SUB PUSH2 0x6BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x70C JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x73B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x341 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0x7A1 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0x1081 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x80A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x83B DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x867 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x3C9 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x900 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x900 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x930 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9ED JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xA19 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xA5C CALLER DUP6 PUSH2 0x895 JUMP JUMPDEST PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH2 0xAC9 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1164 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAEA CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1164 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCBA SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xD34 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AD5CBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x75AB9782 SWAP1 PUSH2 0xD01 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xDB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH2 0xDC0 DUP5 DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP8 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xDF6 SWAP1 DUP5 SWAP1 PUSH2 0x17D1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE4E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0xE9B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF2D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF51 SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x23DE29 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH3 0x23DE29 SWAP1 PUSH2 0xF96 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1077 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1077 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EXTCODESIZE ISZERO PUSH2 0x1077 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6B656E73526563697069656E7400000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x435 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x435 JUMP JUMPDEST CALLER PUSH2 0x1147 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x1155 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0xD34 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x11C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST CALLER PUSH2 0x11D5 DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x124A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x435 JUMP JUMPDEST PUSH2 0x1254 DUP6 DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1282 SWAP1 DUP5 SWAP1 PUSH2 0x1748 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x12D0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1362 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x133D JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1394 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1378 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x930 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x136E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x13FD DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x142B DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x143B DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x148E JUMPI PUSH2 0x148E PUSH2 0x144C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x14B6 JUMPI PUSH2 0x14B6 PUSH2 0x144C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x14CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1512 DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1522 DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1552 DUP10 DUP4 DUP11 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1575 DUP9 DUP3 DUP10 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x930 DUP2 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x15BF DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15EE DUP7 DUP3 DUP8 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x160B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1616 DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1626 DUP2 PUSH2 0x13C7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1652 DUP2 PUSH2 0x13C7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1682 DUP9 DUP4 DUP10 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A5 DUP8 DUP3 DUP9 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16EE DUP6 DUP3 DUP7 ADD PUSH2 0x1462 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x170C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x172C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3CF JUMPI PUSH2 0x3CF PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x176D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x930 DUP2 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND DUP4 MSTORE DUP1 DUP9 AND PUSH1 0x20 DUP5 ADD MSTORE DUP1 DUP8 AND PUSH1 0x40 DUP5 ADD MSTORE POP DUP5 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xC0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x17B2 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x136E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x17C4 DUP2 DUP6 PUSH2 0x136E JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3CF JUMPI PUSH2 0x3CF PUSH2 0x1732 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x17FD PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x136E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x180F DUP2 DUP6 PUSH2 0x136E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 DUP1 0xE2 PUSH28 0xFDBD46F6CFE688FB078E98A0278137B8C54E3DBDBE37E69A2BACF437 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1014:17147:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6674:130;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2910:98;;;:::i;:::-;;;;;;;:::i;8253:197::-;;;;;;:::i;:::-;;:::i;:::-;;;1997:14:8;;1990:22;1972:41;;1960:2;1945:18;8253:197:1;1832:187:8;3703:123:1;3807:12;;3703:123;;;2170:25:8;;;2158:2;2143:18;3703:123:1;2024:177:8;8815:776:1;;;;;;:::i;:::-;;:::i;3350:82::-;;;3423:2;2809:36:8;;2797:2;2782:18;3350:82:1;2667:184:8;3547:95:1;3634:1;3547:95;;6923:394;;;;;;:::i;:::-;;:::i;:::-;;3926:150;;;;;;:::i;:::-;-1:-1:-1;;;;;4047:22:1;4021:7;4047:22;;;;;;;;;;;;3926:150;5727:413;;;;;;:::i;:::-;;:::i;3064:102::-;;;:::i;4206:164::-;;;;;;:::i;:::-;;:::i;4601:439::-;;;;;;:::i;:::-;;:::i;5361:299::-;;;;;;:::i;:::-;;:::i;7964:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8080:19:1;;;8054:7;8080:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;7964:151;6204:404;;;;;;:::i;:::-;;:::i;7438:287::-;;;;;;:::i;:::-;;:::i;5170:128::-;;;;;;:::i;:::-;;:::i;6674:130::-;6740:16;6775:22;6768:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6768:29:1;;;;;;;;;;;;;;;;;;;;;;;6674:130;:::o;2910:98::-;2964:13;2996:5;2989:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2989:12:1;;2910:98;-1:-1:-1;;;;;2910:98:1:o;8253:197::-;8335:4;665:10:6;8390:32:1;665:10:6;8407:7:1;8416:5;8390:8;:32::i;:::-;8439:4;8432:11;;;8253:197;;;;;:::o;8815:776::-;8921:4;-1:-1:-1;;;;;8945:23:1;;8937:72;;;;-1:-1:-1;;;8937:72:1;;7502:2:8;8937:72:1;;;7484:21:8;7541:2;7521:18;;;7514:30;7580:34;7560:18;;;7553:62;-1:-1:-1;;;7631:18:8;;;7624:34;7675:19;;8937:72:1;;;;;;;;;-1:-1:-1;;;;;9027:20:1;;9019:71;;;;-1:-1:-1;;;9019:71:1;;7907:2:8;9019:71:1;;;7889:21:8;7946:2;7926:18;;;7919:30;7985:34;7965:18;;;7958:62;-1:-1:-1;;;8036:18:8;;;8029:36;8082:19;;9019:71:1;7705:402:8;9019:71:1;9101:15;665:10:6;9101:30:1;;9142:61;9160:7;9169:6;9177:9;9188:6;9142:61;;;;;;;;;;;;;;;;;;;;;;;;:17;:61::i;:::-;9214:49;9220:7;9229:6;9237:9;9248:6;9214:49;;;;;;;;;;;;;;;;;;;;;;;;:5;:49::i;:::-;-1:-1:-1;;;;;9301:19:1;;;9274:24;9301:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;9347:26;;;;9339:80;;;;-1:-1:-1;;;9339:80:1;;8314:2:8;9339:80:1;;;8296:21:8;8353:2;8333:18;;;8326:30;8392:34;8372:18;;;8365:62;-1:-1:-1;;;8443:18:8;;;8436:39;8492:19;;9339:80:1;8112:405:8;9339:80:1;9429:52;9438:6;9446:7;9455:25;9474:6;9455:16;:25;:::i;:::-;9429:8;:52::i;:::-;9492:70;9512:7;9521:6;9529:9;9540:6;9492:70;;;;;;;;;;;;;;;;;;;;;;;;9556:5;9492:19;:70::i;:::-;-1:-1:-1;9580:4:1;;8815:776;-1:-1:-1;;;;;8815:776:1:o;6923:394::-;7158:35;665:10:6;7186:6:1;7158:13;:35::i;:::-;7150:92;;;;-1:-1:-1;;;7150:92:1;;8989:2:8;7150:92:1;;;8971:21:8;9028:2;9008:18;;;9001:30;9067:34;9047:18;;;9040:62;-1:-1:-1;;;9118:18:8;;;9111:42;9170:19;;7150:92:1;8787:408:8;7150:92:1;7252:58;7258:6;7266:9;7277:6;7285:4;7291:12;7305:4;7252:5;:58::i;:::-;6923:394;;;;;:::o;5727:413::-;-1:-1:-1;;;;;5815:24:1;;665:10:6;5815:24:1;5807:73;;;;-1:-1:-1;;;5807:73:1;;9402:2:8;5807:73:1;;;9384:21:8;9441:2;9421:18;;;9414:30;9480:34;9460:18;;;9453:62;-1:-1:-1;;;9531:18:8;;;9524:34;9575:19;;5807:73:1;9200:400:8;5807:73:1;-1:-1:-1;;;;;5895:27:1;;;;;;:17;:27;;;;;;;;5891:185;;;665:10:6;5945:38:1;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;5945:48:1;;;;;;;;;5938:55;;-1:-1:-1;;5938:55:1;;;5891:185;;;665:10:6;6024:24:1;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6024:34:1;;;;;;;;;:41;;-1:-1:-1;;6024:41:1;6061:4;6024:41;;;5891:185;6091:42;;665:10:6;;-1:-1:-1;;;;;6091:42:1;;;;;;;;5727:413;:::o;3064:102::-;3120:13;3152:7;3145:14;;;;;:::i;4206:164::-;4309:54;665:10:6;4329:9:1;4340:6;4348:4;4309:54;;;;;;;;;;;;4358:4;4309:5;:54::i;:::-;4206:164;;;:::o;4601:439::-;4687:4;-1:-1:-1;;;;;4711:23:1;;4703:72;;;;-1:-1:-1;;;4703:72:1;;7502:2:8;4703:72:1;;;7484:21:8;7541:2;7521:18;;;7514:30;7580:34;7560:18;;;7553:62;-1:-1:-1;;;7631:18:8;;;7624:34;7675:19;;4703:72:1;7300:400:8;4703:72:1;4786:12;665:10:6;4786:27:1;;4824:56;4842:4;4848;4854:9;4865:6;4824:56;;;;;;;;;;;;;;;;;;;;;;;;:17;:56::i;:::-;4891:44;4897:4;4903;4909:9;4920:6;4891:44;;;;;;;;;;;;;;;;;;;;;;;;:5;:44::i;:::-;4946:65;4966:4;4972;4978:9;4989:6;4946:65;;;;;;;;;;;;;;;;;;;;;;;;5005:5;4946:19;:65::i;5361:299::-;5461:4;5496:11;-1:-1:-1;;;;;5484:23:1;:8;-1:-1:-1;;;;;5484:23:1;;:120;;;-1:-1:-1;;;;;;5524:27:1;;;;;;:17;:27;;;;;;;;:79;;;;-1:-1:-1;;;;;;5556:37:1;;;;;;;:24;:37;;;;;;;;:47;;;;;;;;;;;;5555:48;5524:79;5484:169;;;-1:-1:-1;;;;;;5620:23:1;;;;;;;:10;:23;;;;;;;;:33;;;;;;;;;;;;5484:169;5477:176;5361:299;-1:-1:-1;;;5361:299:1:o;6204:404::-;665:10:6;-1:-1:-1;;;;;6289:24:1;;;6281:70;;;;-1:-1:-1;;;6281:70:1;;9807:2:8;6281:70:1;;;9789:21:8;9846:2;9826:18;;;9819:30;9885:34;9865:18;;;9858:62;-1:-1:-1;;;9936:18:8;;;9929:31;9977:19;;6281:70:1;9605:397:8;6281:70:1;-1:-1:-1;;;;;6366:27:1;;;;;;:17;:27;;;;;;;;6362:185;;;665:10:6;6409:38:1;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;6409:48:1;;;;;;;;;:55;;-1:-1:-1;;6409:55:1;6460:4;6409:55;;;6362:185;;;665:10:6;6502:24:1;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6502:34:1;;;;;;;;;6495:41;;-1:-1:-1;;6495:41:1;;;6362:185;6562:39;;665:10:6;;-1:-1:-1;;;;;6562:39:1;;;;;;;;6204:404;:::o;7438:287::-;7581:36;665:10:6;7609:7:1;7581:13;:36::i;:::-;7573:93;;;;-1:-1:-1;;;7573:93:1;;8989:2:8;7573:93:1;;;8971:21:8;9028:2;9008:18;;;9001:30;9067:34;9047:18;;;9040:62;-1:-1:-1;;;9118:18:8;;;9111:42;9170:19;;7573:93:1;8787:408:8;7573:93:1;7676:42;7682:7;7691:6;7699:4;7705:12;7676:5;:42::i;:::-;7438:287;;;;:::o;5170:128::-;5254:37;665:10:6;5274:6:1;5282:4;5254:37;;;;;;;;;;;;:5;:37::i;:::-;5170:128;;:::o;14752:335::-;-1:-1:-1;;;;;14845:20:1;;14837:70;;;;-1:-1:-1;;;14837:70:1;;10209:2:8;14837:70:1;;;10191:21:8;10248:2;10228:18;;;10221:30;10287:34;10267:18;;;10260:62;-1:-1:-1;;;10338:18:8;;;10331:35;10383:19;;14837:70:1;10007:401:8;14837:70:1;-1:-1:-1;;;;;14925:21:1;;14917:69;;;;-1:-1:-1;;;14917:69:1;;10615:2:8;14917:69:1;;;10597:21:8;10654:2;10634:18;;;10627:30;10693:34;10673:18;;;10666:62;-1:-1:-1;;;10744:18:8;;;10737:33;10787:19;;14917:69:1;10413:399:8;14917:69:1;-1:-1:-1;;;;;14997:19:1;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:36;;;15048:32;;2170:25:8;;;15048:32:1;;2143:18:8;15048:32:1;;;;;;;14752:335;;;:::o;15560:484::-;15803:78;;-1:-1:-1;;;15803:78:1;;-1:-1:-1;;;;;11009:55:8;;15803:78:1;;;10991:74:8;1417:31:1;11081:18:8;;;11074:34;15781:19:1;;1168:42;;15803:41;;10964:18:8;;15803:78:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15781:100;-1:-1:-1;;;;;;15895:25:1;;;15891:147;;15936:91;;-1:-1:-1;;;15936:91:1;;-1:-1:-1;;;;;15936:39:1;;;;;:91;;15976:8;;15986:4;;15992:2;;15996:6;;16004:8;;16014:12;;15936:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15891:147;15771:273;15560:484;;;;;;:::o;14025:589::-;-1:-1:-1;;;;;14315:15:1;;14293:19;14315:15;;;;;;;;;;;14348:21;;;;14340:73;;;;-1:-1:-1;;;14340:73:1;;12337:2:8;14340:73:1;;;12319:21:8;12376:2;12356:18;;;12349:30;12415:34;12395:18;;;12388:62;-1:-1:-1;;;12466:18:8;;;12459:37;12513:19;;14340:73:1;12135:403:8;14340:73:1;14441:20;14455:6;14441:11;:20;:::i;:::-;-1:-1:-1;;;;;14423:15:1;;;:9;:15;;;;;;;;;;;:38;;;;14471:13;;;;;;;;:23;;14488:6;;14423:9;14471:23;;14488:6;;14471:23;:::i;:::-;;;;;;;;14531:2;-1:-1:-1;;;;;14510:56:1;14525:4;-1:-1:-1;;;;;14510:56:1;14515:8;-1:-1:-1;;;;;14510:56:1;;14535:6;14543:8;14553:12;14510:56;;;;;;;;:::i;:::-;;;;;;;;14596:2;-1:-1:-1;;;;;14581:26:1;14590:4;-1:-1:-1;;;;;14581:26:1;;14600:6;14581:26;;;;2170:25:8;;2158:2;2143:18;;2024:177;14581:26:1;;;;;;;;14224:390;14025:589;;;;;;:::o;16733:688::-;17012:79;;-1:-1:-1;;;17012:79:1;;-1:-1:-1;;;;;11009:55:8;;17012:79:1;;;10991:74:8;1514:34:1;11081:18:8;;;11074:34;16990:19:1;;1168:42;;17012:41;;10964:18:8;;17012:79:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16990:101;-1:-1:-1;;;;;;17105:25:1;;;17101:314;;17146:96;;-1:-1:-1;;;17146:96:1;;-1:-1:-1;;;;;17146:44:1;;;;;:96;;17191:8;;17201:4;;17207:2;;17211:6;;17219:8;;17229:12;;17146:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17101:314;;;17263:19;17259:156;;;-1:-1:-1;;;;;17307:13:1;;1078:20:5;1116:8;17298:106:1;;;;-1:-1:-1;;;17298:106:1;;13330:2:8;17298:106:1;;;13312:21:8;13369:2;13349:18;;;13342:30;13408:34;13388:18;;;13381:62;13479:34;13459:18;;;13452:62;13551:15;13530:19;;;13523:44;13584:19;;17298:106:1;13128:481:8;17298:106:1;16980:441;16733:688;;;;;;;:::o;12247:670::-;-1:-1:-1;;;;;12489:18:1;;12481:65;;;;-1:-1:-1;;;12481:65:1;;13816:2:8;12481:65:1;;;13798:21:8;13855:2;13835:18;;;13828:30;13894:34;13874:18;;;13867:62;-1:-1:-1;;;13945:18:8;;;13938:32;13987:19;;12481:65:1;13614:398:8;12481:65:1;-1:-1:-1;;;;;12564:16:1;;12556:61;;;;-1:-1:-1;;;12556:61:1;;14219:2:8;12556:61:1;;;14201:21:8;;;14238:18;;;14231:30;14297:34;14277:18;;;14270:62;14349:18;;12556:61:1;14017:356:8;12556:61:1;665:10:6;12670:69:1;665:10:6;12698:4:1;12704:2;12708:6;12716:8;12726:12;12670:17;:69::i;:::-;12750:57;12756:8;12766:4;12772:2;12776:6;12784:8;12794:12;12750:5;:57::i;:::-;12818:92;12838:8;12848:4;12854:2;12858:6;12866:8;12876:12;12890:19;12818;:92::i;13222:797::-;-1:-1:-1;;;;;13406:18:1;;13398:65;;;;-1:-1:-1;;;13398:65:1;;14580:2:8;13398:65:1;;;14562:21:8;14619:2;14599:18;;;14592:30;14658:34;14638:18;;;14631:62;-1:-1:-1;;;14709:18:8;;;14702:32;14751:19;;13398:65:1;14378:398:8;13398:65:1;665:10:6;13516:73:1;665:10:6;13544:4:1;13474:16;13562:6;13570:4;13576:12;13516:17;:73::i;:::-;-1:-1:-1;;;;;13723:15:1;;13701:19;13723:15;;;;;;;;;;;13756:21;;;;13748:69;;;;-1:-1:-1;;;13748:69:1;;14983:2:8;13748:69:1;;;14965:21:8;15022:2;15002:18;;;14995:30;15061:34;15041:18;;;15034:62;-1:-1:-1;;;15112:18:8;;;15105:33;15155:19;;13748:69:1;14781:399:8;13748:69:1;13845:20;13859:6;13845:11;:20;:::i;:::-;-1:-1:-1;;;;;13827:15:1;;:9;:15;;;;;;;;;;:38;;;;13875:12;:22;;13891:6;;13827:9;13875:22;;13891:6;;13875:22;:::i;:::-;;;;;;;;13930:4;-1:-1:-1;;;;;13913:50:1;13920:8;-1:-1:-1;;;;;13913:50:1;;13936:6;13944:4;13950:12;13913:50;;;;;;;;:::i;:::-;;;;;;;;13978:34;;2170:25:8;;;14001:1:1;;-1:-1:-1;;;;;13978:34:1;;;;;2158:2:8;2143:18;13978:34:1;;;;;;;13388:631;;13222:797;;;;:::o;14:681:8:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:218;465:6;462:1;459:13;451:218;;;530:13;;-1:-1:-1;;;;;526:62:8;514:75;;644:15;;;;609:12;;;;487:1;480:9;451:218;;;-1:-1:-1;686:3:8;;14:681;-1:-1:-1;;;;;;14:681:8:o;700:423::-;742:3;780:5;774:12;807:6;802:3;795:19;832:1;842:162;856:6;853:1;850:13;842:162;;;918:4;974:13;;;970:22;;964:29;946:11;;;942:20;;935:59;871:12;842:162;;;846:3;1049:1;1042:4;1033:6;1028:3;1024:16;1020:27;1013:38;1112:4;1105:2;1101:7;1096:2;1088:6;1084:15;1080:29;1075:3;1071:39;1067:50;1060:57;;;700:423;;;;:::o;1128:220::-;1277:2;1266:9;1259:21;1240:4;1297:45;1338:2;1327:9;1323:18;1315:6;1297:45;:::i;1353:154::-;-1:-1:-1;;;;;1432:5:8;1428:54;1421:5;1418:65;1408:93;;1497:1;1494;1487:12;1408:93;1353:154;:::o;1512:315::-;1580:6;1588;1641:2;1629:9;1620:7;1616:23;1612:32;1609:52;;;1657:1;1654;1647:12;1609:52;1696:9;1683:23;1715:31;1740:5;1715:31;:::i;:::-;1765:5;1817:2;1802:18;;;;1789:32;;-1:-1:-1;;;1512:315:8:o;2206:456::-;2283:6;2291;2299;2352:2;2340:9;2331:7;2327:23;2323:32;2320:52;;;2368:1;2365;2358:12;2320:52;2407:9;2394:23;2426:31;2451:5;2426:31;:::i;:::-;2476:5;-1:-1:-1;2533:2:8;2518:18;;2505:32;2546:33;2505:32;2546:33;:::i;:::-;2206:456;;2598:7;;-1:-1:-1;;;2652:2:8;2637:18;;;;2624:32;;2206:456::o;2856:127::-;2917:10;2912:3;2908:20;2905:1;2898:31;2948:4;2945:1;2938:15;2972:4;2969:1;2962:15;2988:718;3030:5;3083:3;3076:4;3068:6;3064:17;3060:27;3050:55;;3101:1;3098;3091:12;3050:55;3137:6;3124:20;3163:18;3200:2;3196;3193:10;3190:36;;;3206:18;;:::i;:::-;3281:2;3275:9;3249:2;3335:13;;-1:-1:-1;;3331:22:8;;;3355:2;3327:31;3323:40;3311:53;;;3379:18;;;3399:22;;;3376:46;3373:72;;;3425:18;;:::i;:::-;3465:10;3461:2;3454:22;3500:2;3492:6;3485:18;3546:3;3539:4;3534:2;3526:6;3522:15;3518:26;3515:35;3512:55;;;3563:1;3560;3553:12;3512:55;3627:2;3620:4;3612:6;3608:17;3601:4;3593:6;3589:17;3576:54;3674:1;3667:4;3662:2;3654:6;3650:15;3646:26;3639:37;3694:6;3685:15;;;;;;2988:718;;;;:::o;3711:885::-;3824:6;3832;3840;3848;3856;3909:3;3897:9;3888:7;3884:23;3880:33;3877:53;;;3926:1;3923;3916:12;3877:53;3965:9;3952:23;3984:31;4009:5;3984:31;:::i;:::-;4034:5;-1:-1:-1;4091:2:8;4076:18;;4063:32;4104:33;4063:32;4104:33;:::i;:::-;4156:7;-1:-1:-1;4210:2:8;4195:18;;4182:32;;-1:-1:-1;4265:2:8;4250:18;;4237:32;4288:18;4318:14;;;4315:34;;;4345:1;4342;4335:12;4315:34;4368:49;4409:7;4400:6;4389:9;4385:22;4368:49;:::i;:::-;4358:59;;4470:3;4459:9;4455:19;4442:33;4426:49;;4500:2;4490:8;4487:16;4484:36;;;4516:1;4513;4506:12;4484:36;;4539:51;4582:7;4571:8;4560:9;4556:24;4539:51;:::i;:::-;4529:61;;;3711:885;;;;;;;;:::o;4601:247::-;4660:6;4713:2;4701:9;4692:7;4688:23;4684:32;4681:52;;;4729:1;4726;4719:12;4681:52;4768:9;4755:23;4787:31;4812:5;4787:31;:::i;4853:523::-;4939:6;4947;4955;5008:2;4996:9;4987:7;4983:23;4979:32;4976:52;;;5024:1;5021;5014:12;4976:52;5063:9;5050:23;5082:31;5107:5;5082:31;:::i;:::-;5132:5;-1:-1:-1;5184:2:8;5169:18;;5156:32;;-1:-1:-1;5239:2:8;5224:18;;5211:32;5266:18;5255:30;;5252:50;;;5298:1;5295;5288:12;5252:50;5321:49;5362:7;5353:6;5342:9;5338:22;5321:49;:::i;:::-;5311:59;;;4853:523;;;;;:::o;5381:388::-;5449:6;5457;5510:2;5498:9;5489:7;5485:23;5481:32;5478:52;;;5526:1;5523;5516:12;5478:52;5565:9;5552:23;5584:31;5609:5;5584:31;:::i;:::-;5634:5;-1:-1:-1;5691:2:8;5676:18;;5663:32;5704:33;5663:32;5704:33;:::i;:::-;5756:7;5746:17;;;5381:388;;;;;:::o;5774:743::-;5878:6;5886;5894;5902;5955:3;5943:9;5934:7;5930:23;5926:33;5923:53;;;5972:1;5969;5962:12;5923:53;6011:9;5998:23;6030:31;6055:5;6030:31;:::i;:::-;6080:5;-1:-1:-1;6132:2:8;6117:18;;6104:32;;-1:-1:-1;6187:2:8;6172:18;;6159:32;6210:18;6240:14;;;6237:34;;;6267:1;6264;6257:12;6237:34;6290:49;6331:7;6322:6;6311:9;6307:22;6290:49;:::i;:::-;6280:59;;6392:2;6381:9;6377:18;6364:32;6348:48;;6421:2;6411:8;6408:16;6405:36;;;6437:1;6434;6427:12;6405:36;;6460:51;6503:7;6492:8;6481:9;6477:24;6460:51;:::i;:::-;6450:61;;;5774:743;;;;;;;:::o;6522:388::-;6599:6;6607;6660:2;6648:9;6639:7;6635:23;6631:32;6628:52;;;6676:1;6673;6666:12;6628:52;6712:9;6699:23;6689:33;;6773:2;6762:9;6758:18;6745:32;6800:18;6792:6;6789:30;6786:50;;;6832:1;6829;6822:12;6786:50;6855:49;6896:7;6887:6;6876:9;6872:22;6855:49;:::i;:::-;6845:59;;;6522:388;;;;;:::o;6915:380::-;6994:1;6990:12;;;;7037;;;7058:61;;7112:4;7104:6;7100:17;7090:27;;7058:61;7165:2;7157:6;7154:14;7134:18;7131:38;7128:161;;7211:10;7206:3;7202:20;7199:1;7192:31;7246:4;7243:1;7236:15;7274:4;7271:1;7264:15;7128:161;;6915:380;;;:::o;8522:127::-;8583:10;8578:3;8574:20;8571:1;8564:31;8614:4;8611:1;8604:15;8638:4;8635:1;8628:15;8654:128;8721:9;;;8742:11;;;8739:37;;;8756:18;;:::i;11119:251::-;11189:6;11242:2;11230:9;11221:7;11217:23;11213:32;11210:52;;;11258:1;11255;11248:12;11210:52;11290:9;11284:16;11309:31;11334:5;11309:31;:::i;11375:755::-;11643:4;-1:-1:-1;;;;;11753:2:8;11745:6;11741:15;11730:9;11723:34;11805:2;11797:6;11793:15;11788:2;11777:9;11773:18;11766:43;11857:2;11849:6;11845:15;11840:2;11829:9;11825:18;11818:43;;11897:6;11892:2;11881:9;11877:18;11870:34;11941:3;11935;11924:9;11920:19;11913:32;11968:46;12009:3;11998:9;11994:19;11986:6;11968:46;:::i;:::-;12063:9;12055:6;12051:22;12045:3;12034:9;12030:19;12023:51;12091:33;12117:6;12109;12091:33;:::i;:::-;12083:41;11375:755;-1:-1:-1;;;;;;;;;11375:755:8:o;12543:125::-;12608:9;;;12629:10;;;12626:36;;;12642:18;;:::i;12673:450::-;12894:6;12883:9;12876:25;12937:2;12932;12921:9;12917:18;12910:30;12857:4;12963:45;13004:2;12993:9;12989:18;12981:6;12963:45;:::i;:::-;13056:9;13048:6;13044:22;13039:2;13028:9;13024:18;13017:50;13084:33;13110:6;13102;13084:33;:::i;:::-;13076:41;12673:450;-1:-1:-1;;;;;;12673:450:8:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1244600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24667",
								"authorizeOperator(address)": "28508",
								"balanceOf(address)": "2623",
								"burn(uint256,bytes)": "infinite",
								"decimals()": "245",
								"defaultOperators()": "infinite",
								"granularity()": "237",
								"isOperatorFor(address,address)": "infinite",
								"name()": "infinite",
								"operatorBurn(address,uint256,bytes,bytes)": "infinite",
								"operatorSend(address,address,uint256,bytes,bytes)": "infinite",
								"revokeOperator(address)": "28535",
								"send(address,uint256,bytes)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2371",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256)": "infinite",
								"_burn(address,uint256,bytes memory,bytes memory)": "infinite",
								"_callTokensReceived(address,address,address,uint256,bytes memory,bytes memory,bool)": "infinite",
								"_callTokensToSend(address,address,address,uint256,bytes memory,bytes memory)": "infinite",
								"_mint(address,uint256,bytes memory,bytes memory)": "infinite",
								"_mint(address,uint256,bytes memory,bytes memory,bool)": "infinite",
								"_move(address,address,address,uint256,bytes memory,bytes memory)": "infinite",
								"_send(address,address,uint256,bytes memory,bytes memory,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2244,
									"end": 2856,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2376,
									"end": 2381,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2376,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2384,
									"end": 2389,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2376,
									"end": 2381,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2376,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2376,
									"end": 2389,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2376,
									"end": 2389,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2376,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2399,
									"end": 2406,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2409,
									"end": 2416,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2399,
									"end": 2406,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2399,
									"end": 2416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2399,
									"end": 2416,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2449,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2427,
									"end": 2449,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2427,
									"end": 2469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2469,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2484,
									"end": 2493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2503,
									"end": 2520,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2503,
									"end": 2527,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2499,
									"end": 2500,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2499,
									"end": 2527,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2590,
									"end": 2594,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2548,
									"end": 2565,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2566,
									"end": 2583,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2584,
									"end": 2585,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2566,
									"end": 2586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2586,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2548,
									"end": 2587,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2548,
									"end": 2594,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 2529,
									"end": 2532,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2529,
									"end": 2532,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2479,
									"end": 2605,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "29965A1D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5812,
									"end": 5846,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5812,
									"end": 5846,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5812,
									"end": 5846,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2703,
									"end": 2727,
									"name": "PUSH",
									"source": 1,
									"value": "AC7FBAB5F54A3CA8194167523C6753BFEB96A445279294B6125B68CCE2177054"
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5855,
									"end": 5889,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5898,
									"end": 5941,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1168,
									"end": 1210,
									"name": "PUSH",
									"source": 1,
									"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
								},
								{
									"begin": 1168,
									"end": 1210,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2687,
									"name": "PUSH",
									"source": 1,
									"value": "29965A1D"
								},
								{
									"begin": 2646,
									"end": 2687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5747,
									"end": 5765,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5747,
									"end": 5765,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "EXTCODESIZE",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "GAS",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "CALL",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "RETURNDATACOPY",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2646,
									"end": 2743,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "29965A1D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2803,
									"end": 2807,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5812,
									"end": 5846,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5812,
									"end": 5846,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5812,
									"end": 5846,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2810,
									"end": 2833,
									"name": "PUSH",
									"source": 1,
									"value": "AEA199E31A596269B42CDAFD93407F14436DB6E4CAD65417994C2EB37381E05A"
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5855,
									"end": 5889,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5898,
									"end": 5941,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1168,
									"end": 1210,
									"name": "PUSH",
									"source": 1,
									"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
								},
								{
									"begin": 1168,
									"end": 1210,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2753,
									"end": 2794,
									"name": "PUSH",
									"source": 1,
									"value": "29965A1D"
								},
								{
									"begin": 2753,
									"end": 2794,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5747,
									"end": 5765,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5747,
									"end": 5765,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "EXTCODESIZE",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "GAS",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "CALL",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "RETURNDATACOPY",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2753,
									"end": 2849,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2244,
									"end": 2856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1014,
									"end": 18161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 421,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 146,
									"end": 421,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 217,
									"end": 219,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 211,
									"end": 220,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 282,
									"end": 284,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 263,
									"end": 276,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 263,
									"end": 276,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 259,
									"end": 286,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 247,
									"end": 287,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 247,
									"end": 287,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 302,
									"end": 336,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 302,
									"end": 336,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 338,
									"end": 360,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 338,
									"end": 360,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 338,
									"end": 360,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 299,
									"end": 361,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 296,
									"end": 384,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 296,
									"end": 384,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 296,
									"end": 384,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 364,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 364,
									"end": 382,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 364,
									"end": 382,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 364,
									"end": 382,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 364,
									"end": 382,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 400,
									"end": 402,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 393,
									"end": 415,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 146,
									"end": 421,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 146,
									"end": 421,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 421,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 426,
									"end": 1076,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 426,
									"end": 1076,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 480,
									"end": 485,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 536,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 526,
									"end": 530,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 518,
									"end": 524,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 514,
									"end": 531,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 510,
									"end": 537,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 500,
									"end": 555,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 500,
									"end": 555,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 551,
									"end": 552,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 548,
									"end": 549,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 541,
									"end": 553,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 500,
									"end": 555,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 500,
									"end": 555,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 574,
									"end": 587,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 574,
									"end": 587,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 599,
									"end": 625,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 599,
									"end": 625,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 596,
									"end": 648,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 596,
									"end": 648,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 596,
									"end": 648,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 628,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 628,
									"end": 646,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 628,
									"end": 646,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 667,
									"end": 671,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 695,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 738,
									"end": 740,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 719,
									"end": 732,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 719,
									"end": 732,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 715,
									"end": 742,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 711,
									"end": 747,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 711,
									"end": 747,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 695,
									"end": 748,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 695,
									"end": 748,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 695,
									"end": 748,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 695,
									"end": 748,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 773,
									"end": 775,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 764,
									"end": 771,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 757,
									"end": 776,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 817,
									"end": 820,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 812,
									"end": 814,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 807,
									"end": 809,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 799,
									"end": 805,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 795,
									"end": 810,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 791,
									"end": 815,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 788,
									"end": 821,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 785,
									"end": 838,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 785,
									"end": 838,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 785,
									"end": 838,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 834,
									"end": 835,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 831,
									"end": 832,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 824,
									"end": 836,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 785,
									"end": 838,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 785,
									"end": 838,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 856,
									"end": 857,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 880,
									"end": 882,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 877,
									"end": 878,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 874,
									"end": 883,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 969,
									"end": 983,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 969,
									"end": 983,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 969,
									"end": 983,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 965,
									"end": 988,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 965,
									"end": 988,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 959,
									"end": 989,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 937,
									"end": 952,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 937,
									"end": 952,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 937,
									"end": 952,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 933,
									"end": 957,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 933,
									"end": 957,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 926,
									"end": 990,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 891,
									"end": 901,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 891,
									"end": 901,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 866,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1043,
									"end": 1044,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1020,
									"end": 1036,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1020,
									"end": 1036,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1020,
									"end": 1036,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1016,
									"end": 1041,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1016,
									"end": 1041,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1016,
									"end": 1041,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1009,
									"end": 1045,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1009,
									"end": 1045,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1009,
									"end": 1045,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1009,
									"end": 1045,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1024,
									"end": 1031,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 426,
									"end": 1076,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 426,
									"end": 1076,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1081,
									"end": 2609,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1081,
									"end": 2609,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1214,
									"end": 1220,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1228,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1230,
									"end": 1236,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1285,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1271,
									"end": 1280,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1262,
									"end": 1269,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1258,
									"end": 1281,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1254,
									"end": 1286,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1303,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1303,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1303,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1299,
									"end": 1300,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 1297,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1301,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1303,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1303,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1342,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1342,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1391,
									"end": 1405,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1405,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1391,
									"end": 1405,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1388,
									"end": 1422,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1388,
									"end": 1422,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1388,
									"end": 1422,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1418,
									"end": 1419,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1415,
									"end": 1416,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1408,
									"end": 1420,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1388,
									"end": 1422,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1388,
									"end": 1422,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1441,
									"end": 1502,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1494,
									"end": 1501,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1485,
									"end": 1491,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1483,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1492,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1441,
									"end": 1502,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1441,
									"end": 1502,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1441,
									"end": 1502,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1441,
									"end": 1502,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1431,
									"end": 1502,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 1431,
									"end": 1502,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1521,
									"end": 1523,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1569,
									"end": 1571,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1567,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1554,
									"end": 1572,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1548,
									"end": 1573,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1598,
									"end": 1600,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1588,
									"end": 1596,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1585,
									"end": 1601,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1618,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1618,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1582,
									"end": 1618,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1614,
									"end": 1615,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1611,
									"end": 1612,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1604,
									"end": 1616,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1618,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1582,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1637,
									"end": 1700,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1692,
									"end": 1699,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1681,
									"end": 1689,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1670,
									"end": 1679,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 1666,
									"end": 1690,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1637,
									"end": 1700,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1637,
									"end": 1700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1637,
									"end": 1700,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1637,
									"end": 1700,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1627,
									"end": 1700,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 1627,
									"end": 1700,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1627,
									"end": 1700,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1748,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1735,
									"end": 1744,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1731,
									"end": 1749,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1750,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1775,
									"end": 1777,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1765,
									"end": 1773,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1762,
									"end": 1778,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1759,
									"end": 1795,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1759,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1759,
									"end": 1795,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1788,
									"end": 1789,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1781,
									"end": 1793,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1759,
									"end": 1795,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1759,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1814,
									"end": 1838,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1814,
									"end": 1838,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1861,
									"end": 1874,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1861,
									"end": 1874,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1857,
									"end": 1884,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SGT",
									"source": -1
								},
								{
									"begin": 1847,
									"end": 1902,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1847,
									"end": 1902,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 1899,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1895,
									"end": 1896,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1888,
									"end": 1900,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1847,
									"end": 1902,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1847,
									"end": 1902,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1927,
									"end": 1929,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1921,
									"end": 1930,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1949,
									"end": 1951,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1945,
									"end": 1947,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1942,
									"end": 1952,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1939,
									"end": 1975,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1939,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1939,
									"end": 1975,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1955,
									"end": 1973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1955,
									"end": 1973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1955,
									"end": 1973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1955,
									"end": 1973,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1955,
									"end": 1973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2001,
									"end": 2003,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1998,
									"end": 1999,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1994,
									"end": 2004,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1984,
									"end": 2004,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1984,
									"end": 2004,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2024,
									"end": 2052,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 2048,
									"end": 2050,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2044,
									"end": 2046,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2040,
									"end": 2051,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2024,
									"end": 2052,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 2024,
									"end": 2052,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2024,
									"end": 2052,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 2024,
									"end": 2052,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2086,
									"end": 2101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2086,
									"end": 2101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2086,
									"end": 2101,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2156,
									"end": 2167,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2156,
									"end": 2167,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2156,
									"end": 2167,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2172,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2172,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2172,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2129,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2129,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2129,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2117,
									"end": 2129,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2203,
									"name": "DUP11",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2203,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2184,
									"end": 2203,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2181,
									"end": 2220,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2181,
									"end": 2220,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 2181,
									"end": 2220,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2216,
									"end": 2217,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2213,
									"end": 2214,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2206,
									"end": 2218,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2181,
									"end": 2220,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 2181,
									"end": 2220,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2240,
									"end": 2251,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2240,
									"end": 2251,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2240,
									"end": 2251,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2240,
									"end": 2251,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2276,
									"end": 2282,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2271,
									"end": 2274,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2268,
									"end": 2283,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2343,
									"end": 2353,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2343,
									"end": 2353,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2343,
									"end": 2353,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2386,
									"end": 2417,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2386,
									"end": 2417,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2376,
									"end": 2418,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2376,
									"end": 2418,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2366,
									"end": 2506,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2366,
									"end": 2506,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2489,
									"end": 2491,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2485,
									"end": 2487,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2478,
									"end": 2492,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2366,
									"end": 2506,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2366,
									"end": 2506,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2519,
									"end": 2537,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2519,
									"end": 2537,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2519,
									"end": 2537,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2293,
									"end": 2305,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2293,
									"end": 2305,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2293,
									"end": 2305,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2293,
									"end": 2305,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2598,
									"end": 2603,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2588,
									"end": 2603,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1081,
									"end": 2609,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1081,
									"end": 2609,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1081,
									"end": 2609,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1081,
									"end": 2609,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1081,
									"end": 2609,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1081,
									"end": 2609,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2614,
									"end": 2994,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 2614,
									"end": 2994,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2693,
									"end": 2694,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2689,
									"end": 2701,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2689,
									"end": 2701,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2689,
									"end": 2701,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2689,
									"end": 2701,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2736,
									"end": 2748,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2736,
									"end": 2748,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2736,
									"end": 2748,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2757,
									"end": 2818,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2757,
									"end": 2818,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2811,
									"end": 2815,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2803,
									"end": 2809,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2799,
									"end": 2816,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2789,
									"end": 2816,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2789,
									"end": 2816,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2757,
									"end": 2818,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2757,
									"end": 2818,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2864,
									"end": 2866,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2856,
									"end": 2862,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2853,
									"end": 2867,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2833,
									"end": 2851,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2830,
									"end": 2868,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2827,
									"end": 2988,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 2827,
									"end": 2988,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 2905,
									"end": 2908,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 2901,
									"end": 2921,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2898,
									"end": 2899,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2891,
									"end": 2922,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2945,
									"end": 2949,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2942,
									"end": 2943,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2935,
									"end": 2950,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2973,
									"end": 2977,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2970,
									"end": 2971,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2963,
									"end": 2978,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2827,
									"end": 2988,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 2827,
									"end": 2988,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2827,
									"end": 2988,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2614,
									"end": 2994,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2614,
									"end": 2994,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2614,
									"end": 2994,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2614,
									"end": 2994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3125,
									"end": 3670,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 3125,
									"end": 3670,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3227,
									"end": 3229,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3222,
									"end": 3225,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3219,
									"end": 3230,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3216,
									"end": 3664,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3216,
									"end": 3664,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 3216,
									"end": 3664,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3263,
									"end": 3264,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3288,
									"end": 3293,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3284,
									"end": 3286,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3277,
									"end": 3294,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3333,
									"end": 3337,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3329,
									"end": 3331,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3319,
									"end": 3338,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 3403,
									"end": 3405,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3391,
									"end": 3401,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3387,
									"end": 3406,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3384,
									"end": 3385,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 3380,
									"end": 3407,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3374,
									"end": 3378,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3370,
									"end": 3408,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3439,
									"end": 3443,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3427,
									"end": 3437,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3444,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3421,
									"end": 3468,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3421,
									"end": 3468,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 3421,
									"end": 3468,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3421,
									"end": 3468,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 3421,
									"end": 3468,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3517,
									"end": 3519,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3512,
									"end": 3515,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3508,
									"end": 3520,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3505,
									"end": 3506,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 3501,
									"end": 3521,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3499,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3491,
									"end": 3522,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3481,
									"end": 3522,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3481,
									"end": 3522,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3590,
									"end": 3592,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3583,
									"end": 3588,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3580,
									"end": 3593,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3635,
									"end": 3652,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3635,
									"end": 3652,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3635,
									"end": 3652,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3616,
									"end": 3617,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3605,
									"end": 3618,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3572,
									"end": 3654,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3576,
									"end": 3579,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3576,
									"end": 3579,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3576,
									"end": 3579,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3216,
									"end": 3664,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 3216,
									"end": 3664,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3125,
									"end": 3670,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3125,
									"end": 3670,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3125,
									"end": 3670,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3125,
									"end": 3670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3846,
									"end": 5198,
									"name": "tag",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 3846,
									"end": 5198,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3966,
									"end": 3976,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3966,
									"end": 3976,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3988,
									"end": 4018,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3988,
									"end": 4018,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3985,
									"end": 4041,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3985,
									"end": 4041,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 3985,
									"end": 4041,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 4021,
									"end": 4039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4050,
									"end": 4147,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 4140,
									"end": 4146,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4100,
									"end": 4138,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 4132,
									"end": 4136,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4126,
									"end": 4137,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 4100,
									"end": 4138,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 4100,
									"end": 4138,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4100,
									"end": 4138,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 4100,
									"end": 4138,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4094,
									"end": 4098,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4050,
									"end": 4147,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 4050,
									"end": 4147,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4050,
									"end": 4147,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 4050,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4268,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4255,
									"end": 4269,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4269,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4283,
									"end": 4284,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4278,
									"end": 4941,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4278,
									"end": 4941,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4278,
									"end": 4941,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 4278,
									"end": 4941,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4985,
									"end": 4986,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5002,
									"end": 5008,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4999,
									"end": 5088,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4999,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 4999,
									"end": 5088,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5054,
									"end": 5073,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5054,
									"end": 5073,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5054,
									"end": 5073,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5048,
									"end": 5074,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4999,
									"end": 5088,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 4999,
									"end": 5088,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3803,
									"end": 3804,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3799,
									"end": 3810,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3799,
									"end": 3810,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3799,
									"end": 3810,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3795,
									"end": 3819,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3791,
									"end": 3820,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3781,
									"end": 3821,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3827,
									"end": 3828,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3823,
									"end": 3834,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3823,
									"end": 3834,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3823,
									"end": 3834,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3778,
									"end": 3835,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5101,
									"end": 5182,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5101,
									"end": 5182,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4248,
									"end": 5192,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 4248,
									"end": 5192,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4278,
									"end": 4941,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 4278,
									"end": 4941,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3072,
									"end": 3073,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3065,
									"end": 3079,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3065,
									"end": 3079,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3065,
									"end": 3079,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3109,
									"end": 3113,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3096,
									"end": 3114,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3096,
									"end": 3114,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4314,
									"end": 4334,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4314,
									"end": 4334,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4314,
									"end": 4334,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4446,
									"end": 4453,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4443,
									"end": 4444,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4440,
									"end": 4454,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4535,
									"end": 4554,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4535,
									"end": 4554,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4535,
									"end": 4554,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4529,
									"end": 4555,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4514,
									"end": 4556,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4514,
									"end": 4556,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4627,
									"end": 4654,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 4627,
									"end": 4654,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4627,
									"end": 4654,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4627,
									"end": 4654,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 4595,
									"end": 4596,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4583,
									"end": 4597,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4583,
									"end": 4597,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4583,
									"end": 4597,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4583,
									"end": 4597,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4462,
									"end": 4481,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4462,
									"end": 4481,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 4432,
									"end": 4668,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4436,
									"end": 4439,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4696,
									"end": 4702,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4687,
									"end": 4694,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4684,
									"end": 4703,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4681,
									"end": 4882,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4681,
									"end": 4882,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 4681,
									"end": 4882,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4757,
									"end": 4776,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 4757,
									"end": 4776,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4757,
									"end": 4776,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4751,
									"end": 4777,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4840,
									"end": 4841,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 4836,
									"end": 4850,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4836,
									"end": 4850,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4836,
									"end": 4850,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4852,
									"end": 4855,
									"name": "PUSH",
									"source": 8,
									"value": "F8"
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4828,
									"end": 4865,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4824,
									"end": 4866,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4809,
									"end": 4867,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4794,
									"end": 4868,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4794,
									"end": 4868,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4681,
									"end": 4882,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 4681,
									"end": 4882,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4928,
									"end": 4929,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4912,
									"end": 4926,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4912,
									"end": 4926,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4912,
									"end": 4926,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4908,
									"end": 4930,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4895,
									"end": 4931,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4895,
									"end": 4931,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3846,
									"end": 5198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5203,
									"end": 5330,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 5203,
									"end": 5330,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5264,
									"end": 5274,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 5259,
									"end": 5262,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 5255,
									"end": 5275,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 5252,
									"end": 5253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5245,
									"end": 5276,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5295,
									"end": 5299,
									"name": "PUSH",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 5292,
									"end": 5293,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 5285,
									"end": 5300,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5319,
									"end": 5323,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 5316,
									"end": 5317,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5309,
									"end": 5324,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5335,
									"end": 5567,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 5335,
									"end": 5567,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5374,
									"end": 5377,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5395,
									"end": 5412,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5395,
									"end": 5412,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5395,
									"end": 5412,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5392,
									"end": 5532,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 5392,
									"end": 5532,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5454,
									"end": 5464,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 5449,
									"end": 5452,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 5445,
									"end": 5465,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 5442,
									"end": 5443,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5435,
									"end": 5466,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5489,
									"end": 5493,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 5486,
									"end": 5487,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 5479,
									"end": 5494,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5517,
									"end": 5521,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 5514,
									"end": 5515,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5507,
									"end": 5522,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5392,
									"end": 5532,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 5392,
									"end": 5532,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5559,
									"end": 5560,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5548,
									"end": 5561,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5548,
									"end": 5561,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5335,
									"end": 5567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5572,
									"end": 5947,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 5572,
									"end": 5947,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 18161,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e480e27bfdbd46f6cfe688fb078e98a0278137b8c54e3dbdbe37e69a2bacf43764736f6c63430008130033",
									".code": [
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "959B8C3F"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "D95B6371"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "FAD8B32A"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "FAD8B32A"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "FC673C4F"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "FE9D9303"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "D95B6371"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "959B8C3F"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "9BD9BBC6"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "556F0DC7"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "556F0DC7"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "62AD1B83"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "6E48538"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 18161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 6674,
											"end": 6804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6674,
											"end": 6804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2910,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2910,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 8253,
											"end": 8450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 8253,
											"end": 8450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2011,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2012,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2013,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2013,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 1962,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1832,
											"end": 2019,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3703,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3703,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3807,
											"end": 3819,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3703,
											"end": 3826,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3703,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3703,
											"end": 3826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3703,
											"end": 3826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2195,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3703,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2024,
											"end": 2201,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 8815,
											"end": 9591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 8815,
											"end": 9591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3432,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3350,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3432,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3350,
											"end": 3432,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3425,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2797,
											"end": 2799,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2782,
											"end": 2800,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2667,
											"end": 2851,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3642,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3547,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3547,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3547,
											"end": 3642,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 6923,
											"end": 7317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6923,
											"end": 7317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3926,
											"end": 4076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 4076,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5727,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5727,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3166,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3064,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3064,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3064,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4206,
											"end": 4370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4206,
											"end": 4370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4601,
											"end": 5040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4601,
											"end": 5040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5361,
											"end": 5660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 5361,
											"end": 5660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7964,
											"end": 8115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8091,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8099,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 8115,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 6204,
											"end": 6608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 6204,
											"end": 6608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 7438,
											"end": 7725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 7438,
											"end": 7725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5170,
											"end": 5298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5170,
											"end": 5298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6740,
											"end": 6756,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6775,
											"end": 6797,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2977,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2996,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2989,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2989,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 3008,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2910,
											"end": 3008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8407,
											"end": 8414,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8416,
											"end": 8421,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8390,
											"end": 8398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 8390,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8439,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8432,
											"end": 8443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8432,
											"end": 8443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8432,
											"end": 8443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8921,
											"end": 8925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8945,
											"end": 8968,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8945,
											"end": 8968,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7504,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7505,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7541,
											"end": 7543,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7521,
											"end": 7539,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7521,
											"end": 7539,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7521,
											"end": 7539,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7514,
											"end": 7544,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7614,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 7560,
											"end": 7578,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7560,
											"end": 7578,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7560,
											"end": 7578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7615,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7631,
											"end": 7649,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7631,
											"end": 7649,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7631,
											"end": 7649,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7658,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7675,
											"end": 7694,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7675,
											"end": 7694,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 8937,
											"end": 9009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9027,
											"end": 9047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9027,
											"end": 9047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7907,
											"end": 7909,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7889,
											"end": 7910,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7946,
											"end": 7948,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 7926,
											"end": 7944,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7926,
											"end": 7944,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7926,
											"end": 7944,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7919,
											"end": 7949,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7985,
											"end": 8019,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A207472616E736665722066726F6D20746865207A65726F2061"
										},
										{
											"begin": 7965,
											"end": 7983,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7965,
											"end": 7983,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7965,
											"end": 7983,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 8020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8029,
											"end": 8065,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 8101,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8082,
											"end": 8101,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 7705,
											"end": 8107,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 9019,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9101,
											"end": 9116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9101,
											"end": 9131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9101,
											"end": 9131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 9160,
											"end": 9167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9169,
											"end": 9175,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9186,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9194,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 9142,
											"end": 9203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 9142,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 9220,
											"end": 9227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9229,
											"end": 9235,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9237,
											"end": 9246,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9248,
											"end": 9254,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 9214,
											"end": 9263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 9214,
											"end": 9263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9312,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9320,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9329,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9347,
											"end": 9373,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9347,
											"end": 9373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9347,
											"end": 9373,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9347,
											"end": 9373,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8314,
											"end": 8316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8296,
											"end": 8317,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8353,
											"end": 8355,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 8333,
											"end": 8351,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8333,
											"end": 8351,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8333,
											"end": 8351,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8326,
											"end": 8356,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8392,
											"end": 8426,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A207472616E7366657220616D6F756E74206578636565647320"
										},
										{
											"begin": 8372,
											"end": 8390,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8372,
											"end": 8390,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8372,
											"end": 8390,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8365,
											"end": 8427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8443,
											"end": 8461,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8443,
											"end": 8461,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8443,
											"end": 8461,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8436,
											"end": 8475,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8492,
											"end": 8511,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8492,
											"end": 8511,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8112,
											"end": 8517,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 9339,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 9438,
											"end": 9444,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9446,
											"end": 9453,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 9474,
											"end": 9480,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9471,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 9455,
											"end": 9480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9480,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 9455,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 9429,
											"end": 9481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9481,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 9429,
											"end": 9481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 9512,
											"end": 9519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9521,
											"end": 9527,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9538,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9546,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9556,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9492,
											"end": 9511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9492,
											"end": 9562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 9492,
											"end": 9562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9580,
											"end": 9584,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9580,
											"end": 9584,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 8815,
											"end": 9591,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8815,
											"end": 9591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7158,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7186,
											"end": 7192,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7158,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 7158,
											"end": 7193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7158,
											"end": 7193,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7158,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 8991,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 8992,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9028,
											"end": 9030,
											"name": "PUSH",
											"source": 8,
											"value": "2C"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 9031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9067,
											"end": 9101,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F"
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9040,
											"end": 9102,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103337B9103437B63232B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9111,
											"end": 9153,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9170,
											"end": 9189,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9170,
											"end": 9189,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8787,
											"end": 9195,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7150,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7258,
											"end": 7264,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7275,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7283,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7289,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7303,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7309,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7252,
											"end": 7310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7310,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7252,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 7317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 7317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5815,
											"end": 5839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5815,
											"end": 5839,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5839,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9402,
											"end": 9404,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9384,
											"end": 9405,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9441,
											"end": 9443,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9421,
											"end": 9439,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9421,
											"end": 9439,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9421,
											"end": 9439,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9414,
											"end": 9444,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9480,
											"end": 9514,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A20617574686F72697A696E672073656C66206173206F706572"
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9453,
											"end": 9515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30BA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9531,
											"end": 9549,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9531,
											"end": 9549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9531,
											"end": 9549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9524,
											"end": 9558,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9594,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9575,
											"end": 9594,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 9200,
											"end": 9600,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5807,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5895,
											"end": 5912,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5969,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5983,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5993,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 5993,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 5993,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5938,
											"end": 5993,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 5993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 5993,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6034,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6065,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6065,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6024,
											"end": 6065,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6061,
											"end": 6065,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6024,
											"end": 6065,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6065,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5891,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 665,
											"end": 675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "PUSH",
											"source": 1,
											"value": "F4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9"
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6133,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 6140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 6140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3166,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3064,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3120,
											"end": 3133,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3152,
											"end": 3159,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3145,
											"end": 3159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3159,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3145,
											"end": 3159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3145,
											"end": 3159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4329,
											"end": 4338,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4346,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4352,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4309,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4309,
											"end": 4363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4309,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4601,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4711,
											"end": 4734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7504,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7505,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7541,
											"end": 7543,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7521,
											"end": 7539,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7521,
											"end": 7539,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7521,
											"end": 7539,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7514,
											"end": 7544,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7580,
											"end": 7614,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 7560,
											"end": 7578,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7560,
											"end": 7578,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7560,
											"end": 7578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7615,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7631,
											"end": 7649,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7631,
											"end": 7649,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7631,
											"end": 7649,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7624,
											"end": 7658,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7675,
											"end": 7694,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7675,
											"end": 7694,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 7300,
											"end": 7700,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4703,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4798,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 4842,
											"end": 4846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 4852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4863,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4871,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4824,
											"end": 4880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 4824,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4897,
											"end": 4901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 4907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4918,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4891,
											"end": 4935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4966,
											"end": 4970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 4976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4978,
											"end": 4987,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 4995,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4946,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4946,
											"end": 5011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5496,
											"end": 5507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5484,
											"end": 5507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5492,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5484,
											"end": 5507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5507,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5484,
											"end": 5604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5541,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5524,
											"end": 5551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5580,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5593,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5556,
											"end": 5603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5555,
											"end": 5603,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5653,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5484,
											"end": 5653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5630,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5643,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5620,
											"end": 5653,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5653,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5484,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5653,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5660,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5361,
											"end": 5660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6289,
											"end": 6313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6289,
											"end": 6313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6289,
											"end": 6313,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9807,
											"end": 9809,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9789,
											"end": 9810,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 9826,
											"end": 9844,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9826,
											"end": 9844,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9826,
											"end": 9844,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9819,
											"end": 9849,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 9919,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A207265766F6B696E672073656C66206173206F70657261746F"
										},
										{
											"begin": 9865,
											"end": 9883,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9865,
											"end": 9883,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9865,
											"end": 9883,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9858,
											"end": 9920,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9936,
											"end": 9954,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9936,
											"end": 9954,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9936,
											"end": 9954,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9929,
											"end": 9960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9977,
											"end": 9996,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9977,
											"end": 9996,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 9605,
											"end": 10002,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6281,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 6383,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6366,
											"end": 6393,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6433,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6447,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6409,
											"end": 6464,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6460,
											"end": 6464,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6409,
											"end": 6464,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6464,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6526,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6536,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6536,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6495,
											"end": 6536,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6536,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6362,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 665,
											"end": 675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "PUSH",
											"source": 1,
											"value": "50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1"
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6601,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 7616,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 7581,
											"end": 7617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7617,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 7581,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 8991,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 8992,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9028,
											"end": 9030,
											"name": "PUSH",
											"source": 8,
											"value": "2C"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 9031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9067,
											"end": 9101,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F"
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9047,
											"end": 9065,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9040,
											"end": 9102,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103337B9103437B63232B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9111,
											"end": 9153,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9170,
											"end": 9189,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9170,
											"end": 9189,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8787,
											"end": 9195,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 7573,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7676,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7682,
											"end": 7689,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7697,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7703,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7705,
											"end": 7717,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7676,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 7676,
											"end": 7718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7676,
											"end": 7718,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7676,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5274,
											"end": 5280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5286,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 5254,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5254,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15087,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 14752,
											"end": 15087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14845,
											"end": 14865,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14845,
											"end": 14865,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10211,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10191,
											"end": 10212,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10248,
											"end": 10250,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 10228,
											"end": 10246,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10228,
											"end": 10246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10228,
											"end": 10246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10221,
											"end": 10251,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10287,
											"end": 10321,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A20617070726F76652066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10267,
											"end": 10285,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10267,
											"end": 10285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10267,
											"end": 10285,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10260,
											"end": 10322,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10338,
											"end": 10356,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10338,
											"end": 10356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10338,
											"end": 10356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10331,
											"end": 10366,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10383,
											"end": 10402,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 10383,
											"end": 10402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10007,
											"end": 10408,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 14837,
											"end": 14907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14925,
											"end": 14946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14925,
											"end": 14946,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10615,
											"end": 10617,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10597,
											"end": 10618,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10654,
											"end": 10656,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 10634,
											"end": 10652,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10634,
											"end": 10652,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10634,
											"end": 10652,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10657,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A20617070726F766520746F20746865207A65726F2061646472"
										},
										{
											"begin": 10673,
											"end": 10691,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10673,
											"end": 10691,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10673,
											"end": 10691,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10666,
											"end": 10728,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10737,
											"end": 10770,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10787,
											"end": 10806,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 10787,
											"end": 10806,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10413,
											"end": 10812,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 14917,
											"end": 14986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15008,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15016,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15025,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15033,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2195,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2195,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15048,
											"end": 15080,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "555DDC65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11009,
											"end": 11064,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11009,
											"end": 11064,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10991,
											"end": 11065,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1417,
											"end": 1448,
											"name": "PUSH",
											"source": 1,
											"value": "29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11074,
											"end": 11108,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15781,
											"end": 15800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15781,
											"end": 15800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1210,
											"name": "PUSH",
											"source": 1,
											"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
										},
										{
											"begin": 1168,
											"end": 1210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15844,
											"name": "PUSH",
											"source": 1,
											"value": "AABBB8CA"
										},
										{
											"begin": 15803,
											"end": 15844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 15803,
											"end": 15881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 15803,
											"end": 15881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15781,
											"end": 15881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15895,
											"end": 15920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15895,
											"end": 15920,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15895,
											"end": 15920,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15891,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 15891,
											"end": 16038,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3AD5CBC1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15936,
											"end": 15975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 15975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 15975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 15975,
											"name": "PUSH",
											"source": 1,
											"value": "75AB9782"
										},
										{
											"begin": 15936,
											"end": 15975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 15984,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 15984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15992,
											"end": 15994,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 15992,
											"end": 15994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15996,
											"end": 16002,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 15996,
											"end": 16002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16004,
											"end": 16012,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 16004,
											"end": 16012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16014,
											"end": 16026,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 16014,
											"end": 16026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 15936,
											"end": 16027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15936,
											"end": 16027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15891,
											"end": 16038,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 15891,
											"end": 16038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15771,
											"end": 16044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15560,
											"end": 16044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15560,
											"end": 16044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14293,
											"end": 14312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14330,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14348,
											"end": 14369,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14348,
											"end": 14369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14348,
											"end": 14369,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14348,
											"end": 14369,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12339,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12319,
											"end": 12340,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12376,
											"end": 12378,
											"name": "PUSH",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 12356,
											"end": 12374,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12356,
											"end": 12374,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12356,
											"end": 12374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12415,
											"end": 12449,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A207472616E7366657220616D6F756E74206578636565647320"
										},
										{
											"begin": 12395,
											"end": 12413,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12395,
											"end": 12413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12395,
											"end": 12413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12388,
											"end": 12450,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12466,
											"end": 12484,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 12466,
											"end": 12484,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12466,
											"end": 12484,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12459,
											"end": 12496,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12513,
											"end": 12532,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 12513,
											"end": 12532,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 12135,
											"end": 12538,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 14340,
											"end": 14413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14441,
											"end": 14461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14455,
											"end": 14461,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14441,
											"end": 14452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14441,
											"end": 14461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 14441,
											"end": 14461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14441,
											"end": 14461,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14441,
											"end": 14461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14432,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14438,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14461,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14461,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14461,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14461,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14484,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 14488,
											"end": 14494,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14488,
											"end": 14494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14488,
											"end": 14494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14488,
											"end": 14494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 14471,
											"end": 14494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14531,
											"end": 14533,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14525,
											"end": 14529,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14515,
											"end": 14523,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "PUSH",
											"source": 1,
											"value": "6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987"
										},
										{
											"begin": 14535,
											"end": 14541,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14543,
											"end": 14551,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14553,
											"end": 14565,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 14510,
											"end": 14566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14510,
											"end": 14566,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 14596,
											"end": 14598,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14590,
											"end": 14594,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14600,
											"end": 14606,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2195,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2201,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14581,
											"end": 14607,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 14224,
											"end": 14614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14025,
											"end": 14614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14025,
											"end": 14614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "555DDC65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11009,
											"end": 11064,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11009,
											"end": 11064,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10991,
											"end": 11065,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1514,
											"end": 1548,
											"name": "PUSH",
											"source": 1,
											"value": "B281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11081,
											"end": 11099,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11074,
											"end": 11108,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16990,
											"end": 17009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16990,
											"end": 17009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1210,
											"name": "PUSH",
											"source": 1,
											"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
										},
										{
											"begin": 1168,
											"end": 1210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17053,
											"name": "PUSH",
											"source": 1,
											"value": "AABBB8CA"
										},
										{
											"begin": 17012,
											"end": 17053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 17012,
											"end": 17091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 17012,
											"end": 17091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16990,
											"end": 17091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17105,
											"end": 17130,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17101,
											"end": 17415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 17101,
											"end": 17415,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23DE29"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17146,
											"end": 17190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17190,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17190,
											"name": "PUSH",
											"source": 1,
											"value": "23DE29"
										},
										{
											"begin": 17146,
											"end": 17190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17191,
											"end": 17199,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 17191,
											"end": 17199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17201,
											"end": 17205,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 17201,
											"end": 17205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17207,
											"end": 17209,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 17207,
											"end": 17209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17211,
											"end": 17217,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 17211,
											"end": 17217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17219,
											"end": 17227,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 17219,
											"end": 17227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17229,
											"end": 17241,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 17229,
											"end": 17241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 17146,
											"end": 17242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17146,
											"end": 17242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17101,
											"end": 17415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 17101,
											"end": 17415,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17101,
											"end": 17415,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 17101,
											"end": 17415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17263,
											"end": 17282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17259,
											"end": 17415,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17259,
											"end": 17415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 17259,
											"end": 17415,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17307,
											"end": 17320,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17307,
											"end": 17320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13330,
											"end": 13332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13312,
											"end": 13333,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13369,
											"end": 13371,
											"name": "PUSH",
											"source": 8,
											"value": "4D"
										},
										{
											"begin": 13349,
											"end": 13367,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13349,
											"end": 13367,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13349,
											"end": 13367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13342,
											"end": 13372,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13408,
											"end": 13442,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374"
										},
										{
											"begin": 13388,
											"end": 13406,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 13388,
											"end": 13406,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13388,
											"end": 13406,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13381,
											"end": 13443,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13479,
											"end": 13513,
											"name": "PUSH",
											"source": 8,
											"value": "20686173206E6F20696D706C656D656E74657220666F7220455243373737546F"
										},
										{
											"begin": 13459,
											"end": 13477,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 13459,
											"end": 13477,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13459,
											"end": 13477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13452,
											"end": 13514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13551,
											"end": 13566,
											"name": "PUSH",
											"source": 8,
											"value": "6B656E73526563697069656E7400000000000000000000000000000000000000"
										},
										{
											"begin": 13530,
											"end": 13549,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 13530,
											"end": 13549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13530,
											"end": 13549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13523,
											"end": 13567,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13584,
											"end": 13603,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 13584,
											"end": 13603,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 13128,
											"end": 13609,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 17298,
											"end": 17404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16980,
											"end": 17421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16733,
											"end": 17421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16733,
											"end": 17421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12247,
											"end": 12917,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 12247,
											"end": 12917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12489,
											"end": 12507,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13816,
											"end": 13818,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13798,
											"end": 13819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13855,
											"end": 13857,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 13835,
											"end": 13853,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13835,
											"end": 13853,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13835,
											"end": 13853,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13828,
											"end": 13858,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13894,
											"end": 13928,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A2073656E642066726F6D20746865207A65726F206164647265"
										},
										{
											"begin": 13874,
											"end": 13892,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 13874,
											"end": 13892,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13874,
											"end": 13892,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13867,
											"end": 13929,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13938,
											"end": 13970,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13987,
											"end": 14006,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 13987,
											"end": 14006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 13614,
											"end": 14012,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 12481,
											"end": 12546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12564,
											"end": 12580,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14219,
											"end": 14221,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14201,
											"end": 14222,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14201,
											"end": 14222,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14201,
											"end": 14222,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14238,
											"end": 14256,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14238,
											"end": 14256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14238,
											"end": 14256,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14231,
											"end": 14261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14297,
											"end": 14331,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A2073656E6420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14270,
											"end": 14332,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14349,
											"end": 14367,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 14349,
											"end": 14367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 14017,
											"end": 14373,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 12556,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 12670,
											"end": 12739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12698,
											"end": 12702,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12704,
											"end": 12706,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12708,
											"end": 12714,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12716,
											"end": 12724,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12738,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12670,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 12670,
											"end": 12739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12670,
											"end": 12739,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 12670,
											"end": 12739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 12756,
											"end": 12764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12766,
											"end": 12770,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12772,
											"end": 12774,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12776,
											"end": 12782,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12784,
											"end": 12792,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12794,
											"end": 12806,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 12750,
											"end": 12807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12807,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 12750,
											"end": 12807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12818,
											"end": 12910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 12838,
											"end": 12846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12852,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12854,
											"end": 12856,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12858,
											"end": 12864,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12866,
											"end": 12874,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12876,
											"end": 12888,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12890,
											"end": 12909,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12818,
											"end": 12837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 12818,
											"end": 12910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13222,
											"end": 14019,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 13222,
											"end": 14019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13406,
											"end": 13424,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13406,
											"end": 13424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14580,
											"end": 14582,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14562,
											"end": 14583,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14619,
											"end": 14621,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 14599,
											"end": 14617,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14599,
											"end": 14617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14599,
											"end": 14617,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14592,
											"end": 14622,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14658,
											"end": 14692,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A206275726E2066726F6D20746865207A65726F206164647265"
										},
										{
											"begin": 14638,
											"end": 14656,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 14638,
											"end": 14656,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14638,
											"end": 14656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14631,
											"end": 14693,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14709,
											"end": 14727,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 14709,
											"end": 14727,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14709,
											"end": 14727,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14702,
											"end": 14734,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14751,
											"end": 14770,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 14751,
											"end": 14770,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 14378,
											"end": 14776,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 13398,
											"end": 13463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 13516,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13544,
											"end": 13548,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13562,
											"end": 13568,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13570,
											"end": 13574,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13576,
											"end": 13588,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13516,
											"end": 13533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 13516,
											"end": 13589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13516,
											"end": 13589,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 13516,
											"end": 13589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13701,
											"end": 13720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13723,
											"end": 13738,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13756,
											"end": 13777,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13756,
											"end": 13777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13756,
											"end": 13777,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13756,
											"end": 13777,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14983,
											"end": 14985,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14965,
											"end": 14986,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15022,
											"end": 15024,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 15002,
											"end": 15020,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 15002,
											"end": 15020,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15002,
											"end": 15020,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14995,
											"end": 15025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15061,
											"end": 15095,
											"name": "PUSH",
											"source": 8,
											"value": "4552433737373A206275726E20616D6F756E7420657863656564732062616C61"
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15034,
											"end": 15096,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15112,
											"end": 15130,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 15112,
											"end": 15130,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15112,
											"end": 15130,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15105,
											"end": 15138,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15155,
											"end": 15174,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 15155,
											"end": 15174,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 14781,
											"end": 15180,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 13748,
											"end": 13817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13845,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 13859,
											"end": 13865,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13845,
											"end": 13856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13845,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 13845,
											"end": 13865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13845,
											"end": 13865,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 13845,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13865,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 13887,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13891,
											"end": 13897,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13891,
											"end": 13897,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13891,
											"end": 13897,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13891,
											"end": 13897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 13875,
											"end": 13897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 13897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13930,
											"end": 13934,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13920,
											"end": 13928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "PUSH",
											"source": 1,
											"value": "A78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098"
										},
										{
											"begin": 13936,
											"end": 13942,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13948,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13950,
											"end": 13962,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 13913,
											"end": 13963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13963,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2170,
											"end": 2195,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2195,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14001,
											"end": 14002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13978,
											"end": 14012,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13388,
											"end": 14019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13388,
											"end": 14019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13222,
											"end": 14019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13222,
											"end": 14019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13222,
											"end": 14019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13222,
											"end": 14019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13222,
											"end": 14019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 14,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 185,
											"end": 187,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 237,
											"end": 258,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 237,
											"end": 258,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 237,
											"end": 258,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 307,
											"end": 320,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 307,
											"end": 320,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 210,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 210,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 210,
											"end": 228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 329,
											"end": 351,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 329,
											"end": 351,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 329,
											"end": 351,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 156,
											"end": 160,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 160,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 185,
											"end": 187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 408,
											"end": 423,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 408,
											"end": 423,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 408,
											"end": 423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 408,
											"end": 423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 382,
											"end": 384,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 385,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 367,
											"end": 385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 367,
											"end": 385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 156,
											"end": 160,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 451,
											"end": 669,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 451,
											"end": 669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 465,
											"end": 471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 462,
											"end": 463,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 459,
											"end": 472,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 451,
											"end": 669,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 451,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 451,
											"end": 669,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 530,
											"end": 543,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 530,
											"end": 543,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 526,
											"end": 588,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 514,
											"end": 589,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 514,
											"end": 589,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 644,
											"end": 659,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 644,
											"end": 659,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 644,
											"end": 659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 644,
											"end": 659,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 609,
											"end": 621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 609,
											"end": 621,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 609,
											"end": 621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 609,
											"end": 621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 480,
											"end": 489,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 451,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 451,
											"end": 669,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 451,
											"end": 669,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 451,
											"end": 669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 686,
											"end": 689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 686,
											"end": 689,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 14,
											"end": 695,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 700,
											"end": 1123,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 700,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 742,
											"end": 745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 785,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 774,
											"end": 786,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 807,
											"end": 813,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 802,
											"end": 805,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 795,
											"end": 814,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 832,
											"end": 833,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 1004,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 842,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 856,
											"end": 862,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 853,
											"end": 854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 850,
											"end": 863,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 842,
											"end": 1004,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 842,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 842,
											"end": 1004,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 918,
											"end": 922,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 974,
											"end": 987,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 974,
											"end": 987,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 970,
											"end": 992,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 964,
											"end": 993,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 946,
											"end": 957,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 946,
											"end": 957,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 946,
											"end": 957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 942,
											"end": 962,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 942,
											"end": 962,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 935,
											"end": 994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 871,
											"end": 883,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 842,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 842,
											"end": 1004,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 842,
											"end": 1004,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 842,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 846,
											"end": 849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1049,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1046,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1039,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1028,
											"end": 1031,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1024,
											"end": 1040,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1020,
											"end": 1047,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1013,
											"end": 1051,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1105,
											"end": 1107,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1101,
											"end": 1108,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1096,
											"end": 1098,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1099,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1080,
											"end": 1109,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1075,
											"end": 1078,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1071,
											"end": 1110,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1067,
											"end": 1117,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1117,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 700,
											"end": 1123,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 700,
											"end": 1123,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 700,
											"end": 1123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 700,
											"end": 1123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 700,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1128,
											"end": 1348,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1128,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1277,
											"end": 1279,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1275,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1244,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 1338,
											"end": 1340,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1327,
											"end": 1336,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1341,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1297,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1297,
											"end": 1342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1507,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1353,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 1437,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1428,
											"end": 1482,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1418,
											"end": 1483,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 1408,
											"end": 1501,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1495,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1499,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1501,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 1408,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1512,
											"end": 1827,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1512,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1594,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1641,
											"end": 1643,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1638,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1627,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1616,
											"end": 1639,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1644,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1609,
											"end": 1661,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1609,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 1609,
											"end": 1661,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1658,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1647,
											"end": 1659,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1609,
											"end": 1661,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 1609,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1705,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1706,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 1740,
											"end": 1745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1715,
											"end": 1746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1746,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 1715,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1765,
											"end": 1770,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1817,
											"end": 1819,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1820,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1820,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1820,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1820,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 1821,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 1821,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 1827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2662,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2206,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2283,
											"end": 2289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2354,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2340,
											"end": 2349,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2338,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2320,
											"end": 2372,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2320,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 2320,
											"end": 2372,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2366,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2370,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2320,
											"end": 2372,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 2320,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2416,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2417,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 2451,
											"end": 2456,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2426,
											"end": 2457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2457,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 2426,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2481,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2533,
											"end": 2535,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2518,
											"end": 2536,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 2536,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2505,
											"end": 2537,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2546,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 2505,
											"end": 2537,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2546,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2546,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2546,
											"end": 2579,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 2546,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2662,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2662,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2652,
											"end": 2654,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 2655,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2655,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 2656,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 2656,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2206,
											"end": 2662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2856,
											"end": 2983,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2856,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2927,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2912,
											"end": 2915,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2908,
											"end": 2928,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2905,
											"end": 2906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2929,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2948,
											"end": 2952,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2938,
											"end": 2953,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2969,
											"end": 2970,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2977,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2988,
											"end": 3706,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2988,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3086,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3076,
											"end": 3080,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3068,
											"end": 3074,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3064,
											"end": 3081,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3060,
											"end": 3087,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 3050,
											"end": 3105,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3102,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3099,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3103,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3105,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 3050,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3137,
											"end": 3143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3144,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3181,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3200,
											"end": 3202,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3193,
											"end": 3203,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3190,
											"end": 3226,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3190,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 3190,
											"end": 3226,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 3206,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 3206,
											"end": 3224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3224,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 3206,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3281,
											"end": 3283,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3275,
											"end": 3284,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3251,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3335,
											"end": 3348,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3335,
											"end": 3348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3331,
											"end": 3353,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3331,
											"end": 3353,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3331,
											"end": 3353,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 3327,
											"end": 3358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3323,
											"end": 3363,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3311,
											"end": 3364,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3311,
											"end": 3364,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3311,
											"end": 3364,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3397,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3397,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3397,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3421,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3421,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3376,
											"end": 3422,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3373,
											"end": 3445,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3373,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 3373,
											"end": 3445,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3425,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 3425,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 3425,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3425,
											"end": 3443,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 3425,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3475,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3463,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3454,
											"end": 3476,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3500,
											"end": 3502,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3498,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3549,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3543,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3534,
											"end": 3536,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3526,
											"end": 3532,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3537,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3518,
											"end": 3544,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3550,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3512,
											"end": 3567,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3512,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 3512,
											"end": 3567,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3563,
											"end": 3564,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3560,
											"end": 3561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3553,
											"end": 3565,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3512,
											"end": 3567,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 3512,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3629,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3620,
											"end": 3624,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3618,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3608,
											"end": 3625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3605,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3593,
											"end": 3599,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3589,
											"end": 3606,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3576,
											"end": 3630,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 3674,
											"end": 3675,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3671,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3654,
											"end": 3660,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3665,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3646,
											"end": 3672,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 3676,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3694,
											"end": 3700,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2988,
											"end": 3706,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2988,
											"end": 3706,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2988,
											"end": 3706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2988,
											"end": 3706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2988,
											"end": 3706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 4596,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 3711,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3832,
											"end": 3838,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3840,
											"end": 3846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3848,
											"end": 3854,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3856,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 3912,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 3897,
											"end": 3906,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3888,
											"end": 3895,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3884,
											"end": 3907,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3880,
											"end": 3913,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3930,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 3877,
											"end": 3930,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 3928,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3877,
											"end": 3930,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 3877,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3965,
											"end": 3974,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3952,
											"end": 3975,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 4009,
											"end": 4014,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 3984,
											"end": 4015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4015,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 3984,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4039,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4093,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4063,
											"end": 4095,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4104,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 4063,
											"end": 4095,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4104,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 4104,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4104,
											"end": 4137,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 4104,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4156,
											"end": 4163,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4210,
											"end": 4212,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4182,
											"end": 4214,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4182,
											"end": 4214,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4269,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4318,
											"end": 4332,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4349,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 4315,
											"end": 4349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4345,
											"end": 4346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4343,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4335,
											"end": 4347,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4315,
											"end": 4349,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 4315,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 4409,
											"end": 4416,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4400,
											"end": 4406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4389,
											"end": 4398,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 4368,
											"end": 4417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4417,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 4368,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4358,
											"end": 4417,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4358,
											"end": 4417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4470,
											"end": 4473,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4459,
											"end": 4468,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4455,
											"end": 4474,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4442,
											"end": 4475,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 4475,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 4475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4502,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4490,
											"end": 4498,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4517,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 4514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4506,
											"end": 4518,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 4582,
											"end": 4589,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4571,
											"end": 4579,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4560,
											"end": 4569,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4556,
											"end": 4580,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 4539,
											"end": 4590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4590,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 4539,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4529,
											"end": 4590,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4529,
											"end": 4590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4529,
											"end": 4590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 4596,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 4596,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 4596,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 4596,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 4596,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 4596,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 4596,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 4596,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 4596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4848,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4601,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4660,
											"end": 4666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4715,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4701,
											"end": 4710,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4692,
											"end": 4699,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4711,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4684,
											"end": 4716,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4681,
											"end": 4733,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4681,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 4681,
											"end": 4733,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4729,
											"end": 4730,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4727,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4719,
											"end": 4731,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4681,
											"end": 4733,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 4681,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4768,
											"end": 4777,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4755,
											"end": 4778,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4787,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 4812,
											"end": 4817,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4787,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 4787,
											"end": 4818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5376,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 4853,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4953,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4996,
											"end": 5005,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 4994,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 5006,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4979,
											"end": 5011,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4976,
											"end": 5028,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4976,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 4976,
											"end": 5028,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5024,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5022,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5014,
											"end": 5026,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4976,
											"end": 5028,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 4976,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5063,
											"end": 5072,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5050,
											"end": 5073,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5082,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 5107,
											"end": 5112,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5082,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 5082,
											"end": 5113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5082,
											"end": 5113,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 5082,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5132,
											"end": 5137,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5184,
											"end": 5186,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5169,
											"end": 5187,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5169,
											"end": 5187,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5188,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5188,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5211,
											"end": 5243,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5266,
											"end": 5284,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5255,
											"end": 5285,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5255,
											"end": 5285,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5252,
											"end": 5302,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5252,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 5252,
											"end": 5302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5298,
											"end": 5299,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5296,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5288,
											"end": 5300,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5252,
											"end": 5302,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 5252,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 5362,
											"end": 5369,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5351,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5338,
											"end": 5360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 5321,
											"end": 5370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5370,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 5321,
											"end": 5370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5370,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5370,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5311,
											"end": 5370,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5376,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5376,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5376,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5376,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5376,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 5769,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 5381,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5463,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5510,
											"end": 5512,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5507,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5496,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5485,
											"end": 5508,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5513,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5530,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5478,
											"end": 5530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5516,
											"end": 5528,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5530,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5478,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5565,
											"end": 5574,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5552,
											"end": 5575,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 5609,
											"end": 5614,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 5584,
											"end": 5615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5615,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 5584,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5639,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5691,
											"end": 5693,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5663,
											"end": 5695,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5704,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 5663,
											"end": 5695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5704,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 5704,
											"end": 5737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5704,
											"end": 5737,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 5704,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5756,
											"end": 5763,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5746,
											"end": 5763,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5746,
											"end": 5763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5746,
											"end": 5763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 5769,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 5769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 5769,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 5769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 5769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 5769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 6517,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 5774,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5878,
											"end": 5884,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5886,
											"end": 5892,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 5900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5902,
											"end": 5908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5955,
											"end": 5958,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5934,
											"end": 5941,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5926,
											"end": 5959,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5923,
											"end": 5976,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5923,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 5923,
											"end": 5976,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5972,
											"end": 5973,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5969,
											"end": 5970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5962,
											"end": 5974,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5923,
											"end": 5976,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 5923,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6011,
											"end": 6020,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6021,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6030,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 6055,
											"end": 6060,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6030,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 6030,
											"end": 6061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6030,
											"end": 6061,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 6030,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6080,
											"end": 6085,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6132,
											"end": 6134,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6117,
											"end": 6135,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6104,
											"end": 6136,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6104,
											"end": 6136,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6187,
											"end": 6189,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6172,
											"end": 6190,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6191,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6210,
											"end": 6228,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6240,
											"end": 6254,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6254,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6254,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6237,
											"end": 6271,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6237,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 6237,
											"end": 6271,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6267,
											"end": 6268,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6264,
											"end": 6265,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6257,
											"end": 6269,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6237,
											"end": 6271,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 6237,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6290,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 6331,
											"end": 6338,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6322,
											"end": 6328,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6307,
											"end": 6329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6290,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 6290,
											"end": 6339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6290,
											"end": 6339,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 6290,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6280,
											"end": 6339,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6280,
											"end": 6339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6381,
											"end": 6390,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6395,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6396,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6348,
											"end": 6396,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6348,
											"end": 6396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6421,
											"end": 6423,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6419,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6408,
											"end": 6424,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6441,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 6405,
											"end": 6441,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6434,
											"end": 6435,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6427,
											"end": 6439,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6441,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 6405,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 6503,
											"end": 6510,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6492,
											"end": 6500,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6481,
											"end": 6490,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6501,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 6460,
											"end": 6511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6460,
											"end": 6511,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 6460,
											"end": 6511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6450,
											"end": 6511,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6450,
											"end": 6511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6450,
											"end": 6511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 6517,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 6517,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 6517,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 6517,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 6517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 6517,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 6517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 6517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6910,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6522,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6605,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6607,
											"end": 6613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6662,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6639,
											"end": 6646,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6658,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6631,
											"end": 6663,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6680,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 6628,
											"end": 6680,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6676,
											"end": 6677,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6673,
											"end": 6674,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6678,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6680,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 6628,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6712,
											"end": 6721,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6699,
											"end": 6722,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6722,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6773,
											"end": 6775,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6762,
											"end": 6771,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6758,
											"end": 6776,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6777,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6800,
											"end": 6818,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6792,
											"end": 6798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6789,
											"end": 6819,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6786,
											"end": 6836,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6786,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 6786,
											"end": 6836,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6832,
											"end": 6833,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6829,
											"end": 6830,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6822,
											"end": 6834,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6786,
											"end": 6836,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 6786,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6855,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 6896,
											"end": 6903,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6887,
											"end": 6893,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6876,
											"end": 6885,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6872,
											"end": 6894,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6855,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 6855,
											"end": 6904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6855,
											"end": 6904,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 6855,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6845,
											"end": 6904,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6845,
											"end": 6904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6845,
											"end": 6904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6910,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6910,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6910,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6910,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6910,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 7295,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 6915,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6994,
											"end": 6995,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6990,
											"end": 7002,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7002,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7002,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7037,
											"end": 7049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7037,
											"end": 7049,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7037,
											"end": 7049,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7058,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 7058,
											"end": 7119,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7112,
											"end": 7116,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 7104,
											"end": 7110,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7117,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7117,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7058,
											"end": 7119,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 7058,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7167,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7157,
											"end": 7163,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7154,
											"end": 7168,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7134,
											"end": 7152,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7169,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 7128,
											"end": 7289,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7211,
											"end": 7221,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 7206,
											"end": 7209,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7202,
											"end": 7222,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7199,
											"end": 7200,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7192,
											"end": 7223,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7246,
											"end": 7250,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 7243,
											"end": 7244,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7236,
											"end": 7251,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7274,
											"end": 7278,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7271,
											"end": 7272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7264,
											"end": 7279,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7289,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 7128,
											"end": 7289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 7295,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 7295,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 7295,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6915,
											"end": 7295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8522,
											"end": 8649,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 8522,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8583,
											"end": 8593,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 8578,
											"end": 8581,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8574,
											"end": 8594,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 8571,
											"end": 8572,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8564,
											"end": 8595,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8614,
											"end": 8618,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8611,
											"end": 8612,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8604,
											"end": 8619,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8638,
											"end": 8642,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8635,
											"end": 8636,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8628,
											"end": 8643,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8654,
											"end": 8782,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 8654,
											"end": 8782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8721,
											"end": 8730,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8721,
											"end": 8730,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8721,
											"end": 8730,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8742,
											"end": 8753,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8742,
											"end": 8753,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8742,
											"end": 8753,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8776,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 8739,
											"end": 8776,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 8756,
											"end": 8774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11119,
											"end": 11370,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 11119,
											"end": 11370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11189,
											"end": 11195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11242,
											"end": 11244,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11230,
											"end": 11239,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11221,
											"end": 11228,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11217,
											"end": 11240,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11213,
											"end": 11245,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 11210,
											"end": 11262,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11210,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 11210,
											"end": 11262,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11258,
											"end": 11259,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11255,
											"end": 11256,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11248,
											"end": 11260,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11210,
											"end": 11262,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 11210,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11290,
											"end": 11299,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11284,
											"end": 11300,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11309,
											"end": 11340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 11334,
											"end": 11339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11309,
											"end": 11340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 11309,
											"end": 11340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11375,
											"end": 12130,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 11375,
											"end": 12130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11643,
											"end": 11647,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11753,
											"end": 11755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11745,
											"end": 11751,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 11741,
											"end": 11756,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11730,
											"end": 11739,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11723,
											"end": 11757,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11805,
											"end": 11807,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11797,
											"end": 11803,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 11793,
											"end": 11808,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11788,
											"end": 11790,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11777,
											"end": 11786,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11773,
											"end": 11791,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11766,
											"end": 11809,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11857,
											"end": 11859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11849,
											"end": 11855,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 11845,
											"end": 11860,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11840,
											"end": 11842,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11829,
											"end": 11838,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11825,
											"end": 11843,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11818,
											"end": 11861,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11818,
											"end": 11861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11897,
											"end": 11903,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11892,
											"end": 11894,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11881,
											"end": 11890,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11877,
											"end": 11895,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11870,
											"end": 11904,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11941,
											"end": 11944,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 11935,
											"end": 11938,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11924,
											"end": 11933,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11920,
											"end": 11939,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11913,
											"end": 11945,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11968,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 12009,
											"end": 12012,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 11998,
											"end": 12007,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11994,
											"end": 12013,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11986,
											"end": 11992,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11968,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 11968,
											"end": 12014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11968,
											"end": 12014,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 11968,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12063,
											"end": 12072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12055,
											"end": 12061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12051,
											"end": 12073,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12045,
											"end": 12048,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 12034,
											"end": 12043,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12030,
											"end": 12049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12023,
											"end": 12074,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12091,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 12117,
											"end": 12123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12109,
											"end": 12115,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12091,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 12091,
											"end": 12124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12091,
											"end": 12124,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 12091,
											"end": 12124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12083,
											"end": 12124,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 11375,
											"end": 12130,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11375,
											"end": 12130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12543,
											"end": 12668,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 12543,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12608,
											"end": 12617,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12608,
											"end": 12617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12608,
											"end": 12617,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12629,
											"end": 12639,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12629,
											"end": 12639,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12629,
											"end": 12639,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12626,
											"end": 12662,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12626,
											"end": 12662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 12626,
											"end": 12662,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12642,
											"end": 12660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 12642,
											"end": 12660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 12642,
											"end": 12660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12673,
											"end": 13123,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 12673,
											"end": 13123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12894,
											"end": 12900,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12883,
											"end": 12892,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12876,
											"end": 12901,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12937,
											"end": 12939,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 12932,
											"end": 12934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12921,
											"end": 12930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12917,
											"end": 12935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12910,
											"end": 12940,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12857,
											"end": 12861,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12963,
											"end": 13008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 13004,
											"end": 13006,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 12993,
											"end": 13002,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12989,
											"end": 13007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12981,
											"end": 12987,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12963,
											"end": 13008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 12963,
											"end": 13008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12963,
											"end": 13008,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 12963,
											"end": 13008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13056,
											"end": 13065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13048,
											"end": 13054,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13044,
											"end": 13066,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13039,
											"end": 13041,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13028,
											"end": 13037,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13024,
											"end": 13042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13017,
											"end": 13067,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13084,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 13110,
											"end": 13116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13102,
											"end": 13108,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13084,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 13084,
											"end": 13117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13084,
											"end": 13117,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 13084,
											"end": 13117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13076,
											"end": 13117,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 12673,
											"end": 13123,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12673,
											"end": 13123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"authorizeOperator(address)": "959b8c3f",
							"balanceOf(address)": "70a08231",
							"burn(uint256,bytes)": "fe9d9303",
							"decimals()": "313ce567",
							"defaultOperators()": "06e48538",
							"granularity()": "556f0dc7",
							"isOperatorFor(address,address)": "d95b6371",
							"name()": "06fdde03",
							"operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
							"operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
							"revokeOperator(address)": "fad8b32a",
							"send(address,uint256,bytes)": "9bd9bbc6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultOperators_\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC777} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. Support for ERC20 is included in this contract, as specified by the EIP: both the ERC777 and ERC20 interfaces can be safely used when interacting with it. Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token movements. Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there are no special restrictions in the amount of tokens that created, moved, or destroyed. This makes integration with ERC20 applications seamless.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Note that accounts cannot have allowance issued by their operators.\"},\"authorizeOperator(address)\":{\"details\":\"See {IERC777-authorizeOperator}.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`tokenHolder`).\"},\"burn(uint256,bytes)\":{\"details\":\"See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility.\"},\"constructor\":{\"details\":\"`defaultOperators` may be an empty array.\"},\"decimals()\":{\"details\":\"See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\"},\"defaultOperators()\":{\"details\":\"See {IERC777-defaultOperators}.\"},\"granularity()\":{\"details\":\"See {IERC777-granularity}. This implementation always returns `1`.\"},\"isOperatorFor(address,address)\":{\"details\":\"See {IERC777-isOperatorFor}.\"},\"name()\":{\"details\":\"See {IERC777-name}.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events.\"},\"revokeOperator(address)\":{\"details\":\"See {IERC777-revokeOperator}.\"},\"send(address,uint256,bytes)\":{\"details\":\"See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility.\"},\"symbol()\":{\"details\":\"See {IERC777-symbol}.\"},\"totalSupply()\":{\"details\":\"See {IERC777-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":\"ERC777\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":600},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":{\"keccak256\":\"0x980233ba96c42246563843d9310b79622f25f35dcde217bfec2305e90bb42c31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://401408feace106381f3ff1f9bcf508d253aeaeb50a457f1ab6d2ff33e48e0c7d\",\"dweb:/ipfs/QmaJYp98aGGyHRm3au42YHKH1pXTtu5UnSp6kmGB6aDfsi\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x180af7df8832ffcba53dae0c5450b062d2c571a8eaec22619fcaef5758503d7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6232d44d9a11c9764c655bb481213a0a92afd27f6b5a1083343d512f04063735\",\"dweb:/ipfs/QmSfSAzCgcMMaXVc7EnoC98opUjizqx6svmJNotiBWaGbc\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x0fd59f83d16f090c27a8105db0f4ad05b0f5d127f9878b82ebf0ad2bbc4e3f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0f20fa38853a7b046933b0c905b6e021b081712032ee395c3ecca01998047ff\",\"dweb:/ipfs/QmRDRgthGgc9XTfQKKN29KZF8BYanfcE5XP9cvAdh1E146\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x54230ad917ef5075db47e57ac43655f1197ac913686d5ced13062c2da0cce857\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e198d3b0abb92a8ac98583349c07a653714a581dbd587f17ea7bff17b460e09\",\"dweb:/ipfs/QmR1TtTSFZkTAH6QdXj4eFCtfMnThmBKhroDqsWtzU65SJ\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xd2df74f95cc1d14b07a93d913993cf17285ee037e9bd1cac4ac4d38b846eaeda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://836120f9dad7d6bfeebe0d80541ad8753286e132f80f134af618901eb98ecc89\",\"dweb:/ipfs/QmVWRvvX2kW8Des3SfB23UwYsiDrMd4aYRpwsjyu7FSVjA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 106,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 108,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 110,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 112,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 125,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_defaultOperatorsArray",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 129,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_defaultOperators",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 135,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_operators",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 141,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_revokedDefaultOperators",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 147,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol:ERC777",
								"label": "_allowances",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
				"IERC777": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "AuthorizedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "RevokedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Sent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "authorizeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultOperators",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "granularity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "isOperatorFor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.",
						"kind": "dev",
						"methods": {
							"authorizeOperator(address)": {
								"details": "Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by an account (`owner`)."
							},
							"burn(uint256,bytes)": {
								"details": "Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens."
							},
							"defaultOperators()": {
								"details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
							},
							"granularity()": {
								"details": "Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1."
							},
							"isOperatorFor(address,address)": {
								"details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"operatorBurn(address,uint256,bytes,bytes)": {
								"details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`."
							},
							"operatorSend(address,address,uint256,bytes,bytes)": {
								"details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"revokeOperator(address)": {
								"details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"send(address,uint256,bytes)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"authorizeOperator(address)": "959b8c3f",
							"balanceOf(address)": "70a08231",
							"burn(uint256,bytes)": "fe9d9303",
							"defaultOperators()": "06e48538",
							"granularity()": "556f0dc7",
							"isOperatorFor(address,address)": "d95b6371",
							"name()": "06fdde03",
							"operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
							"operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
							"revokeOperator(address)": "fad8b32a",
							"send(address,uint256,bytes)": "9bd9bbc6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"granularity()\":{\"details\":\"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1.\"},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":\"IERC777\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":600},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x180af7df8832ffcba53dae0c5450b062d2c571a8eaec22619fcaef5758503d7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6232d44d9a11c9764c655bb481213a0a92afd27f6b5a1083343d512f04063735\",\"dweb:/ipfs/QmSfSAzCgcMMaXVc7EnoC98opUjizqx6svmJNotiBWaGbc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
				"IERC777Recipient": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensReceived",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.",
						"kind": "dev",
						"methods": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":\"IERC777Recipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":600},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x0fd59f83d16f090c27a8105db0f4ad05b0f5d127f9878b82ebf0ad2bbc4e3f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0f20fa38853a7b046933b0c905b6e021b081712032ee395c3ecca01998047ff\",\"dweb:/ipfs/QmRDRgthGgc9XTfQKKN29KZF8BYanfcE5XP9cvAdh1E146\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
				"IERC777Sender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensToSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777TokensSender standard as defined in the EIP. {IERC777} Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be  their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.",
						"kind": "dev",
						"methods": {
							"tokensToSend(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensToSend(address,address,address,uint256,bytes,bytes)": "75ab9782"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensToSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensSender standard as defined in the EIP. {IERC777} Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be  their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensToSend(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol\":\"IERC777Sender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":600},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x54230ad917ef5075db47e57ac43655f1197ac913686d5ced13062c2da0cce857\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e198d3b0abb92a8ac98583349c07a653714a581dbd587f17ea7bff17b460e09\",\"dweb:/ipfs/QmR1TtTSFZkTAH6QdXj4eFCtfMnThmBKhroDqsWtzU65SJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":126:7810  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":126:7810  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122063b2fccd6ed5e71931dc9481f0ddc6684be0e7596fbaa7ca5b14cfa2ef4874ba64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122063b2fccd6ed5e71931dc9481f0ddc6684be0e7596fbaa7ca5b14cfa2ef4874ba64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xB2FCCD6E 0xD5 0xE7 NOT BALANCE 0xDC SWAP5 DUP2 CREATE 0xDD 0xC6 PUSH9 0x4BE0E7596FBAA7CA5B EQ 0xCF LOG2 0xEF BASEFEE PUSH21 0xBA64736F6C63430008130033000000000000000000 ",
							"sourceMap": "126:7684:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:7684:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122063b2fccd6ed5e71931dc9481f0ddc6684be0e7596fbaa7ca5b14cfa2ef4874ba64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0xB2FCCD6E 0xD5 0xE7 NOT BALANCE 0xDC SWAP5 DUP2 CREATE 0xDD 0xC6 PUSH9 0x4BE0E7596FBAA7CA5B EQ 0xCF LOG2 0xEF BASEFEE PUSH21 0xBA64736F6C63430008130033000000000000000000 ",
							"sourceMap": "126:7684:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122063b2fccd6ed5e71931dc9481f0ddc6684be0e7596fbaa7ca5b14cfa2ef4874ba64736f6c63430008130033",
									".code": [
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":600},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":600},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
				"IERC1820Registry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "interfaceHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "InterfaceImplementerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "ManagerChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_interfaceHash",
									"type": "bytes32"
								}
							],
							"name": "getInterfaceImplementer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "implementsERC165Interface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "implementsERC165InterfaceNoCache",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "interfaceName",
									"type": "string"
								}
							],
							"name": "interfaceHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_interfaceHash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "setInterfaceImplementer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "setManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "updateERC165Cache",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.",
						"kind": "dev",
						"methods": {
							"getInterfaceImplementer(address,bytes32)": {
								"details": "Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address."
							},
							"getManager(address)": {
								"details": "Returns the manager for `account`. See {setManager}."
							},
							"implementsERC165Interface(address,bytes4)": {
								"params": {
									"account": "Address of the contract to check.",
									"interfaceId": "ERC165 interface to check."
								},
								"returns": {
									"_0": "True if `account` implements `interfaceId`, false otherwise."
								}
							},
							"implementsERC165InterfaceNoCache(address,bytes4)": {
								"params": {
									"account": "Address of the contract to check.",
									"interfaceId": "ERC165 interface to check."
								},
								"returns": {
									"_0": "True if `account` implements `interfaceId`, false otherwise."
								}
							},
							"interfaceHash(string)": {
								"details": "Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
							},
							"setInterfaceImplementer(address,bytes32,address)": {
								"details": "Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}."
							},
							"setManager(address,address)": {
								"details": "Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`."
							},
							"updateERC165Cache(address,bytes4)": {
								"params": {
									"account": "Address of the contract for which to update the cache.",
									"interfaceId": "ERC165 interface for which to update the cache."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getInterfaceImplementer(address,bytes32)": "aabbb8ca",
							"getManager(address)": "3d584063",
							"implementsERC165Interface(address,bytes4)": "f712f3e8",
							"implementsERC165InterfaceNoCache(address,bytes4)": "b7056765",
							"interfaceHash(string)": "65ba36c1",
							"setInterfaceImplementer(address,bytes32,address)": "29965a1d",
							"setManager(address,address)": "5df8122f",
							"updateERC165Cache(address,bytes4)": "a41e7d51"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.\",\"kind\":\"dev\",\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"details\":\"Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address.\"},\"getManager(address)\":{\"details\":\"Returns the manager for `account`. See {setManager}.\"},\"implementsERC165Interface(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"interfaceHash(string)\":{\"details\":\"Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"details\":\"Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}.\"},\"setManager(address,address)\":{\"details\":\"Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`.\"},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract for which to update the cache.\",\"interfaceId\":\"ERC165 interface for which to update the cache.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementsERC165Interface(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\"},\"updateERC165Cache(address,bytes4)\":{\"notice\":\"Updates the cache with whether the contract implements an ERC165 interface or not.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":\"IERC1820Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":600},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xd2df74f95cc1d14b07a93d913993cf17285ee037e9bd1cac4ac4d38b846eaeda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://836120f9dad7d6bfeebe0d80541ad8753286e132f80f134af618901eb98ecc89\",\"dweb:/ipfs/QmVWRvvX2kW8Des3SfB23UwYsiDrMd4aYRpwsjyu7FSVjA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"implementsERC165Interface(address,bytes4)": {
								"notice": "Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address."
							},
							"implementsERC165InterfaceNoCache(address,bytes4)": {
								"notice": "Checks whether a contract implements an ERC165 interface or not without using nor updating the cache."
							},
							"updateERC165Cache(address,bytes4)": {
								"notice": "Updates the cache with whether the contract implements an ERC165 interface or not."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "139:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "269:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:0"
									},
									"scope": 77,
									"src": "223:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "380:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:0"
									},
									"scope": 77,
									"src": "361:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "667:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "686:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "720:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:0"
									},
									"scope": 77,
									"src": "649:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1020:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1035:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:0"
									},
									"scope": 77,
									"src": "1001:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1754:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1771:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1805:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:0"
									},
									"scope": 77,
									"src": "1737:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2148:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2140:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2164:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2156:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2183:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2175:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:51:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2209:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2209:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:6:0"
									},
									"scope": 77,
									"src": "2118:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2221:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2390:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2415:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2399:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2437:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2421:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2449:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2441:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:57:0"
									},
									"src": "2384:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2462:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 76,
									"name": "Approval",
									"nameLocation": "2621:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2646:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2630:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2669:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2653:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2686:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2678:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2629:63:0"
									},
									"src": "2615:78:0"
								}
							],
							"scope": 78,
							"src": "129:2566:0",
							"usedErrors": []
						}
					],
					"src": "33:2663:0"
				},
				"id": 0
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
					"exportedSymbols": {
						"Address": [
							1707
						],
						"Context": [
							1730
						],
						"ERC777": [
							1212
						],
						"IERC1820Registry": [
							1820
						],
						"IERC20": [
							77
						],
						"IERC777": [
							1371
						],
						"IERC777Recipient": [
							1391
						],
						"IERC777Sender": [
							1411
						]
					},
					"id": 1213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
							"file": "./IERC777.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1213,
							"sourceUnit": 1372,
							"src": "58:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
							"file": "./IERC777Recipient.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1213,
							"sourceUnit": 1392,
							"src": "82:32:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
							"file": "./IERC777Sender.sol",
							"id": 82,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1213,
							"sourceUnit": 1412,
							"src": "115:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "../ERC20/IERC20.sol",
							"id": 83,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1213,
							"sourceUnit": 78,
							"src": "145:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 84,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1213,
							"sourceUnit": 1708,
							"src": "175:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1213,
							"sourceUnit": 1731,
							"src": "209:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
							"file": "../../utils/introspection/IERC1820Registry.sol",
							"id": 86,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1213,
							"sourceUnit": 1821,
							"src": "243:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 88,
										"name": "Context",
										"nameLocations": [
											"1033:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1730,
										"src": "1033:7:1"
									},
									"id": 89,
									"nodeType": "InheritanceSpecifier",
									"src": "1033:7:1"
								},
								{
									"baseName": {
										"id": 90,
										"name": "IERC777",
										"nameLocations": [
											"1042:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1371,
										"src": "1042:7:1"
									},
									"id": 91,
									"nodeType": "InheritanceSpecifier",
									"src": "1042:7:1"
								},
								{
									"baseName": {
										"id": 92,
										"name": "IERC20",
										"nameLocations": [
											"1051:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "1051:6:1"
									},
									"id": 93,
									"nodeType": "InheritanceSpecifier",
									"src": "1051:6:1"
								}
							],
							"canonicalName": "ERC777",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 87,
								"nodeType": "StructuredDocumentation",
								"src": "301:712:1",
								"text": " @dev Implementation of the {IERC777} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n Support for ERC20 is included in this contract, as specified by the EIP: both\n the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n movements.\n Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n are no special restrictions in the amount of tokens that created, moved, or\n destroyed. This makes integration with ERC20 applications seamless."
							},
							"fullyImplemented": true,
							"id": 1212,
							"linearizedBaseContracts": [
								1212,
								77,
								1371,
								1730
							],
							"name": "ERC777",
							"nameLocation": "1023:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 96,
									"libraryName": {
										"id": 94,
										"name": "Address",
										"nameLocations": [
											"1070:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1707,
										"src": "1070:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "1064:26:1",
									"typeName": {
										"id": 95,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1082:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"id": 102,
									"mutability": "constant",
									"name": "_ERC1820_REGISTRY",
									"nameLocation": "1131:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 1212,
									"src": "1096:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1820Registry_$1820",
										"typeString": "contract IERC1820Registry"
									},
									"typeName": {
										"id": 98,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 97,
											"name": "IERC1820Registry",
											"nameLocations": [
												"1096:16:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1820,
											"src": "1096:16:1"
										},
										"referencedDeclaration": 1820,
										"src": "1096:16:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1820Registry_$1820",
											"typeString": "contract IERC1820Registry"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
												"id": 100,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1168:42:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 99,
											"name": "IERC1820Registry",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1820,
											"src": "1151:16:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$1820_$",
												"typeString": "type(contract IERC1820Registry)"
											}
										},
										"id": 101,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1151:60:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1820Registry_$1820",
											"typeString": "contract IERC1820Registry"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 106,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1254:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1212,
									"src": "1218:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 105,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 103,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1226:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1218:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 104,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1237:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 108,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1286:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1212,
									"src": "1270:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 107,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1270:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 110,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1320:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1212,
									"src": "1305:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 109,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1305:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 112,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1346:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1212,
									"src": "1331:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 111,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1331:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 117,
									"mutability": "constant",
									"name": "_TOKENS_SENDER_INTERFACE_HASH",
									"nameLocation": "1385:29:1",
									"nodeType": "VariableDeclaration",
									"scope": 1212,
									"src": "1360:88:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 113,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1360:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "455243373737546f6b656e7353656e646572",
												"id": 115,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1427:20:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
													"typeString": "literal_string \"ERC777TokensSender\""
												},
												"value": "ERC777TokensSender"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
													"typeString": "literal_string \"ERC777TokensSender\""
												}
											],
											"id": 114,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1417:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 116,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1417:31:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 122,
									"mutability": "constant",
									"name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
									"nameLocation": "1479:32:1",
									"nodeType": "VariableDeclaration",
									"scope": 1212,
									"src": "1454:94:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 118,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1454:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "455243373737546f6b656e73526563697069656e74",
												"id": 120,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1524:23:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
													"typeString": "literal_string \"ERC777TokensRecipient\""
												},
												"value": "ERC777TokensRecipient"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
													"typeString": "literal_string \"ERC777TokensRecipient\""
												}
											],
											"id": 119,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1514:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 121,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1514:34:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 125,
									"mutability": "mutable",
									"name": "_defaultOperatorsArray",
									"nameLocation": "1665:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 1212,
									"src": "1647:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 123,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1647:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 124,
										"nodeType": "ArrayTypeName",
										"src": "1647:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 129,
									"mutability": "mutable",
									"name": "_defaultOperators",
									"nameLocation": "1814:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 1212,
									"src": "1781:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 128,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 126,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1789:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1781:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 127,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1800:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 135,
									"mutability": "mutable",
									"name": "_operators",
									"nameLocation": "1974:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 1212,
									"src": "1921:63:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 134,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 130,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1929:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1921:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 133,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 131,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1948:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1940:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 132,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1959:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_revokedDefaultOperators",
									"nameLocation": "2043:24:1",
									"nodeType": "VariableDeclaration",
									"scope": 1212,
									"src": "1990:77:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 140,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 136,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1998:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1990:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 139,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 137,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2017:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2009:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 138,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2028:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 147,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "2156:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1212,
									"src": "2098:69:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 146,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 142,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2107:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2098:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 145,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 143,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2127:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2118:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 144,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2138:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2366:490:1",
										"statements": [
											{
												"expression": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 158,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2376:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 159,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "2384:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2376:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "2376:13:1"
											},
											{
												"expression": {
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 162,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "2399:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 163,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "2409:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2399:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "2399:17:1"
											},
											{
												"expression": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 166,
														"name": "_defaultOperatorsArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2427:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 167,
														"name": "defaultOperators_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "2452:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "2427:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "2427:42:1"
											},
											{
												"body": {
													"id": 189,
													"nodeType": "Block",
													"src": "2534:71:1",
													"statements": [
														{
															"expression": {
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 181,
																		"name": "_defaultOperators",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "2548:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 185,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 182,
																			"name": "defaultOperators_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 155,
																			"src": "2566:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 184,
																		"indexExpression": {
																			"id": 183,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "2584:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2566:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2548:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2590:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2548:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 188,
															"nodeType": "ExpressionStatement",
															"src": "2548:46:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "2499:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 175,
															"name": "defaultOperators_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "2503:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2521:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2503:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2499:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 190,
												"initializationExpression": {
													"assignments": [
														171
													],
													"declarations": [
														{
															"constant": false,
															"id": 171,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2492:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 190,
															"src": "2484:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 170,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2484:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 173,
													"initialValue": {
														"hexValue": "30",
														"id": 172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2496:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2484:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2529:3:1",
														"subExpression": {
															"id": 178,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "2529:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 180,
													"nodeType": "ExpressionStatement",
													"src": "2529:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2479:126:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 196,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2696:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC777_$1212",
																		"typeString": "contract ERC777"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC777_$1212",
																		"typeString": "contract ERC777"
																	}
																],
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2688:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2688:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2688:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "455243373737546f6b656e",
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2713:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
																		"typeString": "literal_string \"ERC777Token\""
																	},
																	"value": "ERC777Token"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
																		"typeString": "literal_string \"ERC777Token\""
																	}
																],
																"id": 198,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "2703:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2703:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 203,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2737:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC777_$1212",
																		"typeString": "contract ERC777"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC777_$1212",
																		"typeString": "contract ERC777"
																	}
																],
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2729:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 201,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2729:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2729:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 191,
															"name": "_ERC1820_REGISTRY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2646:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$1820",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2664:23:1",
														"memberName": "setInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1759,
														"src": "2646:41:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (address,bytes32,address) external"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2646:97:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "2646:97:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 212,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2803:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC777_$1212",
																		"typeString": "contract ERC777"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC777_$1212",
																		"typeString": "contract ERC777"
																	}
																],
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2795:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 210,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2795:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2795:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "4552433230546f6b656e",
																	"id": 215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2820:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
																		"typeString": "literal_string \"ERC20Token\""
																	},
																	"value": "ERC20Token"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
																		"typeString": "literal_string \"ERC20Token\""
																	}
																],
																"id": 214,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "2810:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2810:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 219,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2843:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC777_$1212",
																		"typeString": "contract ERC777"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC777_$1212",
																		"typeString": "contract ERC777"
																	}
																],
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2835:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 217,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2835:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2835:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 207,
															"name": "_ERC1820_REGISTRY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2753:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$1820",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2771:23:1",
														"memberName": "setInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1759,
														"src": "2753:41:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (address,bytes32,address) external"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2753:96:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "2753:96:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "2174:65:1",
										"text": " @dev `defaultOperators` may be an empty array."
									},
									"id": 224,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2279:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2265:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2265:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2308:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2294:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 151,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2294:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "defaultOperators_",
												"nameLocation": "2342:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2325:34:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 153,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2325:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 154,
													"nodeType": "ArrayTypeName",
													"src": "2325:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:110:1"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2366:0:1"
									},
									"scope": 1212,
									"src": "2244:612:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1221
									],
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2979:29:1",
										"statements": [
											{
												"expression": {
													"id": 231,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 110,
													"src": "2996:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 230,
												"id": 232,
												"nodeType": "Return",
												"src": "2989:12:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2862:43:1",
										"text": " @dev See {IERC777-name}."
									},
									"functionSelector": "06fdde03",
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2919:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 227,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2946:8:1"
									},
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2923:2:1"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2964:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 228,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2964:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2963:15:1"
									},
									"scope": 1212,
									"src": "2910:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "3135:31:1",
										"statements": [
											{
												"expression": {
													"id": 241,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "3152:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 240,
												"id": 242,
												"nodeType": "Return",
												"src": "3145:14:1"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "3014:45:1",
										"text": " @dev See {IERC777-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3073:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 237,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3102:8:1"
									},
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3079:2:1"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "3120:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 238,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3120:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3119:15:1"
									},
									"scope": 1212,
									"src": "3064:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "3406:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3423:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 249,
												"id": 251,
												"nodeType": "Return",
												"src": "3416:9:1"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "3172:173:1",
										"text": " @dev See {ERC20-decimals}.\n Always returns 18, as per the\n [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
									},
									"functionSelector": "313ce567",
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3359:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3367:2:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "3399:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 247,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3399:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3398:7:1"
									},
									"scope": 1212,
									"src": "3350:82:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1233
									],
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "3617:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "31",
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3634:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"functionReturnParameters": 259,
												"id": 261,
												"nodeType": "Return",
												"src": "3627:8:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "3438:104:1",
										"text": " @dev See {IERC777-granularity}.\n This implementation always returns `1`."
									},
									"functionSelector": "556f0dc7",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "granularity",
									"nameLocation": "3556:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 256,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3590:8:1"
									},
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3567:2:1"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3608:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3607:9:1"
									},
									"scope": 1212,
									"src": "3547:95:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										8,
										1239
									],
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "3790:36:1",
										"statements": [
											{
												"expression": {
													"id": 272,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 108,
													"src": "3807:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 271,
												"id": 273,
												"nodeType": "Return",
												"src": "3800:19:1"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "3648:50:1",
										"text": " @dev See {IERC777-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3712:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 268,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 266,
												"name": "IERC20",
												"nameLocations": [
													"3755:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 77,
												"src": "3755:6:1"
											},
											{
												"id": 267,
												"name": "IERC777",
												"nameLocations": [
													"3763:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1371,
												"src": "3763:7:1"
											}
										],
										"src": "3746:25:1"
									},
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3723:2:1"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "3781:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3781:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3780:9:1"
									},
									"scope": 1212,
									"src": "3703:123:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										16,
										1247
									],
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "4030:46:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 286,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "4047:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 288,
													"indexExpression": {
														"id": 287,
														"name": "tokenHolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "4057:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4047:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 285,
												"id": 289,
												"nodeType": "Return",
												"src": "4040:29:1"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "3832:89:1",
										"text": " @dev Returns the amount of tokens owned by an account (`tokenHolder`)."
									},
									"functionSelector": "70a08231",
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3935:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 282,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 280,
												"name": "IERC20",
												"nameLocations": [
													"3995:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 77,
												"src": "3995:6:1"
											},
											{
												"id": 281,
												"name": "IERC777",
												"nameLocations": [
													"4003:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1371,
												"src": "4003:7:1"
											}
										],
										"src": "3986:25:1"
									},
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "3953:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "3945:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:21:1"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4021:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4020:9:1"
									},
									"scope": 1212,
									"src": "3926:150:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1257
									],
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4299:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 303,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1718,
																"src": "4315:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4315:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 305,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "4329:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 306,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "4340:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 307,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "4348:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4354:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "74727565",
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4358:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 302,
														"name": "_send",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "4309:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4309:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "4309:54:1"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "4082:119:1",
										"text": " @dev See {IERC777-send}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
									},
									"functionSelector": "9bd9bbc6",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "4215:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 300,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4289:8:1"
									},
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4228:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4220:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4220:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4247:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4239:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4268:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4255:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4255:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4219:54:1"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4299:0:1"
									},
									"scope": 1212,
									"src": "4206:164:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "4693:347:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 325,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "4711:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4732:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4724:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 326,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4724:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4724:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4711:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4736:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
																"typeString": "literal_string \"ERC777: transfer to the zero address\""
															},
															"value": "ERC777: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
																"typeString": "literal_string \"ERC777: transfer to the zero address\""
															}
														],
														"id": 324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4703:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4703:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "4703:72:1"
											},
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "4794:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 369,
														"src": "4786:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 334,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4786:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 336,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "4801:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4786:27:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "4842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "4848:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "4854:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 343,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "4865:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4873:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "",
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 339,
														"name": "_callTokensToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "4824:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4824:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "4824:56:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 349,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "4897:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 350,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "4903:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "4909:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 352,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "4920:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4928:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4932:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 348,
														"name": "_move",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "4891:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4891:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "4891:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 358,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "4966:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 359,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "4972:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "4978:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 361,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "4989:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4997:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "",
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5001:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "66616c7365",
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5005:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 357,
														"name": "_callTokensReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "4946:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4946:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "4946:65:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5029:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 323,
												"id": 368,
												"nodeType": "Return",
												"src": "5022:11:1"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4376:220:1",
										"text": " @dev See {IERC20-transfer}.\n Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n interface if it is a contract.\n Also emits a {Sent} event."
									},
									"functionSelector": "a9059cbb",
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4610:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 320,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4669:8:1"
									},
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4627:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4619:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4646:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4638:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:35:1"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "4687:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4687:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4686:6:1"
									},
									"scope": 1212,
									"src": "4601:439:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1265
									],
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "5244:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 380,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1718,
																"src": "5260:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5260:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 382,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "5274:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "5282:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5288:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 379,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "5254:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5254:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "5254:37:1"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "5046:119:1",
										"text": " @dev See {IERC777-burn}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
									},
									"functionSelector": "fe9d9303",
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "5179:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 377,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5234:8:1"
									},
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5192:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "5184:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "5200:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5200:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5183:35:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5244:0:1"
									},
									"scope": 1212,
									"src": "5170:128:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1275
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "5467:193:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 399,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "5484:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 400,
																"name": "tokenHolder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "5496:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5484:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 402,
																			"name": "_defaultOperators",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "5524:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 404,
																		"indexExpression": {
																			"id": 403,
																			"name": "operator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "5542:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5524:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "5555:48:1",
																		"subExpression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 405,
																					"name": "_revokedDefaultOperators",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 141,
																					"src": "5556:24:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																						"typeString": "mapping(address => mapping(address => bool))"
																					}
																				},
																				"id": 407,
																				"indexExpression": {
																					"id": 406,
																					"name": "tokenHolder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 393,
																					"src": "5581:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5556:37:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 409,
																			"indexExpression": {
																				"id": 408,
																				"name": "operator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 391,
																				"src": "5594:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5556:47:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5524:79:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 412,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5523:81:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5484:120:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 414,
																"name": "_operators",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "5620:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 416,
															"indexExpression": {
																"id": 415,
																"name": "tokenHolder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "5631:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5620:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 418,
														"indexExpression": {
															"id": 417,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "5644:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5620:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5484:169:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 398,
												"id": 420,
												"nodeType": "Return",
												"src": "5477:176:1"
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "5304:52:1",
										"text": " @dev See {IERC777-isOperatorFor}."
									},
									"functionSelector": "d95b6371",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOperatorFor",
									"nameLocation": "5370:13:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 395,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5443:8:1"
									},
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5392:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "5384:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5384:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "5410:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "5402:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5402:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5383:39:1"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "5461:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5461:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5460:6:1"
									},
									"scope": 1212,
									"src": "5361:299:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1281
									],
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "5797:343:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 430,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1718,
																	"src": "5815:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5815:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 432,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "5831:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5815:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a20617574686f72697a696e672073656c66206173206f70657261746f72",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5841:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
																"typeString": "literal_string \"ERC777: authorizing self as operator\""
															},
															"value": "ERC777: authorizing self as operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
																"typeString": "literal_string \"ERC777: authorizing self as operator\""
															}
														],
														"id": 429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5807:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5807:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "5807:73:1"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 437,
														"name": "_defaultOperators",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5895:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 439,
													"indexExpression": {
														"id": 438,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "5913:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5895:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 458,
													"nodeType": "Block",
													"src": "6010:66:1",
													"statements": [
														{
															"expression": {
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 449,
																			"name": "_operators",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 135,
																			"src": "6024:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 453,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 450,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1718,
																				"src": "6035:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6035:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6024:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 454,
																	"indexExpression": {
																		"id": 452,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "6049:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6024:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6061:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6024:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 457,
															"nodeType": "ExpressionStatement",
															"src": "6024:41:1"
														}
													]
												},
												"id": 459,
												"nodeType": "IfStatement",
												"src": "5891:185:1",
												"trueBody": {
													"id": 448,
													"nodeType": "Block",
													"src": "5924:80:1",
													"statements": [
														{
															"expression": {
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "5938:55:1",
																"subExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 440,
																			"name": "_revokedDefaultOperators",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 141,
																			"src": "5945:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 443,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 441,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1718,
																				"src": "5970:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5970:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5945:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 445,
																	"indexExpression": {
																		"id": 444,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "5984:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5945:48:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 447,
															"nodeType": "ExpressionStatement",
															"src": "5938:55:1"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 461,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "6110:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 462,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1718,
																"src": "6120:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6120:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 460,
														"name": "AuthorizedOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "6091:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6091:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "6086:47:1"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "5666:56:1",
										"text": " @dev See {IERC777-authorizeOperator}."
									},
									"functionSelector": "959b8c3f",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeOperator",
									"nameLocation": "5736:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 427,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5787:8:1"
									},
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5762:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "5754:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5754:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5753:18:1"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5797:0:1"
									},
									"scope": 1212,
									"src": "5727:413:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1287
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "6271:337:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 475,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "6289:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 476,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1718,
																	"src": "6301:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6301:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6289:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207265766f6b696e672073656c66206173206f70657261746f72",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6315:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
																"typeString": "literal_string \"ERC777: revoking self as operator\""
															},
															"value": "ERC777: revoking self as operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
																"typeString": "literal_string \"ERC777: revoking self as operator\""
															}
														],
														"id": 474,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6281:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6281:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "6281:70:1"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 482,
														"name": "_defaultOperators",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "6366:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 484,
													"indexExpression": {
														"id": 483,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "6384:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6366:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "6481:66:1",
													"statements": [
														{
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "6495:41:1",
																"subExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 495,
																			"name": "_operators",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 135,
																			"src": "6502:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 498,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 496,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1718,
																				"src": "6513:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6513:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6502:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 500,
																	"indexExpression": {
																		"id": 499,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "6527:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6502:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "ExpressionStatement",
															"src": "6495:41:1"
														}
													]
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "6362:185:1",
												"trueBody": {
													"id": 494,
													"nodeType": "Block",
													"src": "6395:80:1",
													"statements": [
														{
															"expression": {
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 485,
																			"name": "_revokedDefaultOperators",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 141,
																			"src": "6409:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 489,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 486,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1718,
																				"src": "6434:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6434:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6409:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 490,
																	"indexExpression": {
																		"id": 488,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "6448:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6409:48:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6460:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6409:55:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 493,
															"nodeType": "ExpressionStatement",
															"src": "6409:55:1"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 506,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "6578:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 507,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1718,
																"src": "6588:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6588:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 505,
														"name": "RevokedOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "6562:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6562:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "EmitStatement",
												"src": "6557:44:1"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "6146:53:1",
										"text": " @dev See {IERC777-revokeOperator}."
									},
									"functionSelector": "fad8b32a",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOperator",
									"nameLocation": "6213:14:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 472,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6261:8:1"
									},
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6236:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "6228:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6228:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6227:18:1"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6271:0:1"
									},
									"scope": 1212,
									"src": "6204:404:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1294
									],
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "6758:46:1",
										"statements": [
											{
												"expression": {
													"id": 520,
													"name": "_defaultOperatorsArray",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 125,
													"src": "6775:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 519,
												"id": 521,
												"nodeType": "Return",
												"src": "6768:29:1"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "6614:55:1",
										"text": " @dev See {IERC777-defaultOperators}."
									},
									"functionSelector": "06e48538",
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "defaultOperators",
									"nameLocation": "6683:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 515,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6722:8:1"
									},
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6699:2:1"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6740:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 516,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6740:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 517,
													"nodeType": "ArrayTypeName",
													"src": "6740:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6739:18:1"
									},
									"scope": 1212,
									"src": "6674:130:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1308
									],
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "7140:177:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 540,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1718,
																		"src": "7172:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7172:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 542,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "7186:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 539,
																"name": "isOperatorFor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "7158:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7158:35:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7195:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
																"typeString": "literal_string \"ERC777: caller is not an operator for holder\""
															},
															"value": "ERC777: caller is not an operator for holder"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
																"typeString": "literal_string \"ERC777: caller is not an operator for holder\""
															}
														],
														"id": 538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7150:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7150:92:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "7150:92:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 548,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "7258:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "7266:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 550,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "7277:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 551,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7285:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 552,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7291:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7305:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 547,
														"name": "_send",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "7252:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7252:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "7252:58:1"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6810:108:1",
										"text": " @dev See {IERC777-operatorSend}.\n Emits {Sent} and {IERC20-Transfer} events."
									},
									"functionSelector": "62ad1b83",
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "operatorSend",
									"nameLocation": "6932:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 536,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7127:8:1"
									},
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6962:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "6954:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6954:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6986:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "6978:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6978:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7013:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "7005:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7005:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7042:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "7029:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7029:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "7069:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "7056:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7056:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6944:143:1"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7140:0:1"
									},
									"scope": 1212,
									"src": "6923:394:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1320
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "7563:162:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 572,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1718,
																		"src": "7595:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7595:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 574,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "7609:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 571,
																"name": "isOperatorFor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "7581:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7581:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7619:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
																"typeString": "literal_string \"ERC777: caller is not an operator for holder\""
															},
															"value": "ERC777: caller is not an operator for holder"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
																"typeString": "literal_string \"ERC777: caller is not an operator for holder\""
															}
														],
														"id": 570,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7573:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7573:93:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "7573:93:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 580,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "7682:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 581,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "7691:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 582,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "7699:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 583,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "7705:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 579,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "7676:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7676:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "7676:42:1"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "7323:110:1",
										"text": " @dev See {IERC777-operatorBurn}.\n Emits {Burned} and {IERC20-Transfer} events."
									},
									"functionSelector": "fc673c4f",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "operatorBurn",
									"nameLocation": "7447:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 568,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7554:8:1"
									},
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7468:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "7460:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7460:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7485:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "7477:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7506:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "7493:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7493:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "7525:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "7512:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7512:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7459:79:1"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7563:0:1"
									},
									"scope": 1212,
									"src": "7438:287:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										36
									],
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "8063:52:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 598,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "8080:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 600,
														"indexExpression": {
															"id": 599,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "8092:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8080:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 602,
													"indexExpression": {
														"id": 601,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "8100:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8080:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 597,
												"id": 603,
												"nodeType": "Return",
												"src": "8073:35:1"
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "7731:228:1",
										"text": " @dev See {IERC20-allowance}.\n Note that operator and allowance concepts are orthogonal: operators may\n not have allowance, and accounts with allowance may not be operators\n themselves."
									},
									"functionSelector": "dd62ed3e",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "7973:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 594,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8036:8:1"
									},
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "7991:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "7983:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7983:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7982:33:1"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "8054:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8054:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8053:9:1"
									},
									"scope": 1212,
									"src": "7964:151:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										46
									],
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "8341:109:1",
										"statements": [
											{
												"assignments": [
													617
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "holder",
														"nameLocation": "8359:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "8351:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 616,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8351:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 618,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "8368:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8368:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8351:29:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 622,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8399:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "8407:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "8416:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 621,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "8390:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8390:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "8390:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8439:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 615,
												"id": 628,
												"nodeType": "Return",
												"src": "8432:11:1"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "8121:127:1",
										"text": " @dev See {IERC20-approve}.\n Note that accounts cannot have allowance issued by their operators."
									},
									"functionSelector": "095ea7b3",
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8262:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 612,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8317:8:1"
									},
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8278:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "8270:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8270:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8295:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "8287:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8269:32:1"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "8335:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8335:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8334:6:1"
									},
									"scope": 1212,
									"src": "8253:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "8927:664:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "8945:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8966:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8958:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 645,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8958:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8958:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8945:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8970:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
																"typeString": "literal_string \"ERC777: transfer to the zero address\""
															},
															"value": "ERC777: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
																"typeString": "literal_string \"ERC777: transfer to the zero address\""
															}
														],
														"id": 643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8937:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8937:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "8937:72:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 654,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "9027:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9045:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9037:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 655,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9037:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9037:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9027:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9049:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
																"typeString": "literal_string \"ERC777: transfer from the zero address\""
															},
															"value": "ERC777: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
																"typeString": "literal_string \"ERC777: transfer from the zero address\""
															}
														],
														"id": 653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9019:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9019:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "9019:71:1"
											},
											{
												"assignments": [
													664
												],
												"declarations": [
													{
														"constant": false,
														"id": 664,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "9109:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 721,
														"src": "9101:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 663,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9101:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 665,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "9119:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9119:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9101:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 669,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "9160:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 670,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "9169:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "9177:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "9188:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9196:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "",
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9200:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 668,
														"name": "_callTokensToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "9142:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9142:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "9142:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 678,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "9220:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "9229:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 680,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "9237:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "9248:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9256:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "",
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9260:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 677,
														"name": "_move",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "9214:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9214:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "9214:49:1"
											},
											{
												"assignments": [
													687
												],
												"declarations": [
													{
														"constant": false,
														"id": 687,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "9282:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 721,
														"src": "9274:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 686,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9274:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 688,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "9301:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 690,
														"indexExpression": {
															"id": 689,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "9313:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9301:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 692,
													"indexExpression": {
														"id": 691,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "9321:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9301:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9274:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 695,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "9347:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 696,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "9367:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9347:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9375:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c",
																"typeString": "literal_string \"ERC777: transfer amount exceeds allowance\""
															},
															"value": "ERC777: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c",
																"typeString": "literal_string \"ERC777: transfer amount exceeds allowance\""
															}
														],
														"id": 694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9339:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9339:80:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "9339:80:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 702,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "9438:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 703,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "9446:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 704,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "9455:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 705,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "9474:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9455:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 701,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "9429:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9429:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "9429:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 710,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "9512:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "9521:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "9529:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 713,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "9540:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9548:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9552:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														},
														{
															"hexValue": "66616c7365",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9556:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 709,
														"name": "_callTokensReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "9492:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9492:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "9492:70:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9580:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 642,
												"id": 720,
												"nodeType": "Return",
												"src": "9573:11:1"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "8455:355:1",
										"text": " @dev See {IERC20-transferFrom}.\n Note that operator and allowance concepts are orthogonal: operators cannot\n call `transferFrom` (unless they have allowance), and accounts with\n allowance cannot call `operatorSend` (unless they are operators).\n Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
									},
									"functionSelector": "23b872dd",
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "8824:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 639,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8903:8:1"
									},
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "8845:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "8837:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8837:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8861:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "8853:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8880:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "8872:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8872:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8836:51:1"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "8921:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 640,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8921:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8920:6:1"
									},
									"scope": 1212,
									"src": "8815:776:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "10334:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 735,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "10350:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "10359:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 737,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "10367:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 738,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "10377:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10391:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 734,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															743,
															823
														],
														"referencedDeclaration": 823,
														"src": "10344:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10344:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "10344:52:1"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "9597:559:1",
										"text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If a send hook is registered for `account`, the corresponding function\n will be called with `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10170:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10193:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "10185:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10185:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10218:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "10210:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10210:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "10247:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "10234:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10234:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "10278:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "10265:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 730,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10265:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10175:121:1"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10334:0:1"
									},
									"scope": 1212,
									"src": "10161:242:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "11232:539:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 758,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "11250:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11269:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11261:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 759,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11261:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11261:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11250:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11273:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
																"typeString": "literal_string \"ERC777: mint to the zero address\""
															},
															"value": "ERC777: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
																"typeString": "literal_string \"ERC777: mint to the zero address\""
															}
														],
														"id": 757,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11242:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11242:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "11242:66:1"
											},
											{
												"assignments": [
													768
												],
												"declarations": [
													{
														"constant": false,
														"id": 768,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11327:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 822,
														"src": "11319:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 767,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11319:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 771,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 769,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "11338:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11338:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11319:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 773,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "11382:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11400:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11392:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 774,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11392:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11392:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 778,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "11404:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "11413:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 772,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "11361:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11361:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "11361:59:1"
											},
											{
												"expression": {
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 782,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "11465:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 783,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "11481:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11465:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "11465:22:1"
											},
											{
												"expression": {
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 786,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "11497:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 788,
														"indexExpression": {
															"id": 787,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "11507:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11497:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 789,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "11519:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11497:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "11497:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 793,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "11556:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 794,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 798,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "11578:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 799,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "11587:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 800,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "11595:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 801,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "11605:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 802,
															"name": "requireReceptionAck",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "11619:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 792,
														"name": "_callTokensReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "11536:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11536:103:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "11536:103:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 806,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "11662:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "11672:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "11681:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 809,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "11689:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 810,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "11699:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 805,
														"name": "Minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "11655:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11655:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "EmitStatement",
												"src": "11650:62:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11744:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11736:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 814,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11736:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11736:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "11748:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 819,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "11757:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 813,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "11727:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11727:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "EmitStatement",
												"src": "11722:42:1"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "10409:611:1",
										"text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If `requireReceptionAck` is set to true, and if a send hook is\n registered for `account`, the corresponding function will be called with\n `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "11034:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11057:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "11049:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11049:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11082:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "11074:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11074:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "11111:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "11098:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11098:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "11142:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "11129:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 751,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11129:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "requireReceptionAck",
												"nameLocation": "11169:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "11164:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 753,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11164:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11039:155:1"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11232:0:1"
									},
									"scope": 1212,
									"src": "11025:746:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "12471:446:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 840,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "12489:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12505:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12497:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 841,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12497:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12497:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12489:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a2073656e642066726f6d20746865207a65726f2061646472657373",
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12509:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401",
																"typeString": "literal_string \"ERC777: send from the zero address\""
															},
															"value": "ERC777: send from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401",
																"typeString": "literal_string \"ERC777: send from the zero address\""
															}
														],
														"id": 839,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12481:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12481:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "12481:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 850,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "12564:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12578:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12570:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 851,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12570:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12570:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12564:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a2073656e6420746f20746865207a65726f2061646472657373",
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12582:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3",
																"typeString": "literal_string \"ERC777: send to the zero address\""
															},
															"value": "ERC777: send to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3",
																"typeString": "literal_string \"ERC777: send to the zero address\""
															}
														],
														"id": 849,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12556:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "12556:61:1"
											},
											{
												"assignments": [
													860
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12636:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 892,
														"src": "12628:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 859,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12628:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 861,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "12647:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12647:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12628:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "12688:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "12698:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 867,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "12704:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 868,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "12708:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 869,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "12716:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 870,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "12726:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 864,
														"name": "_callTokensToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "12670:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12670:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "12670:69:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 874,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "12756:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "12766:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "12772:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "12776:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 878,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "12784:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 879,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "12794:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 873,
														"name": "_move",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "12750:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12750:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "12750:57:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 883,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "12838:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "12848:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "12854:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "12858:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 887,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "12866:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 888,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "12876:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 889,
															"name": "requireReceptionAck",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "12890:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 882,
														"name": "_callTokensReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "12818:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12818:92:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "12818:92:1"
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "11777:465:1",
										"text": " @dev Send tokens\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
									},
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_send",
									"nameLocation": "12256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "12271:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12271:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12301:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "12293:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12293:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12321:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "12313:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12313:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "12350:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "12337:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 831,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12337:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "12381:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "12368:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 833,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12368:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "requireReceptionAck",
												"nameLocation": "12408:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "12403:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 835,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12403:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12261:172:1"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12471:0:1"
									},
									"scope": 1212,
									"src": "12247:670:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "13388:631:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 906,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "13406:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13422:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13414:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 907,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13414:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13414:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13406:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13426:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
																"typeString": "literal_string \"ERC777: burn from the zero address\""
															},
															"value": "ERC777: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
																"typeString": "literal_string \"ERC777: burn from the zero address\""
															}
														],
														"id": 905,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13398:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13398:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "13398:65:1"
											},
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "13482:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 984,
														"src": "13474:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 915,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13474:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 917,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "13493:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13493:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13474:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 921,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "13534:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 922,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "13544:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13558:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13550:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 923,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13550:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13550:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "13562:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 928,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "13570:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 929,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "13576:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 920,
														"name": "_callTokensToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "13516:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13516:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "13516:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 933,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "13621:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "13631:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13645:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13637:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 935,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13637:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13637:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 939,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "13649:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 932,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "13600:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13600:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "13600:56:1"
											},
											{
												"assignments": [
													943
												],
												"declarations": [
													{
														"constant": false,
														"id": 943,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "13709:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 984,
														"src": "13701:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 942,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13701:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 947,
												"initialValue": {
													"baseExpression": {
														"id": 944,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "13723:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 946,
													"indexExpression": {
														"id": 945,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "13733:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13723:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13701:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 949,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "13756:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 950,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 898,
																"src": "13771:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13756:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13779:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
																"typeString": "literal_string \"ERC777: burn amount exceeds balance\""
															},
															"value": "ERC777: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
																"typeString": "literal_string \"ERC777: burn amount exceeds balance\""
															}
														],
														"id": 948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13748:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13748:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "13748:69:1"
											},
											{
												"expression": {
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 955,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "13827:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 957,
														"indexExpression": {
															"id": 956,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "13837:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13827:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 958,
															"name": "fromBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "13845:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 959,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "13859:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13845:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13827:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "13827:38:1"
											},
											{
												"expression": {
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 963,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "13875:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 964,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "13891:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13875:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "13875:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 968,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "13920:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "13930:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "13936:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 971,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "13944:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 972,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "13950:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 967,
														"name": "Burned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "13913:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13913:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "EmitStatement",
												"src": "13908:55:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 976,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "13987:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14001:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13993:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 977,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13993:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13993:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "14005:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 975,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "13978:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13978:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "EmitStatement",
												"src": "13973:39:1"
											}
										]
									},
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "12923:294:1",
										"text": " @dev Burn tokens\n @param from address token holder address\n @param amount uint256 amount of tokens to burn\n @param data bytes extra information provided by the token holder\n @param operatorData bytes extra information provided by the operator (if any)"
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "13231:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13254:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "13246:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13246:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13276:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "13268:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13268:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "13292:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13292:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "13332:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "13319:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 901,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13319:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13236:114:1"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13388:0:1"
									},
									"scope": 1212,
									"src": "13222:797:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "14224:390:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1001,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "14255:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "14265:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "14271:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "14275:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "14234:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14234:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "14234:48:1"
											},
											{
												"assignments": [
													1008
												],
												"declarations": [
													{
														"constant": false,
														"id": 1008,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "14301:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "14293:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1007,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14293:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1012,
												"initialValue": {
													"baseExpression": {
														"id": 1009,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "14315:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1011,
													"indexExpression": {
														"id": 1010,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "14325:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14315:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14293:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1014,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "14348:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1015,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "14363:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14348:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14371:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
																"typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
															},
															"value": "ERC777: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
																"typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
															}
														],
														"id": 1013,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14340:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14340:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "14340:73:1"
											},
											{
												"expression": {
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1020,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "14423:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1022,
														"indexExpression": {
															"id": 1021,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "14433:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14423:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1023,
															"name": "fromBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "14441:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1024,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "14455:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14441:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14423:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "14423:38:1"
											},
											{
												"expression": {
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1028,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "14471:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1030,
														"indexExpression": {
															"id": 1029,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "14481:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14471:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1031,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "14488:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14471:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "14471:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1035,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "14515:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1036,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "14525:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1037,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "14531:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1038,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "14535:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1039,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "14543:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1040,
															"name": "operatorData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "14553:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1034,
														"name": "Sent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "14510:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14510:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "EmitStatement",
												"src": "14505:61:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1044,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "14590:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "14596:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "14600:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1043,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "14581:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14581:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "EmitStatement",
												"src": "14576:31:1"
											}
										]
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_move",
									"nameLocation": "14034:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14057:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "14049:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14049:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14083:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "14075:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14105:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "14097:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14097:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14125:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "14117:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "14154:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "14141:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 994,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14141:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "14185:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "14172:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14172:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14039:164:1"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14224:0:1"
									},
									"scope": 1212,
									"src": "14025:589:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "14827:260:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1061,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "14845:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14863:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14855:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1062,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14855:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14855:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14845:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14867:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
																"typeString": "literal_string \"ERC777: approve from the zero address\""
															},
															"value": "ERC777: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
																"typeString": "literal_string \"ERC777: approve from the zero address\""
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14837:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14837:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "14837:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1071,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "14925:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14944:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14936:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1072,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14936:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14936:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14925:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433737373a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14948:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
																"typeString": "literal_string \"ERC777: approve to the zero address\""
															},
															"value": "ERC777: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
																"typeString": "literal_string \"ERC777: approve to the zero address\""
															}
														],
														"id": 1070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14917:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14917:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "14917:69:1"
											},
											{
												"expression": {
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1080,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "14997:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1083,
															"indexExpression": {
																"id": 1081,
																"name": "holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "15009:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14997:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1084,
														"indexExpression": {
															"id": 1082,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "15017:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14997:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1085,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "15028:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14997:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "14997:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1089,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "15057:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1090,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "15065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1091,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "15074:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1088,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "15048:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15048:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "EmitStatement",
												"src": "15043:37:1"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "14620:127:1",
										"text": " @dev See {ERC20-_approve}.\n Note that accounts cannot have allowance issued by their operators."
									},
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14761:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "14778:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "14770:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14770:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14794:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "14786:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14786:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14811:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "14803:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14803:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14769:48:1"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14827:0:1"
									},
									"scope": 1212,
									"src": "14752:335:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "15771:273:1",
										"statements": [
											{
												"assignments": [
													1112
												],
												"declarations": [
													{
														"constant": false,
														"id": 1112,
														"mutability": "mutable",
														"name": "implementer",
														"nameLocation": "15789:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 1139,
														"src": "15781:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1111,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15781:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1118,
												"initialValue": {
													"arguments": [
														{
															"id": 1115,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "15845:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "_TOKENS_SENDER_INTERFACE_HASH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "15851:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1113,
															"name": "_ERC1820_REGISTRY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "15803:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$1820",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15821:23:1",
														"memberName": "getInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1769,
														"src": "15803:41:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (address,bytes32) view external returns (address)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15803:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15781:100:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1119,
														"name": "implementer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "15895:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15918:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15910:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1120,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15910:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15910:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15895:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1138,
												"nodeType": "IfStatement",
												"src": "15891:147:1",
												"trueBody": {
													"id": 1137,
													"nodeType": "Block",
													"src": "15922:116:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1129,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "15976:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1130,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1100,
																		"src": "15986:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1131,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "15992:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1132,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "15996:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1133,
																		"name": "userData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "16004:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1134,
																		"name": "operatorData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "16014:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1126,
																				"name": "implementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "15950:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1125,
																			"name": "IERC777Sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1411,
																			"src": "15936:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC777Sender_$1411_$",
																				"typeString": "type(contract IERC777Sender)"
																			}
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15936:26:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC777Sender_$1411",
																			"typeString": "contract IERC777Sender"
																		}
																	},
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15963:12:1",
																	"memberName": "tokensToSend",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1410,
																	"src": "15936:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
																	}
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15936:91:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1136,
															"nodeType": "ExpressionStatement",
															"src": "15936:91:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "15093:462:1",
										"text": " @dev Call from.tokensToSend() if the interface is registered\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)"
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callTokensToSend",
									"nameLocation": "15569:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15604:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "15596:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15596:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15630:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "15622:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15622:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15652:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "15644:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15644:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15672:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "15664:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "15701:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "15688:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1105,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15688:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "15732:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "15719:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1107,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15719:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15586:164:1"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15771:0:1"
									},
									"scope": 1212,
									"src": "15560:484:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "16980:441:1",
										"statements": [
											{
												"assignments": [
													1159
												],
												"declarations": [
													{
														"constant": false,
														"id": 1159,
														"mutability": "mutable",
														"name": "implementer",
														"nameLocation": "16998:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 1197,
														"src": "16990:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1158,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16990:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1165,
												"initialValue": {
													"arguments": [
														{
															"id": 1162,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "17054:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1163,
															"name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "17058:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1160,
															"name": "_ERC1820_REGISTRY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "17012:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$1820",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17030:23:1",
														"memberName": "getInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1769,
														"src": "17012:41:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (address,bytes32) view external returns (address)"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17012:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16990:101:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1166,
														"name": "implementer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "17105:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17128:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17120:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1167,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17120:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17120:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17105:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1185,
														"name": "requireReceptionAck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "17263:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1195,
													"nodeType": "IfStatement",
													"src": "17259:156:1",
													"trueBody": {
														"id": 1194,
														"nodeType": "Block",
														"src": "17284:131:1",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "17306:16:1",
																			"subExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 1187,
																						"name": "to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1147,
																						"src": "17307:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 1188,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "17310:10:1",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1431,
																					"src": "17307:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 1189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17307:15:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "4552433737373a20746f6b656e20726563697069656e7420636f6e747261637420686173206e6f20696d706c656d656e74657220666f7220455243373737546f6b656e73526563697069656e74",
																			"id": 1191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17324:79:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
																				"typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
																			},
																			"value": "ERC777: token recipient contract has no implementer for ERC777TokensRecipient"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
																				"typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
																			}
																		],
																		"id": 1186,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "17298:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17298:106:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1193,
																"nodeType": "ExpressionStatement",
																"src": "17298:106:1"
															}
														]
													}
												},
												"id": 1196,
												"nodeType": "IfStatement",
												"src": "17101:314:1",
												"trueBody": {
													"id": 1184,
													"nodeType": "Block",
													"src": "17132:121:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1176,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1143,
																		"src": "17191:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1177,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "17201:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1178,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1147,
																		"src": "17207:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1179,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "17211:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1180,
																		"name": "userData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "17219:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1181,
																		"name": "operatorData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "17229:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1173,
																				"name": "implementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1159,
																				"src": "17163:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1172,
																			"name": "IERC777Recipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1391,
																			"src": "17146:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC777Recipient_$1391_$",
																				"typeString": "type(contract IERC777Recipient)"
																			}
																		},
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17146:29:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC777Recipient_$1391",
																			"typeString": "contract IERC777Recipient"
																		}
																	},
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17176:14:1",
																	"memberName": "tokensReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1390,
																	"src": "17146:44:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
																	}
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17146:96:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1183,
															"nodeType": "ExpressionStatement",
															"src": "17146:96:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "16050:678:1",
										"text": " @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n tokensReceived() was not registered for the recipient\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
									},
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callTokensReceived",
									"nameLocation": "16742:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16779:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "16771:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16771:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16805:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "16797:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16797:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16827:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "16819:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16819:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16847:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "16839:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "16876:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "16863:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1150,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16863:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "16907:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "16894:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16894:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "requireReceptionAck",
												"nameLocation": "16934:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "16929:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16929:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16761:198:1"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16980:0:1"
									},
									"scope": 1212,
									"src": "16733:688:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "18156:3:1",
										"statements": []
									},
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "17427:617:1",
										"text": " @dev Hook that is called before any token transfer. This includes\n calls to {send}, {transfer}, {operatorSend}, minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "18058:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18087:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "18079:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18105:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "18097:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18097:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18119:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "18111:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18111:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18131:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "18123:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18123:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18078:60:1"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18156:0:1"
									},
									"scope": 1212,
									"src": "18049:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1213,
							"src": "1014:17147:1",
							"usedErrors": []
						}
					],
					"src": "33:18129:1"
				},
				"id": 1
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
					"exportedSymbols": {
						"IERC777": [
							1371
						]
					},
					"id": 1372,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1215,
								"nodeType": "StructuredDocumentation",
								"src": "58:372:2",
								"text": " @dev Interface of the ERC777Token standard as defined in the EIP.\n This contract uses the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n token holders and recipients react to token movements by using setting implementers\n for the associated interfaces in said registry. See {IERC1820Registry} and\n {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 1371,
							"linearizedBaseContracts": [
								1371
							],
							"name": "IERC777",
							"nameLocation": "441:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "455:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "523:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "527:2:2"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "553:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1218,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "553:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "552:15:2"
									},
									"scope": 1371,
									"src": "514:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "574:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "690:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "696:2:2"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "722:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1224,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "722:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:15:2"
									},
									"scope": 1371,
									"src": "681:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "743:287:2",
										"text": " @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For most token contracts, this value will equal 1."
									},
									"functionSelector": "556f0dc7",
									"id": 1233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "granularity",
									"nameLocation": "1044:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:2:2"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1081:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1080:9:2"
									},
									"scope": 1371,
									"src": "1035:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "1096:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1176:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1187:2:2"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1213:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1212:9:2"
									},
									"scope": 1371,
									"src": "1167:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "1228:83:2",
										"text": " @dev Returns the amount of tokens owned by an account (`owner`)."
									},
									"functionSelector": "70a08231",
									"id": 1247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1325:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1343:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1335:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:15:2"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1373:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:9:2"
									},
									"scope": 1371,
									"src": "1316:66:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "1388:585:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "9bd9bbc6",
									"id": 1257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "1987:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2000:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1992:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1992:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2019:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2011:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2042:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2027:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2027:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:56:2"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2056:0:2"
									},
									"scope": 1371,
									"src": "1978:79:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "2063:404:2",
										"text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."
									},
									"functionSelector": "fe9d9303",
									"id": 1265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2481:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2494:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "2486:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2486:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "2502:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2502:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:37:2"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2531:0:2"
									},
									"scope": 1371,
									"src": "2472:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "2538:249:2",
										"text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
									},
									"functionSelector": "d95b6371",
									"id": 1275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperatorFor",
									"nameLocation": "2801:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2823:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2815:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2815:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "2841:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2833:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2833:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2814:39:2"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2877:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2877:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:6:2"
									},
									"scope": 1371,
									"src": "2792:91:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "2889:233:2",
										"text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "959b8c3f",
									"id": 1281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeOperator",
									"nameLocation": "3136:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3162:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "3154:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3154:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3153:18:2"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3180:0:2"
									},
									"scope": 1371,
									"src": "3127:54:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "3187:261:2",
										"text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "fad8b32a",
									"id": 1287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOperator",
									"nameLocation": "3462:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3485:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "3477:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3477:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3476:18:2"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3503:0:2"
									},
									"scope": 1371,
									"src": "3453:51:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "3510:338:2",
										"text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
									},
									"functionSelector": "06e48538",
									"id": 1294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "defaultOperators",
									"nameLocation": "3862:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3878:2:2"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "3904:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1290,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3904:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1291,
													"nodeType": "ArrayTypeName",
													"src": "3904:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3903:18:2"
									},
									"scope": 1371,
									"src": "3853:69:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "3928:714:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "62ad1b83",
									"id": 1308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorSend",
									"nameLocation": "4656:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4686:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "4678:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4710:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "4702:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4737:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "4729:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4729:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4768:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "4753:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4753:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "4797:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "4782:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4782:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4668:147:2"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4824:0:2"
									},
									"scope": 1371,
									"src": "4647:178:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "4831:532:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
									},
									"functionSelector": "fc673c4f",
									"id": 1320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorBurn",
									"nameLocation": "5377:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5407:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "5399:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5399:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5432:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "5424:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5424:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5463:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "5448:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1314,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5448:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "5492:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "5477:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5477:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5389:121:2"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5519:0:2"
									},
									"scope": 1371,
									"src": "5368:152:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987",
									"id": 1334,
									"name": "Sent",
									"nameLocation": "5532:4:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5562:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "5546:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5546:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5596:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "5580:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5626:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "5610:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5610:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5646:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "5638:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5638:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5668:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "5662:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5662:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "5688:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "5682:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5682:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5536:170:2"
									},
									"src": "5526:181:2"
								},
								{
									"anonymous": false,
									"eventSelector": "2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d",
									"id": 1346,
									"name": "Minted",
									"nameLocation": "5719:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5742:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "5726:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5768:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "5752:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5752:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5780:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "5772:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5772:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5794:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "5788:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1341,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5788:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "5806:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "5800:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5725:94:2"
									},
									"src": "5713:107:2"
								},
								{
									"anonymous": false,
									"eventSelector": "a78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098",
									"id": 1358,
									"name": "Burned",
									"nameLocation": "5832:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5855:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "5839:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5839:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5881:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "5865:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "5887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5909:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "5903:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5903:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "5921:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "5915:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5915:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5838:96:2"
									},
									"src": "5826:109:2"
								},
								{
									"anonymous": false,
									"eventSelector": "f4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f9",
									"id": 1364,
									"name": "AuthorizedOperator",
									"nameLocation": "5947:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5982:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "5966:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5966:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "6008:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "5992:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5992:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5965:55:2"
									},
									"src": "5941:80:2"
								},
								{
									"anonymous": false,
									"eventSelector": "50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa1",
									"id": 1370,
									"name": "RevokedOperator",
									"nameLocation": "6033:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6065:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "6049:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6049:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "6091:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "6075:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6048:55:2"
									},
									"src": "6027:77:2"
								}
							],
							"scope": 1372,
							"src": "431:5675:2",
							"usedErrors": []
						}
					],
					"src": "33:6074:2"
				},
				"id": 2
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
					"exportedSymbols": {
						"IERC777Recipient": [
							1391
						]
					},
					"id": 1392,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1373,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777Recipient",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1374,
								"nodeType": "StructuredDocumentation",
								"src": "58:406:3",
								"text": " @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n Accounts can be notified of {IERC777} tokens being sent to them by having a\n contract implement this interface (contract holders can be their own\n implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 1391,
							"linearizedBaseContracts": [
								1391
							],
							"name": "IERC777Recipient",
							"nameLocation": "475:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "498:474:3",
										"text": " @dev Called by an {IERC777} token contract whenever tokens are being\n moved or created into a registered account (`to`). The type of operation\n is conveyed by `from` being the zero address or not.\n This call occurs _after_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n This function may revert to prevent the operation from being executed."
									},
									"functionSelector": "0023de29",
									"id": 1390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "986:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1018:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1010:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1044:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1036:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1066:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1058:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1086:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1078:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1117:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1102:23:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1384,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1102:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "1150:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1135:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1135:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1000:168:3"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:3"
									},
									"scope": 1391,
									"src": "977:201:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1392,
							"src": "465:715:3",
							"usedErrors": []
						}
					],
					"src": "33:1148:3"
				},
				"id": 3
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
					"exportedSymbols": {
						"IERC777Sender": [
							1411
						]
					},
					"id": 1412,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1393,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777Sender",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1394,
								"nodeType": "StructuredDocumentation",
								"src": "58:420:4",
								"text": " @dev Interface of the ERC777TokensSender standard as defined in the EIP.\n {IERC777} Token holders can be notified of operations performed on their\n tokens by having a contract implement this interface (contract holders can be\n  their own implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 1411,
							"linearizedBaseContracts": [
								1411
							],
							"name": "IERC777Sender",
							"nameLocation": "489:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "509:478:4",
										"text": " @dev Called by an {IERC777} token contract whenever a registered holder's\n (`from`) tokens are about to be moved or destroyed. The type of operation\n is conveyed by `to` being the zero address or not.\n This call occurs _before_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\n This function may revert to prevent the operation from being executed."
									},
									"functionSelector": "75ab9782",
									"id": 1410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensToSend",
									"nameLocation": "1001:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1031:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "1023:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1057:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "1049:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1079:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "1071:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1099:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "1091:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1130:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "1115:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1404,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1115:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "1163:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "1148:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1148:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1013:168:4"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:0:4"
									},
									"scope": 1411,
									"src": "992:199:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1412,
							"src": "479:714:4",
							"usedErrors": []
						}
					],
					"src": "33:1161:4"
				},
				"id": 4
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1707
						]
					},
					"id": 1708,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1413,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1414,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1707,
							"linearizedBaseContracts": [
								1707
							],
							"name": "Address",
							"nameLocation": "134:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "784:347:5",
										"statements": [
											{
												"assignments": [
													1423
												],
												"declarations": [
													{
														"constant": false,
														"id": 1423,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1430,
														"src": "981:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1422,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1424,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1068:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1070:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1090:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1078:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:20:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1070:4:5"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1417,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:7:5",
														"valueSize": 1
													},
													{
														"declaration": 1423,
														"isOffset": false,
														"isSlot": false,
														"src": "1070:4:5",
														"valueSize": 1
													}
												],
												"id": 1425,
												"nodeType": "InlineAssembly",
												"src": "1059:41:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1426,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "1116:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1123:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1116:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1421,
												"id": 1429,
												"nodeType": "Return",
												"src": "1109:15:5"
											}
										]
									},
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "738:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:5"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "778:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:5"
									},
									"scope": 1707,
									"src": "718:413:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "2119:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1442,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2145:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1707",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1707",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2137:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1440,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2137:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2137:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2151:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2137:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1445,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "2162:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2137:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2170:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1439,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2129:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2129:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "2129:73:5"
											},
											{
												"assignments": [
													1451,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1451,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2296:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1464,
														"src": "2291:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1450,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2291:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1458,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1452,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "2309:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2319:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2309:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1454,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "2332:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2309:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2290:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1460,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "2362:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2354:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "2354:78:5"
											}
										]
									},
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "1137:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2057:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2083:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "2067:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2067:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2102:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "2094:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2066:43:5"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2119:0:5"
									},
									"scope": 1707,
									"src": "2048:391:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "3269:82:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1476,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "3297:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1477,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "3305:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3311:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1475,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1482,
															1502
														],
														"referencedDeclaration": 1502,
														"src": "3284:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3284:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1474,
												"id": 1480,
												"nodeType": "Return",
												"src": "3277:67:5"
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "2445:730:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3189:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3210:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "3202:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3231:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "3218:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3218:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:35:5"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "3255:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3255:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:14:5"
									},
									"scope": 1707,
									"src": "3180:171:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "3690:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1495,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "3729:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1496,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "3737:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3743:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1498,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "3746:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1494,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1522,
															1572
														],
														"referencedDeclaration": 1572,
														"src": "3707:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1493,
												"id": 1500,
												"nodeType": "Return",
												"src": "3700:59:5"
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "3357:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3582:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3603:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "3595:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3624:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "3611:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3611:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3644:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "3630:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1488,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3630:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3594:63:5"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "3676:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3676:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3675:14:5"
									},
									"scope": 1707,
									"src": "3573:193:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1521,
										"nodeType": "Block",
										"src": "4241:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1515,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "4280:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1516,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "4288:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1517,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "4294:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4301:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1514,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1522,
															1572
														],
														"referencedDeclaration": 1572,
														"src": "4258:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1513,
												"id": 1520,
												"nodeType": "Return",
												"src": "4251:94:5"
											}
										]
									},
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "3772:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4137:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4167:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "4159:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4159:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4188:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "4175:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4202:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "4194:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4158:50:5"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "4227:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4227:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:14:5"
									},
									"scope": 1707,
									"src": "4128:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "4741:382:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1539,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4767:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1707",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1707",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4759:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1537,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4759:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4759:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4773:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4759:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1542,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1529,
																"src": "4784:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4759:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4791:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4751:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "4751:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1549,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1525,
																	"src": "4861:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1548,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "4850:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4850:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4870:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1547,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4842:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4842:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "4842:60:5"
											},
											{
												"assignments": [
													1555,
													1557
												],
												"declarations": [
													{
														"constant": false,
														"id": 1555,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4978:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1571,
														"src": "4973:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1554,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4973:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1557,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5000:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1571,
														"src": "4987:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1556,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4987:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1564,
												"initialValue": {
													"arguments": [
														{
															"id": 1562,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "5042:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1558,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "5014:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5021:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5014:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1560,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1529,
																"src": "5034:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5014:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5014:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4972:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1566,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "5082:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1567,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "5091:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1568,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "5103:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1565,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "5064:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5064:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1535,
												"id": 1570,
												"nodeType": "Return",
												"src": "5057:59:5"
											}
										]
									},
									"documentation": {
										"id": 1523,
										"nodeType": "StructuredDocumentation",
										"src": "4358:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4609:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4639:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "4631:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4660:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "4647:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4647:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4674:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "4666:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4695:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "4681:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1530,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4681:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:78:5"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "4727:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4727:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:14:5"
									},
									"scope": 1707,
									"src": "4600:523:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "5400:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1583,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "5436:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1584,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "5444:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5450:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1582,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1589,
															1624
														],
														"referencedDeclaration": 1624,
														"src": "5417:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5417:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1581,
												"id": 1587,
												"nodeType": "Return",
												"src": "5410:80:5"
											}
										]
									},
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "5129:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5309:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5336:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "5328:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5328:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5357:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "5344:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1576,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5344:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5327:35:5"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "5386:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5386:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5385:14:5"
									},
									"scope": 1707,
									"src": "5300:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "5809:288:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1603,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "5838:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1602,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "5827:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5827:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5847:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1601,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5819:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5819:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "5819:67:5"
											},
											{
												"assignments": [
													1609,
													1611
												],
												"declarations": [
													{
														"constant": false,
														"id": 1609,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5962:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1623,
														"src": "5957:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1608,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5957:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5984:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1623,
														"src": "5971:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1610,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5971:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1616,
												"initialValue": {
													"arguments": [
														{
															"id": 1614,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "6016:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1612,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1592,
															"src": "5998:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6005:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5998:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5956:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1618,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "6056:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1619,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "6065:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1620,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "6077:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1617,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "6038:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6038:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1600,
												"id": 1622,
												"nodeType": "Return",
												"src": "6031:59:5"
											}
										]
									},
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "5503:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5690:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5717:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "5709:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5738:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "5725:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1593,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5725:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5758:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "5744:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1595,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5744:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5708:63:5"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "5795:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1598,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5795:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5794:14:5"
									},
									"scope": 1707,
									"src": "5681:416:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1640,
										"nodeType": "Block",
										"src": "6373:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1635,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "6411:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1636,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "6419:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6425:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1634,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1641,
															1676
														],
														"referencedDeclaration": 1676,
														"src": "6390:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1633,
												"id": 1639,
												"nodeType": "Return",
												"src": "6383:84:5"
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "6103:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6285:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6314:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "6306:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6306:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6335:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "6322:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6322:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:35:5"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "6359:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6359:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:14:5"
									},
									"scope": 1707,
									"src": "6276:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "6785:292:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1655,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1644,
																	"src": "6814:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1654,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "6803:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6803:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6795:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6795:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "6795:69:5"
											},
											{
												"assignments": [
													1661,
													1663
												],
												"declarations": [
													{
														"constant": false,
														"id": 1661,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6940:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1675,
														"src": "6935:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1660,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6935:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1663,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6962:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1675,
														"src": "6949:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1662,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6949:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1668,
												"initialValue": {
													"arguments": [
														{
															"id": 1666,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "6996:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1664,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "6976:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6983:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6976:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6976:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6934:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1670,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "7036:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1671,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "7045:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1672,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "7057:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1669,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "7018:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7018:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1652,
												"id": 1674,
												"nodeType": "Return",
												"src": "7011:59:5"
											}
										]
									},
									"documentation": {
										"id": 1642,
										"nodeType": "StructuredDocumentation",
										"src": "6480:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6669:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6698:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "6690:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6690:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "6706:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1645,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6706:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6739:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "6725:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6725:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6689:63:5"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "6771:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6771:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6770:14:5"
									},
									"scope": 1707,
									"src": "6660:417:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "7212:596:5",
										"statements": [
											{
												"condition": {
													"id": 1687,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1678,
													"src": "7226:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1703,
													"nodeType": "Block",
													"src": "7283:519:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1691,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1680,
																		"src": "7367:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7378:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7367:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7387:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7367:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1701,
																"nodeType": "Block",
																"src": "7739:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1698,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1682,
																					"src": "7764:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1697,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7757:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7757:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1700,
																		"nodeType": "ExpressionStatement",
																		"src": "7757:20:5"
																	}
																]
															},
															"id": 1702,
															"nodeType": "IfStatement",
															"src": "7363:429:5",
															"trueBody": {
																"id": 1696,
																"nodeType": "Block",
																"src": "7390:343:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7574:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7596:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7625:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7619:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7619:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7600:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7668:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7672:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7664:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7664:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7685:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7657:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7657:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7657:44:5"
																				}
																			]
																		},
																		"evmVersion": "paris",
																		"externalReferences": [
																			{
																				"declaration": 1680,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7625:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1680,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7672:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1695,
																		"nodeType": "InlineAssembly",
																		"src": "7565:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1704,
												"nodeType": "IfStatement",
												"src": "7222:580:5",
												"trueBody": {
													"id": 1690,
													"nodeType": "Block",
													"src": "7235:42:5",
													"statements": [
														{
															"expression": {
																"id": 1688,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1680,
																"src": "7256:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1686,
															"id": 1689,
															"nodeType": "Return",
															"src": "7249:17:5"
														}
													]
												}
											}
										]
									},
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "7092:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7115:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "7110:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1677,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7110:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7137:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "7124:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1679,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7124:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7163:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "7149:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1681,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7149:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7109:67:5"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "7198:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1684,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7198:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7197:14:5"
									},
									"scope": 1707,
									"src": "7083:725:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1708,
							"src": "126:7684:5",
							"usedErrors": []
						}
					],
					"src": "33:7778:5"
				},
				"id": 5
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1730
						]
					},
					"id": 1731,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1709,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1730,
							"linearizedBaseContracts": [
								1730
							],
							"name": "Context",
							"nameLocation": "572:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "648:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1714,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "669:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1713,
												"id": 1716,
												"nodeType": "Return",
												"src": "658:17:6"
											}
										]
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:6"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "639:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:6"
									},
									"scope": 1730,
									"src": "586:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "755:165:6",
										"statements": [
											{
												"expression": {
													"id": 1723,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "765:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1730",
														"typeString": "contract Context"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "765:4:6"
											},
											{
												"expression": {
													"expression": {
														"id": 1725,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "905:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "909:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "905:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1722,
												"id": 1727,
												"nodeType": "Return",
												"src": "898:15:6"
											}
										]
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:6"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "739:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:6"
									},
									"scope": 1730,
									"src": "688:232:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1731,
							"src": "554:368:6",
							"usedErrors": []
						}
					],
					"src": "33:890:6"
				},
				"id": 6
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
					"exportedSymbols": {
						"IERC1820Registry": [
							1820
						]
					},
					"id": 1821,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1732,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1820Registry",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1733,
								"nodeType": "StructuredDocumentation",
								"src": "58:619:7",
								"text": " @dev Interface of the global ERC1820 Registry, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n implementers for interfaces in this registry, as well as query support.\n Implementers may be shared by multiple accounts, and can also implement more\n than a single interface for each account. Contracts can implement interfaces\n for themselves, but externally-owned accounts (EOA) must delegate this to a\n contract.\n {IERC165} interfaces can also be queried via the registry.\n For an in-depth explanation and source code analysis, see the EIP text."
							},
							"fullyImplemented": false,
							"id": 1820,
							"linearizedBaseContracts": [
								1820
							],
							"name": "IERC1820Registry",
							"nameLocation": "688:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "711:445:7",
										"text": " @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."
									},
									"functionSelector": "5df8122f",
									"id": 1741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setManager",
									"nameLocation": "1170:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1189:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "1181:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "1206:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "1198:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1180:37:7"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:0:7"
									},
									"scope": 1820,
									"src": "1161:66:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "1233:90:7",
										"text": " @dev Returns the manager for `account`.\n See {setManager}."
									},
									"functionSelector": "3d584063",
									"id": 1749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getManager",
									"nameLocation": "1337:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1356:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "1348:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1347:17:7"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "1388:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1387:9:7"
									},
									"scope": 1820,
									"src": "1328:69:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "1403:815:7",
										"text": " @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."
									},
									"functionSelector": "29965a1d",
									"id": 1759,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setInterfaceImplementer",
									"nameLocation": "2232:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2264:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "2256:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "_interfaceHash",
												"nameLocation": "2281:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "2273:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1753,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2273:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "2305:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "2297:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2297:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:62:7"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2326:0:7"
									},
									"scope": 1820,
									"src": "2223:104:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "2333:382:7",
										"text": " @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."
									},
									"functionSelector": "aabbb8ca",
									"id": 1769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getInterfaceImplementer",
									"nameLocation": "2729:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2761:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "2753:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "_interfaceHash",
												"nameLocation": "2778:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "2770:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1763,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:41:7"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "2817:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2817:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:9:7"
									},
									"scope": 1820,
									"src": "2720:106:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "2832:196:7",
										"text": " @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
									},
									"functionSelector": "65ba36c1",
									"id": 1777,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "interfaceHash",
									"nameLocation": "3042:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "interfaceName",
												"nameLocation": "3072:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "3056:29:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3056:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3055:31:7"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "3110:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1774,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3110:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3109:9:7"
									},
									"scope": 1820,
									"src": "3033:86:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "3125:260:7",
										"text": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache."
									},
									"functionSelector": "a41e7d51",
									"id": 1785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateERC165Cache",
									"nameLocation": "3399:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3425:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "3417:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3441:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "3434:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1781,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3434:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3416:37:7"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3462:0:7"
									},
									"scope": 1820,
									"src": "3390:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "3469:536:7",
										"text": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
									},
									"functionSelector": "f712f3e8",
									"id": 1795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementsERC165Interface",
									"nameLocation": "4019:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4053:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "4045:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4045:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4069:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "4062:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1789,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4062:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:37:7"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "4105:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4105:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4104:6:7"
									},
									"scope": 1820,
									"src": "4010:101:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "4117:313:7",
										"text": " @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
									},
									"functionSelector": "b7056765",
									"id": 1805,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementsERC165InterfaceNoCache",
									"nameLocation": "4444:32:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4485:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "4477:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4477:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4501:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "4494:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1799,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4494:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:37:7"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "4537:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1802,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4537:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4536:6:7"
									},
									"scope": 1820,
									"src": "4435:108:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db153",
									"id": 1813,
									"name": "InterfaceImplementerSet",
									"nameLocation": "4555:23:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4595:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "4579:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"indexed": true,
												"mutability": "mutable",
												"name": "interfaceHash",
												"nameLocation": "4620:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "4604:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1808,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4604:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "4651:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "4635:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4635:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:85:7"
									},
									"src": "4549:115:7"
								},
								{
									"anonymous": false,
									"eventSelector": "605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a4350",
									"id": 1819,
									"name": "ManagerChanged",
									"nameLocation": "4676:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4707:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "4691:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4691:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"indexed": true,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "4732:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "4716:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4690:53:7"
									},
									"src": "4670:74:7"
								}
							],
							"scope": 1821,
							"src": "678:4068:7",
							"usedErrors": []
						}
					],
					"src": "33:4714:7"
				},
				"id": 7
			}
		}
	}
}